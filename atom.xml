<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>comebey</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.rootfw.com/"/>
  <updated>2020-08-06T16:33:10.002Z</updated>
  <id>https://www.rootfw.com/</id>
  
  <author>
    <name>comebey</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Github API</title>
    <link href="https://www.rootfw.com/posts/87f1021.html"/>
    <id>https://www.rootfw.com/posts/87f1021.html</id>
    <published>2020-08-06T13:09:35.000Z</published>
    <updated>2020-08-06T16:33:10.002Z</updated>
    
    <content type="html"><![CDATA[<article class="message is-warning"><div class="message-body"><p>对于常用Github的用户来说，经常有一些自动化的需求。比如我的需求是定时备份Github的issues和comments到本地。以下为Github的API的使用参考</p></div></article><a id="more"></a><h3 id="基本访问路径-Root-Endpoints"><a href="#基本访问路径-Root-Endpoints" class="headerlink" title="基本访问路径 (Root Endpoints)"></a>基本访问路径 (Root Endpoints)</h3><article class="message is-info"><div class="message-body"><p>一开始读文档的时候，照着它的事例直接在命令行里curl，或者在InSomnia或Postman软件里访问，都完美显示200状态。可是一旦把链接里改写成自己的用户名就各种显示404无页面。还以为是授权问题，然后在页头HEADER中按照各种方式试了username和token密钥，都没用还是404。结果发现，原来不是方法的问题，纯粹是链接地址没写对！<br>实际上只是读取的话，完全不用任何授权，可以在命令行、Insomnia、网页等各种情况下直接输入链接访问任何人的所有公开信息。<br>然后对照官方路径列表Root Endpoints得到的链接，好像怎么访问都不对。反而在Stackoverflow中看到的一个链接，顺藤摸瓜自己发现了各种正确的访问路径，总结如下：</p></div></article><p>首先！访问的链接最后不能有/。如<a href="https://api.github.com/users/solomonxie是可以访问到我个人信息的，但是https://api.github.com/users/solomonxie/就不行了，唯一不同是多了一个/">https://api.github.com/users/solomonxie是可以访问到我个人信息的，但是https://api.github.com/users/solomonxie/就不行了，唯一不同是多了一个/</a>.<br>其次！不同于一般URL访问，GIthub的API访问链接是区分大小写的！<br>个人主要信息。 <a href="https://api.github.com/users/用户名,得到数据如下图：">https://api.github.com/users/用户名,得到数据如下图：</a><br>image</p><p>个人所有repo。<a href="https://api.github.com/users/用户名/repos。会得到一个repo的JSON格式列表。">https://api.github.com/users/用户名/repos。会得到一个repo的JSON格式列表。</a><br>repo详细信息。<a href="https://api.github.com/repos/用户名/仓库名。repo的路径就开始和个人信息不同了。">https://api.github.com/repos/用户名/仓库名。repo的路径就开始和个人信息不同了。</a><br>获取某个repo的内容列表。<a href="https://api.github.com/repos/solomonxie/gists/contents，注意这只会返回根目录的内容。">https://api.github.com/repos/solomonxie/gists/contents，注意这只会返回根目录的内容。</a><br>获取repo中子目录的内容列表。<a href="https://api.github.com/repos/solomonxie/gists/contents/目录名。一定要注意这里一定要完全遵循原文件名的大小写，否则无法获得信息。如果是更深层的内容，则在链接列按照顺序逐级写上目录名称。">https://api.github.com/repos/solomonxie/gists/contents/目录名。一定要注意这里一定要完全遵循原文件名的大小写，否则无法获得信息。如果是更深层的内容，则在链接列按照顺序逐级写上目录名称。</a><br>获取repo中某文件信息（不包括内容）。<a href="https://api.github.com/repos/solomonxie/gists/contents/文件路径。文件路径是文件的完整路径，区分大小写。只会返回文件基本信息。">https://api.github.com/repos/solomonxie/gists/contents/文件路径。文件路径是文件的完整路径，区分大小写。只会返回文件基本信息。</a><br>获取某文件的原始内容（Raw）。1. 通过上面的文件信息中提取download_url这条链接，就能获取它的原始内容了。2. 或者直接访问：<a href="https://raw.githubusercontent.com/用户名/仓库名/分支名/文件路径">https://raw.githubusercontent.com/用户名/仓库名/分支名/文件路径</a><br>repo中所有的commits列表。<a href="https://api.github.com/repos/用户名/仓库名/commits。">https://api.github.com/repos/用户名/仓库名/commits。</a><br>某一条commit详情。<a href="https://api.github.com/repos/用户名/仓库名/commits/某一条commit的SHA">https://api.github.com/repos/用户名/仓库名/commits/某一条commit的SHA</a><br>issues列表。<a href="https://api.github.com/repos/用户名/仓库名/issues。">https://api.github.com/repos/用户名/仓库名/issues。</a><br>某条issue详情。<a href="https://api.github.com/repos/用户名/仓库名/issues/序号。issues都是以1,2,3这样的序列排号的。">https://api.github.com/repos/用户名/仓库名/issues/序号。issues都是以1,2,3这样的序列排号的。</a><br>某issue中的comments列表。<a href="https://api.github.com/repos/用户名/仓库名/issues/序号/comments。">https://api.github.com/repos/用户名/仓库名/issues/序号/comments。</a><br>某comment详情。<a href="https://api.github.com/repos/用户名/仓库名/issues/comments/评论详情的ID。其中评论ID是从issues列表中获得的。">https://api.github.com/repos/用户名/仓库名/issues/comments/评论详情的ID。其中评论ID是从issues列表中获得的。</a></p><h3 id="查询参数-Parameters"><a href="#查询参数-Parameters" class="headerlink" title="查询参数 (Parameters)"></a>查询参数 (Parameters)</h3><p>如果在上面基本链接中加入查询条件，那么返回的数据就是filtered，过滤了的。比如要求只返回正在开放的issues，或者让列表数据分页显示。常用如下：</p><p>分页功能。格式是?page=页数&amp;per_page=每页包含数量。<br>如<a href="https://api.github.com/users/solomonxie/repos?page=2&amp;per_page=3">https://api.github.com/users/solomonxie/repos?page=2&amp;per_page=3</a></p><p>issues状态。格式是?state=状态。<br>如<a href="https://api.github.com/repos/solomonxie/solomonxie.github.io/issues?state=closed">https://api.github.com/repos/solomonxie/solomonxie.github.io/issues?state=closed</a></p>]]></content>
    
    <summary type="html">
    
      &lt;article class=&quot;message is-warning&quot;&gt;&lt;div class=&quot;message-body&quot;&gt;
&lt;p&gt;对于常用Github的用户来说，经常有一些自动化的需求。比如我的需求是定时备份Github的issues和comments到本地。以下为Github的API的使用参考&lt;/p&gt;
&lt;/div&gt;&lt;/article&gt;
    
    </summary>
    
    
      <category term="github" scheme="https://www.rootfw.com/categories/github/"/>
    
    
      <category term="github" scheme="https://www.rootfw.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>新版V2ray+WebSocket+TLS+Nginx</title>
    <link href="https://www.rootfw.com/posts/d2834d54.html"/>
    <id>https://www.rootfw.com/posts/d2834d54.html</id>
    <published>2020-07-28T14:18:07.000Z</published>
    <updated>2020-08-07T11:46:21.899Z</updated>
    
    <content type="html"><![CDATA[<h3 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h3><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install curl</span><br></pre></td></tr></table></figure><h3 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h3><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum install curl</span><br></pre></td></tr></table></figure><h3 id="centos或debian安装完后执行下面代码"><a href="#centos或debian安装完后执行下面代码" class="headerlink" title="centos或debian安装完后执行下面代码"></a>centos或debian安装完后执行下面代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;v2fly&#x2F;fhs-install-v2ray&#x2F;master&#x2F;install-release.sh</span><br><span class="line">curl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;v2fly&#x2F;fhs-install-v2ray&#x2F;master&#x2F;install-dat-release.sh</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装和更新V2Ray"><a href="#安装和更新V2Ray" class="headerlink" title="安装和更新V2Ray"></a>安装和更新V2Ray</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-release.sh</span><br></pre></td></tr></table></figure><h3 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">info: unzip is installed.</span><br><span class="line">info: Extract the V2Ray package to &#x2F;tmp&#x2F;tmp.RS0y2YR2ZS&#x2F; and prepare it for installation.</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;bin&#x2F;v2ray</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;bin&#x2F;v2ctl</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;v2ray&#x2F;geoip.dat</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;v2ray&#x2F;geosite.dat</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;00_log.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;01_api.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;02_dns.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;03_routing.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;04_policy.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;05_inbounds.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;06_outbounds.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;07_transport.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;08_stats.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;09_reverse.json</span><br><span class="line">installed: &#x2F;var&#x2F;log&#x2F;v2ray&#x2F;</span><br><span class="line">installed: &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;v2ray.service</span><br><span class="line">installed: &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;v2ray@.service</span><br></pre></td></tr></table></figure><h3 id="安裝最新發行的geoip-dat和geosite-dat"><a href="#安裝最新發行的geoip-dat和geosite-dat" class="headerlink" title="安裝最新發行的geoip.dat和geosite.dat"></a>安裝最新發行的geoip.dat和geosite.dat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-dat-release.sh</span><br></pre></td></tr></table></figure><h3 id="创建编辑配置文件"><a href="#创建编辑配置文件" class="headerlink" title="创建编辑配置文件"></a>创建编辑配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray</span><br></pre></td></tr></table></figure><p>在/usr/local/etc/v2ray下面创建一个名为config.json配置文件<br>复制以下代码到config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复制以下代码</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span> : &#123;</span><br><span class="line">    <span class="attr">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">    <span class="attr">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>,</span><br><span class="line">    <span class="attr">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"inbound"</span>: &#123;</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">9000</span>, <span class="comment">//重点(此端口与nginx配置保持一致)</span></span><br><span class="line">    <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>, <span class="comment">//重点(此端口与nginx配置保持一致)</span></span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">      <span class="attr">"clients"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"id"</span>: <span class="string">"eb950add-608e-409d-937f-e797324387093z"</span>, <span class="comment">//你的UUID，可更改需与客户端保持一致 </span></span><br><span class="line">          <span class="attr">"level"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"alterId"</span>: <span class="number">64</span> <span class="comment">//此ID也需与客户端保持一致（不要设置超过100以上可自定义）</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">   <span class="attr">"streamSettings"</span>:&#123;</span><br><span class="line">      <span class="attr">"network"</span>: <span class="string">"ws"</span>, <span class="comment">//可设置tcp等</span></span><br><span class="line">      <span class="attr">"wsSettings"</span>: &#123;</span><br><span class="line">           <span class="attr">"path"</span>: <span class="string">"/ray"</span> <span class="comment">//与nginx配置相关（可自定义）</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"outbound"</span>: &#123;</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"outboundDetour"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"strategy"</span>: <span class="string">"rules"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">      <span class="attr">"rules"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">          <span class="attr">"ip"</span>: [</span><br><span class="line">            <span class="string">"0.0.0.0/8"</span>,</span><br><span class="line">            <span class="string">"10.0.0.0/8"</span>,</span><br><span class="line">            <span class="string">"100.64.0.0/10"</span>,</span><br><span class="line">            <span class="string">"127.0.0.0/8"</span>,</span><br><span class="line">            <span class="string">"169.254.0.0/16"</span>,</span><br><span class="line">            <span class="string">"172.16.0.0/12"</span>,</span><br><span class="line">            <span class="string">"192.0.0.0/24"</span>,</span><br><span class="line">            <span class="string">"192.0.2.0/24"</span>,</span><br><span class="line">            <span class="string">"192.168.0.0/16"</span>,</span><br><span class="line">            <span class="string">"198.18.0.0/15"</span>,</span><br><span class="line">            <span class="string">"198.51.100.0/24"</span>,</span><br><span class="line">            <span class="string">"203.0.113.0/24"</span>,</span><br><span class="line">            <span class="string">"::1/128"</span>,</span><br><span class="line">            <span class="string">"fc00::/7"</span>,</span><br><span class="line">            <span class="string">"fe80::/10"</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>v2ray调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart v2ray</span><br><span class="line">sudo systemctl status -l v2ray</span><br></pre></td></tr></table></figure><p>设置v2ray开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable v2ray</span><br></pre></td></tr></table></figure><p>打开 80（HTTP）和 443（HTTPS）端口(如果看过我前几期视频，确定防火墙规则设置好了，谷歌云可以忽略。其他品牌服务器请确认已经开启了80和443端口如果没有可尝试下面代码操作或者服务器网页端<br>开启<code>http80端口</code>和<code>https 443端口</code>)</p><p>也可以通过下面的命令来打开这两个端口:请自行开启防火墙开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=http</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=https</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="安装NGINX"><a href="#安装NGINX" class="headerlink" title="安装NGINX"></a>安装NGINX</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装 EPEL 仓库（谷歌云忽略此步骤，如果你是使用其他品牌vps服务器如果没有安装EPEL请先安装）</span></span><br><span class="line">sudo yum install epel-release</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装 Nginx  【 yum remove nginx 如果想删除nginx卸载命令 】</span></span><br><span class="line">sudo yum install nginx</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx.service         <span class="comment">#设置开机启动Nginx</span></span><br><span class="line"></span><br><span class="line">sudo systemctl start nginx.service          <span class="comment">#启动Nginx服务</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">调试代码如下：</span><br><span class="line">sudo systemctl start nginx.service                //开启 Nginx</span><br><span class="line">sudo systemctl stop nginx.service                //停止 Nginx</span><br><span class="line">sudo systemctl status -l nginx.service          //查看 Nginx运行状态</span><br><span class="line">sudo systemctl restart nginx.service            //重新启动 Nginx</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> nginx.service           //取消开机启动 Nginx</span><br><span class="line">sudo systemctl reload nginx.service           //重载Nginx (如更改Nginx配置需要重新载入数据)</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx.service            //开机启动</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">调试代码如下： Nginx调试也可以不需要代码后面添加 **.service** 请先**sudo systemctl start nginx.service**</span><br><span class="line">和**sudo systemctl <span class="built_in">enable</span> nginx.service** 然后在通过下面代码也可以调试.</span><br><span class="line"></span><br><span class="line">sudo systemctl start nginx              //开启 Nginx</span><br><span class="line">sudo systemctl stop nginx              //停止 Nginx</span><br><span class="line">sudo systemctl status -l nginx        //查看 Nginx运行状态</span><br><span class="line">sudo systemctl restart nginx             //重新启动 Nginx</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> nginx           //取消开机启动 Nginx</span><br><span class="line">sudo systemctl reload nginx          //重载Nginx (如更改Nginx配置需要重新载入数据)</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx          //开机启动</span><br></pre></td></tr></table></figure><p>通过以上方式安装的 Nginx，所有相关的配置文件都在 /etc/nginx/ 目录中<br><strong>Nginx 的主配置文件是 /etc/nginx/nginx.conf</strong><br><strong>Nginx 日志文件（access.log 和 error.log ）位于 /var/log/nginx/ 目录中。</strong></p><p>如果在设置完成之后不能成功使用，可能是由于 SElinux 机制(如果你是 <code>CentOS 7</code> 的用户请特别留意SElinux 这一机制)阻止了 Nginx 转发向内网的数据<br>如果是这样的话，在V2Ray的日志里不会有访问信息，在 Nginx 的日志里会出现大量的 “Permission Denied” 字段<br>要解决这一问题需要在终端下键入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect 1    &#x2F;&#x2F;debian忽略</span><br></pre></td></tr></table></figure><p>验证 Nginx 是否成功启动，可以在浏览器中打开 <a href="http://YOUR_IP">http://YOUR_IP</a>   注意：打开则显示centos网页 但是提示不安全网站没开启ssl加密https</p><h3 id="四-生成证书"><a href="#四-生成证书" class="headerlink" title="四.生成证书"></a>四.生成证书</h3><p><strong>如果你已经有其他证书可忽略，把证书和密钥放到服务器指定目录下，只需在Nginx 中指定 证书和密钥路径。申请证书方法太多可通过安装acme.sh工具生成证书或其他方法生成证书，可Google搜索。</strong></p><p><strong>1.安装acem.sh证书生成工具，以下提供3种方法安装，选其中任意一种方法安装证书工具 (温馨提示：自动升级acme.sh在root下输入 acme.sh upgrade)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh   // 如提示安装失败 请先安装curl 输入 yum -y install curl</span><br><span class="line"></span><br><span class="line">wget -O -  https://get.acme.sh | sh     //如提示安装失败请（先安装wget）输入 yum -y install wget 已经安装了忽略</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/acmesh-official/acme.sh.git   // 如提示安装失败 先安装git 已经安装了的忽略 输入 yum install git</span><br><span class="line"><span class="built_in">cd</span> ./acme.sh</span><br><span class="line">./acme.sh --install</span><br></pre></td></tr></table></figure><p>通过以上代码安装acme.sh提示红色抱错 你可以按实际相关情况而定安装依赖 比如安装socat 或者 netcat<br>       <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">centos7  yum install socat  <span class="comment">#通过80端口生成证书的依赖</span></span><br><span class="line">centos7  yum isntall netcat</span><br><span class="line"></span><br><span class="line">debian  apt-get install openssl cron socat curl</span><br><span class="line">debian  apt-get -y install netcat</span><br><span class="line"></span><br><span class="line">安装成功后执行 <span class="built_in">source</span> ~/.bashrc  以确保脚本所设置的命令别名生效</span><br></pre></td></tr></table></figure></p><p><strong>2.生成证书 路径为/root/.acme.sh文件下 安装好后可自行查看</strong><br>  <strong>温馨提示：通过acme.sh生成证书有多种方法：</strong><br>  例如—自动DNS API集成 如：cloudflare DNS API 令牌 和 使用全局API密钥 acme.sh支持大多数dns生成证书<br>  例如—使用DNS手动模式，等多种其他安装方法，如果你是个好学的人可Google </p><p>  生成证书如下：本期视频只用指定端口 生成证书 <code>**推荐使用443端口生成证书**</code>（一般用单域名足以，毕竟是翻墙用无需搞那么多花里胡哨的多域，比如：主域baidu.com那么不建议使用<a href="http://www.baidu.com,因为是翻墙的前端web请自定义比如tw.baidu.com,前缀tw可以自定义请控制三个字符，主域baidu.com和二级www.baidu.com可以备用你懂的）">www.baidu.com,因为是翻墙的前端web请自定义比如tw.baidu.com,前缀tw可以自定义请控制三个字符，主域baidu.com和二级www.baidu.com可以备用你懂的）</a></p><p><strong>1.通过侦听80端口申请证书，如果80端口被占用,请使用443端口,请确保这些端口都打开了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone -k ec-256</span><br></pre></td></tr></table></figure><p><strong>2.如果您80在反向代理或负载均衡器后面使用非标准端口，则可以–httpport用来指定端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone --httpport 端口</span><br></pre></td></tr></table></figure><p><strong>3.侦听443端口以颁发证书，请确保443端口开启</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn -k ec-256</span><br></pre></td></tr></table></figure><p><strong>4.如果您443在反向代理或负载均衡器后面使用非标准端口，则可以–tlsport用来指定端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn --tlsport 端口</span><br></pre></td></tr></table></figure><p>  <strong>-k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书</strong></p><h3 id="证书和密钥安装到指定路径"><a href="#证书和密钥安装到指定路径" class="headerlink" title="证书和密钥安装到指定路径"></a>证书和密钥安装到指定路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;v2ray （路径可自定义）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ecc 安装代码 sudo ~&#x2F;.acme.sh&#x2F;acme.sh --installcert -d 域名 --fullchainpath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.crt --keypath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.key --ecc</span><br><span class="line"></span><br><span class="line">rsa 安装代码 sudo ~&#x2F;.acme.sh&#x2F;acme.sh --installcert -d 域名 --fullchainpath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.crt --keypath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.key</span><br></pre></td></tr></table></figure><h3 id="配置NGINX-conf"><a href="#配置NGINX-conf" class="headerlink" title="配置NGINX *.conf"></a>配置NGINX *.conf</h3><p><strong>vi /etc/nginx/nginx.conf  #进入编辑配置文件：长按键盘上D键删除所有配置信息，再按键盘Ins键进入编辑模式复制如下代码黏贴到配置中编辑，填写对应自己的配置信息后。最后同时按键盘上 shift+: 键，在输入wq保存退出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include  /etc/nginx/mime.types;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 域名;</span><br><span class="line">    rewrite ^/(.*) https://域名<span class="variable">$1</span> permanent; <span class="comment">#填写自己域名</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    server <span class="comment">#关键代码</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="comment"># SSL configuration</span></span><br><span class="line">    listen 443 ssl http2 default_server;</span><br><span class="line">    listen [::]:443 ssl http2 default_server;</span><br><span class="line">    ssl_certificate /路径/*.pem; <span class="comment">#你的ssl证书*.crt 或者 *.pem都可以</span></span><br><span class="line">    ssl_certificate_key /路径/*.key; <span class="comment">#你的ssl key</span></span><br><span class="line">    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;  <span class="comment">#套件RSA和ecc不一样在下面我会分别给出</span></span><br><span class="line">    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class="line">    root /usr/share/nginx/html; <span class="comment">#网页路径，这里也可以放你们自己的html网站替换下就可以了</span></span><br><span class="line">    server_name 域名; <span class="comment">#你的服务器域名</span></span><br><span class="line"> </span><br><span class="line">    location /ray &#123; <span class="comment">#/ray 切记路径需要和v2ray服务器端和客户端保持一致 可自定义名字</span></span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_pass http://127.0.0.1:端口; <span class="comment">#此IP地址和端口需要和v2ray服务器端配置保持一致，</span></span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">    proxy_set_header Connection <span class="string">"upgrade"</span>;</span><br><span class="line">    proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>套件如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;   #RSA套件</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;  <span class="comment">#Ecc套件</span></span><br></pre></td></tr></table></figure><p><strong>修改 Nginx 配置后，请务必重新加载配置  输入 sudo systemctl reload nginx.service   #必须这样操作</strong> </p><p>最后请输入<code>reboot</code>重启服务器<code>（记得执行）</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>查询是否开启ssl 打开网站<a href="https://myssl.com/ssl.html输入自己域名，端口输入443">https://myssl.com/ssl.html输入自己域名，端口输入443</a> 或者 打开<a href="https://www.ssllabs.com/ssltest/index.html">https://www.ssllabs.com/ssltest/index.html</a> 查询 ，也可以google搜索关键字ssl查询，很多网站可以查询，评分是否到达A级别</p><p><strong>温馨提示：通过acme.sh工具生成证书请使用443端口 代码如下：sudo ~/.acme.sh/acme.sh –issue -d 域名 –alpn -k ec-256 （侦听443端口以颁发证书，请确保443端口开启 按文章流程操作80端口生成证书时会提示端口占用，当然如果你想简单点可以通过已有购买的证书或者通过宝塔申请的或者其他证书，把密钥和证书直接复制拷贝到服务器指定路径下，在配置nginx指向证书和路径。部分免费证书会缺少CA证书那么在网站ssl评分就会大打折扣，解决办法是重新把CA证书添加下就可以了</strong></p><p><strong>通过在浏览器输入自己域名查询是否发现网站加了一把锁🔒开启了https， 且网站域名ssl评分到达A 如果是，恭喜你搭建成功.如果你已经学会了那么接下来的课程会越来越有意思.</strong></p><h3 id="BBr安装"><a href="#BBr安装" class="headerlink" title="BBr安装"></a>BBr安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &quot;https:&#x2F;&#x2F;github.com&#x2F;chiakge&#x2F;Linux-NetSpeed&#x2F;raw&#x2F;master&#x2F;tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; .&#x2F;tcp.sh</span><br></pre></td></tr></table></figure><h3 id="如果想卸载V2Ray执行下面代码"><a href="#如果想卸载V2Ray执行下面代码" class="headerlink" title="如果想卸载V2Ray执行下面代码"></a>如果想卸载V2Ray执行下面代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-release.sh --remove</span><br></pre></td></tr></table></figure><h3 id="查询tls开启状态"><a href="#查询tls开启状态" class="headerlink" title="查询tls开启状态"></a>查询tls开启状态</h3><p><a href="https://www.ssllabs.com/ssltest/index.html">https://www.ssllabs.com/ssltest/index.html</a> 输入自己域名查询即可</p><p><code>温馨提示：如果想短时间内提升自己的可以参加我的培训，多年实战沉淀精品课程，vIP课程基本上所有平台找不到，一阵见血帮你打通任督二脉，人人都可以是专家</code>。<br><a href="https://www.rootfw.com/posts/4b7bc44c.html">点击课程详情</a><br><a href="https://t.me/RootInstitute">添加公开电报群</a><br><a href="/dounload/nginx.zip">Nginx前端模板下载</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;debian&quot;&gt;&lt;a href=&quot;#debian&quot; class=&quot;headerlink&quot; title=&quot;debian&quot;&gt;&lt;/a&gt;debian&lt;/h3&gt;&lt;p&gt;安装依赖&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install curl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;centos7&quot;&gt;&lt;a href=&quot;#centos7&quot; class=&quot;headerlink&quot; title=&quot;centos7&quot;&gt;&lt;/a&gt;centos7&lt;/h3&gt;&lt;p&gt;安装依赖&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum makecache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install curl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;centos或debian安装完后执行下面代码&quot;&gt;&lt;a href=&quot;#centos或debian安装完后执行下面代码&quot; class=&quot;headerlink&quot; title=&quot;centos或debian安装完后执行下面代码&quot;&gt;&lt;/a&gt;centos或debian安装完后执行下面代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -O https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;v2fly&amp;#x2F;fhs-install-v2ray&amp;#x2F;master&amp;#x2F;install-release.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl -O https:&amp;#x2F;&amp;#x2F;raw.githubusercontent.com&amp;#x2F;v2fly&amp;#x2F;fhs-install-v2ray&amp;#x2F;master&amp;#x2F;install-dat-release.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>v2ray新版本配置TLS</title>
    <link href="https://www.rootfw.com/posts/3e3bccee.html"/>
    <id>https://www.rootfw.com/posts/3e3bccee.html</id>
    <published>2020-07-28T06:54:23.000Z</published>
    <updated>2020-08-11T05:02:29.872Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hostbuf.com/t/988.html">Finalshell SSH连接工具下载</a><br><a href="https://mobaxterm.mobatek.net/download-home-edition.html">Mobaxterm SSH连接工具下载</a> </p><h3 id="1-服务器时间同步"><a href="#1-服务器时间同步" class="headerlink" title="1.服务器时间同步"></a>1.服务器时间同步</h3><p>设置硬件时钟调整为与本地时钟一致, 设置时区为上海 date -R 是查看服务器当前时间<br>centos7时间同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date -R</span><br><span class="line">timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><a id="more"></a><p>Debian系统同步时间如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date -R</span><br><span class="line">rm -rf /etc/localtime</span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><h4 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h4><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install curl</span><br></pre></td></tr></table></figure><h4 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h4><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum install curl</span><br></pre></td></tr></table></figure><h3 id="2-安装【dat和release-sh】"><a href="#2-安装【dat和release-sh】" class="headerlink" title="2.安装【dat和release.sh】"></a>2.安装【dat和release.sh】</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh</span><br><span class="line">curl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-dat-release.sh or dat-release.sh</span><br></pre></td></tr></table></figure><h3 id="3-安装和更新V2Ray"><a href="#3-安装和更新V2Ray" class="headerlink" title="3.安装和更新V2Ray"></a>3.安装和更新V2Ray</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-release.sh</span><br></pre></td></tr></table></figure><h4 id="安装v2ray输入如下内容"><a href="#安装v2ray输入如下内容" class="headerlink" title="安装v2ray输入如下内容"></a>安装v2ray输入如下内容</h4><figure class="highlight diff"><figcaption><span>每行代码 " + " 号忽略</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+info: unzip is installed.</span></span><br><span class="line"><span class="addition">+info: Extract the V2Ray package to /tmp/tmp.RS0y2YR2ZS/ and prepare it for installation.</span></span><br><span class="line"><span class="addition">+installed: /usr/local/bin/v2ray</span></span><br><span class="line"><span class="addition">+installed: /usr/local/bin/v2ctl</span></span><br><span class="line"><span class="addition">+installed: /usr/local/lib/v2ray/geoip.dat</span></span><br><span class="line"><span class="addition">+installed: /usr/local/lib/v2ray/geosite.dat</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/00_log.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/01_api.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/02_dns.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/03_routing.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/04_policy.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/05_inbounds.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/06_outbounds.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/07_transport.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/08_stats.json</span></span><br><span class="line"><span class="addition">+installed: /usr/local/etc/v2ray/09_reverse.json</span></span><br><span class="line"><span class="addition">+installed: /var/log/v2ray/</span></span><br><span class="line"><span class="addition">+installed: /etc/systemd/system/v2ray.service</span></span><br><span class="line"><span class="addition">+installed: /etc/systemd/system/v2ray@.service</span></span><br></pre></td></tr></table></figure><h3 id="4-安裝最新發行的geoip-dat和geosite-dat"><a href="#4-安裝最新發行的geoip-dat和geosite-dat" class="headerlink" title="4.安裝最新發行的geoip.dat和geosite.dat"></a>4.安裝最新發行的geoip.dat和geosite.dat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-dat-release.sh</span><br></pre></td></tr></table></figure><h3 id="5-创建和编辑配置文件"><a href="#5-创建和编辑配置文件" class="headerlink" title="5.创建和编辑配置文件"></a>5.创建和编辑配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray</span><br></pre></td></tr></table></figure><p>在/usr/local/etc/v2ray下面创建一个新的config.json配置文件<br>复制以下代码到config.json</p><figure class="highlight json"><figcaption><span>/usr/local/etc/v2ray</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: <span class="number">443</span>, <span class="comment">// 建议使用 443 端口</span></span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,    </span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"23ad6b10-8d1ae3e35cd38297"</span>,  <span class="comment">//UUID</span></span><br><span class="line">            <span class="attr">"alterId"</span>: <span class="number">64</span> <span class="comment">//额外id</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"streamSettings"</span>: &#123;</span><br><span class="line">        <span class="attr">"network"</span>: <span class="string">"tcp"</span>, <span class="comment">//协议自己替换比如WS</span></span><br><span class="line">        <span class="attr">"security"</span>: <span class="string">"tls"</span>, <span class="comment">// security 要设置为 tls 才会启用 TLS</span></span><br><span class="line">        <span class="attr">"tlsSettings"</span>: &#123;</span><br><span class="line">          <span class="attr">"certificates"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">"certificateFile"</span>: <span class="string">"/etc/v2ray/v2ray.crt"</span>, <span class="comment">// 证书文件</span></span><br><span class="line">              <span class="attr">"keyFile"</span>: <span class="string">"/etc/v2ray/v2ray.key"</span> <span class="comment">// 密钥文件</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>v2ray调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart v2ray</span><br><span class="line">sudo systemctl status -l v2ray</span><br></pre></td></tr></table></figure><p>设置v2ray开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable v2ray</span><br></pre></td></tr></table></figure><h3 id="6-生成证书"><a href="#6-生成证书" class="headerlink" title="6.生成证书"></a>6.生成证书</h3><p><strong>如果你已经有其他证书可忽略，把证书和密钥放到服务器指定目录下，只需在Nginx 中指定 证书和密钥路径。申请证书方法太多可通过安装acme.sh工具生成证书或其他方法生成证书，可Google搜索。</strong></p><p><strong>1.安装acem.sh证书生成工具，以下提供3种方法安装，选其中任意一种方法安装证书工具 (温馨提示：自动升级acme.sh在root下输入 acme.sh upgrade)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh   // 如提示安装失败 请先安装curl 输入 yum -y install curl</span><br><span class="line"></span><br><span class="line">wget -O -  https://get.acme.sh | sh     //如提示安装失败请（先安装wget）输入 yum -y install wget 已经安装了忽略</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/acmesh-official/acme.sh.git   // 如提示安装失败 先安装git 已经安装了的忽略 输入 yum install git</span><br><span class="line"><span class="built_in">cd</span> ./acme.sh</span><br><span class="line">./acme.sh --install</span><br></pre></td></tr></table></figure><p>通过以上代码安装acme.sh提示红色抱错 你可以按实际相关情况而定安装依赖 比如安装socat 或者 netcat<br>       <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">centos7  yum install socat     <span class="comment">#通过80端口生成证书的依赖</span></span><br><span class="line">centos7  yum isntall netcat</span><br><span class="line"></span><br><span class="line">debian  apt-get install openssl cron socat curl</span><br><span class="line">debian  apt-get -y install netcat</span><br><span class="line"></span><br><span class="line">安装成功后执行 <span class="built_in">source</span> ~/.bashrc   <span class="comment">#以确保脚本所设置的命令别名生效</span></span><br></pre></td></tr></table></figure></p><p><strong>2.生成证书 路径为/root/.acme.sh文件下 安装好后可自行查看</strong><br>  <strong>温馨提示：通过acme.sh生成证书有多种方法：</strong><br>  例如—自动DNS API集成 如：cloudflare DNS API 令牌 和 使用全局API密钥 acme.sh支持大多数dns生成证书<br>  例如—使用DNS手动模式，等多种其他安装方法，如果你是个好学的人可Google </p><p>  生成证书如下：本期视频只用指定端口 生成证书 <strong>推荐使用443端口生成证书</strong> （一般用单域名足以，毕竟是翻墙用无需搞那么多花里胡哨的多域，比如：主域baidu.com那么不建议使用<a href="http://www.baidu.com,因为是翻墙的前端web请自定义比如tw.baidu.com,前缀tw可以自定义请不要写太长，主域baidu.com和二级www.baidu.com可以备用你懂的）">www.baidu.com,因为是翻墙的前端web请自定义比如tw.baidu.com,前缀tw可以自定义请不要写太长，主域baidu.com和二级www.baidu.com可以备用你懂的）</a></p><p><strong>1.通过侦听80端口申请证书，如果80端口被占用,请使用443端口,请确保这些端口都打开了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone -k ec-256</span><br></pre></td></tr></table></figure><p><strong>2.如果您80在反向代理或负载均衡器后面使用非标准端口，则可以–httpport用来指定端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone --httpport 端口</span><br></pre></td></tr></table></figure><p><strong>3.侦听443端口以颁发证书，请确保443端口开启</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn -k ec-256</span><br></pre></td></tr></table></figure><p><strong>4.如果您443在反向代理或负载均衡器后面使用非标准端口，则可以–tlsport用来指定端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn --tlsport 端口</span><br></pre></td></tr></table></figure><p>  <strong>-k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书</strong></p><p>温馨提示：如何80或者443端口被占用导致我们无法申请密钥和证书，我们可以通过kill封杀端口在重新申请。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">netstat -tlnp|grep 80</span><br><span class="line">或者</span><br><span class="line">netstat -tlnp|grep 443</span><br><span class="line">然后</span><br><span class="line">kill 1103（这个1103是进程端口id）</span><br><span class="line"></span><br><span class="line">如果终止不了，可以强制终止</span><br><span class="line">kill -9 1103</span><br></pre></td></tr></table></figure><h3 id="7-证书和密钥安装到指定路径"><a href="#7-证书和密钥安装到指定路径" class="headerlink" title="7.证书和密钥安装到指定路径"></a>7.证书和密钥安装到指定路径</h3><p>/etc/v2ray （路径可自定义）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ecc 安装代码 sudo ~/.acme.sh/acme.sh --installcert -d 域名 --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key --ecc</span><br><span class="line"></span><br><span class="line">rsa 安装代码 sudo ~/.acme.sh/acme.sh --installcert -d 域名 --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key</span><br></pre></td></tr></table></figure><p>將 /etc/v2ray/v2ray.key 修改為 644 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 644 &#x2F;etc&#x2F;v2ray&#x2F;v2ray.key</span><br></pre></td></tr></table></figure><h3 id="8-BBr安装"><a href="#8-BBr安装" class="headerlink" title="8.BBr安装"></a>8.BBr安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><h3 id="9-查询tls开启状态"><a href="#9-查询tls开启状态" class="headerlink" title="9.查询tls开启状态"></a>9.查询tls开启状态</h3><p><a href="https://www.ssllabs.com/ssltest/index.html">https://www.ssllabs.com/ssltest/index.html</a> 输入自己域名查询即可<br>关于config.json配置文件可以自己写，当然也包括其他各种负载均衡，反向代理。如果想短时间内提升自己的可以参加我的培训课。 </p><h3 id="10-如果想卸载V2Ray执行下面代码"><a href="#10-如果想卸载V2Ray执行下面代码" class="headerlink" title="10.如果想卸载V2Ray执行下面代码"></a>10.如果想卸载V2Ray执行下面代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-release.sh --remove</span><br></pre></td></tr></table></figure><p><a href="https://t.me/RootInstitute">添加电报群</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.hostbuf.com/t/988.html&quot;&gt;Finalshell SSH连接工具下载&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://mobaxterm.mobatek.net/download-home-edition.html&quot;&gt;Mobaxterm SSH连接工具下载&lt;/a&gt; &lt;/p&gt;
&lt;h3 id=&quot;1-服务器时间同步&quot;&gt;&lt;a href=&quot;#1-服务器时间同步&quot; class=&quot;headerlink&quot; title=&quot;1.服务器时间同步&quot;&gt;&lt;/a&gt;1.服务器时间同步&lt;/h3&gt;&lt;p&gt;设置硬件时钟调整为与本地时钟一致, 设置时区为上海 date -R 是查看服务器当前时间&lt;br&gt;centos7时间同步&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;date -R&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timedatectl &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-local-rtc 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timedatectl &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-timezone Asia/Shanghai&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>v2ray官方新老脚本安装</title>
    <link href="https://www.rootfw.com/posts/f3e24172.html"/>
    <id>https://www.rootfw.com/posts/f3e24172.html</id>
    <published>2020-07-26T08:21:24.000Z</published>
    <updated>2020-08-06T11:32:01.024Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载-V2Ray"><a href="#下载-V2Ray" class="headerlink" title="下载 V2Ray"></a>下载 V2Ray</h3><ol><li><a href="https://github.com/v2ray/v2ray-core/releases">Github Release: github.com/v2ray/v2ray-core</a></li><li><a href="https://github.com/v2ray/dist/">Github 分流: github.com/v2ray/dist</a></li><li><a href="https://github.com/v2ray/homebrew-v2ray">Homebrew: github.com/v2ray/homebrew-v2ray</a></li><li><a href="https://www.archlinux.org/packages/community/x86_64/v2ray/">Arch Linux: packages/community/x86_64/v2ray</a></li><li><a href="https://snapcraft.io/v2ray-core">Snapcraft: snapcraft.io/v2ray-core</a></li><li>原安装脚本已被弃置，由 <a href="https://github.com/v2fly/fhs-install-v2ray">fhs-install-v2ray</a>替换。</li></ol><a id="more"></a><h3 id="老版本安装"><a href="#老版本安装" class="headerlink" title="老版本安装"></a>老版本安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https:&#x2F;&#x2F;install.direct&#x2F;go.sh)</span><br></pre></td></tr></table></figure><p>此脚本会自动安装以下文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;v2ray：V2Ray 程序；</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;v2ctl：V2Ray 工具；</span><br><span class="line">&#x2F;etc&#x2F;v2ray&#x2F;config.json：配置文件；</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;geoip.dat：IP 数据文件</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;geosite.dat：域名数据文件</span><br></pre></td></tr></table></figure><p>此脚本会配置自动运行脚本。自动运行脚本会在系统重启之后，自动运行 V2Ray。目前自动运行脚本只支持带有 Systemd 的系统，以及 Debian / Ubuntu 全系列。</p><p>运行脚本位于系统的以下位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;v2ray.service: Systemd</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;v2ray: SysV</span><br></pre></td></tr></table></figure><p>脚本运行完成后，你需要：<br>编辑 <code>/etc/v2ray/config.json</code> 文件来配置你需要的代理方式；<br>运行 <code>service v2ray start</code> 来启动 V2Ray 进程；<br>之后可以使用 <code>service v2ray start|stop|status|reload|restart|force-reload</code> 控制 V2Ray 的运行。</p><h3 id="新版本安装"><a href="#新版本安装" class="headerlink" title="新版本安装"></a>新版本安装</h3><h4 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h4><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install curl</span><br></pre></td></tr></table></figure><h4 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h4><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum install curl</span><br></pre></td></tr></table></figure><p>centos或者debian安装完毕依赖执行下面代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;v2fly&#x2F;fhs-install-v2ray&#x2F;master&#x2F;install-release.sh</span><br><span class="line">curl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;v2fly&#x2F;fhs-install-v2ray&#x2F;master&#x2F;install-dat-release.sh</span><br></pre></td></tr></table></figure><p>安装和更新V2Ray</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-release.sh</span><br></pre></td></tr></table></figure><p>文件路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">info: unzip is installed.</span><br><span class="line">info: Extract the V2Ray package to &#x2F;tmp&#x2F;tmp.RS0y2YR2ZS&#x2F; and prepare it for installation.</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;bin&#x2F;v2ray</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;bin&#x2F;v2ctl</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;v2ray&#x2F;geoip.dat</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;lib&#x2F;v2ray&#x2F;geosite.dat</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;00_log.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;01_api.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;02_dns.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;03_routing.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;04_policy.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;05_inbounds.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;06_outbounds.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;07_transport.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;08_stats.json</span><br><span class="line">installed: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray&#x2F;09_reverse.json</span><br><span class="line">installed: &#x2F;var&#x2F;log&#x2F;v2ray&#x2F;</span><br><span class="line">installed: &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;v2ray.service</span><br><span class="line">installed: &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;v2ray@.service</span><br></pre></td></tr></table></figure><p>安裝最新發行的 geoip.dat 和 geosite.dat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-dat-release.sh</span><br></pre></td></tr></table></figure><p>创建编辑配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;etc&#x2F;v2ray</span><br></pre></td></tr></table></figure><p>在/usr/local/etc/v2ray下面创建一个新的config.json配置文件<br>复制以下代码到config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"log"</span>: &#123;</span><br><span class="line">        <span class="attr">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">        <span class="attr">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>,</span><br><span class="line">        <span class="attr">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"inbound"</span>: &#123;</span><br><span class="line">        <span class="attr">"port"</span>: <span class="number">12345</span>, <span class="comment">//请在防火墙开启对应的端口</span></span><br><span class="line">        <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,  <span class="comment">//vmess协议</span></span><br><span class="line">        <span class="attr">"settings"</span>: &#123;</span><br><span class="line">            <span class="attr">"clients"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"id"</span>: <span class="string">"db790014-700d-9b1c-d987-5aed2afa60ae"</span>,  <span class="comment">//UUid 这个ID可以通过v2ray客户端生成new替换</span></span><br><span class="line">                    <span class="attr">"level"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">"alterId"</span>: <span class="number">52</span>  <span class="comment">//额外id</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"outbound"</span>: &#123;</span><br><span class="line">        <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">        <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"inboundDetour"</span>: [],</span><br><span class="line">    <span class="attr">"outboundDetour"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">            <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">            <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"routing"</span>: &#123;</span><br><span class="line">        <span class="attr">"strategy"</span>: <span class="string">"rules"</span>,</span><br><span class="line">        <span class="attr">"settings"</span>: &#123;</span><br><span class="line">            <span class="attr">"rules"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">                    <span class="attr">"ip"</span>: [</span><br><span class="line">                        <span class="string">"0.0.0.0/8"</span>,</span><br><span class="line">                        <span class="string">"10.0.0.0/8"</span>,</span><br><span class="line">                        <span class="string">"100.64.0.0/10"</span>,</span><br><span class="line">                        <span class="string">"127.0.0.0/8"</span>,</span><br><span class="line">                        <span class="string">"169.254.0.0/16"</span>,</span><br><span class="line">                        <span class="string">"172.16.0.0/12"</span>,</span><br><span class="line">                        <span class="string">"192.0.0.0/24"</span>,</span><br><span class="line">                        <span class="string">"192.0.2.0/24"</span>,</span><br><span class="line">                        <span class="string">"192.168.0.0/16"</span>,</span><br><span class="line">                        <span class="string">"198.18.0.0/15"</span>,</span><br><span class="line">                        <span class="string">"198.51.100.0/24"</span>,</span><br><span class="line">                        <span class="string">"203.0.113.0/24"</span>,</span><br><span class="line">                        <span class="string">"::1/128"</span>,</span><br><span class="line">                        <span class="string">"fc00::/7"</span>,</span><br><span class="line">                        <span class="string">"fe80::/10"</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>v2ray调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart v2ray</span><br><span class="line">sudo systemctl status -l v2ray</span><br></pre></td></tr></table></figure><p>设置v2ray开机启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable v2ray</span><br></pre></td></tr></table></figure><h3 id="BBr安装"><a href="#BBr安装" class="headerlink" title="BBr安装"></a>BBr安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &quot;https:&#x2F;&#x2F;github.com&#x2F;chiakge&#x2F;Linux-NetSpeed&#x2F;raw&#x2F;master&#x2F;tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; .&#x2F;tcp.sh</span><br></pre></td></tr></table></figure><p>如果想卸载V2Ray执行下面代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash install-release.sh --remove</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;下载-V2Ray&quot;&gt;&lt;a href=&quot;#下载-V2Ray&quot; class=&quot;headerlink&quot; title=&quot;下载 V2Ray&quot;&gt;&lt;/a&gt;下载 V2Ray&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/v2ray/v2ray-core/releases&quot;&gt;Github Release: github.com/v2ray/v2ray-core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/v2ray/dist/&quot;&gt;Github 分流: github.com/v2ray/dist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/v2ray/homebrew-v2ray&quot;&gt;Homebrew: github.com/v2ray/homebrew-v2ray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.archlinux.org/packages/community/x86_64/v2ray/&quot;&gt;Arch Linux: packages/community/x86_64/v2ray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://snapcraft.io/v2ray-core&quot;&gt;Snapcraft: snapcraft.io/v2ray-core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;原安装脚本已被弃置，由 &lt;a href=&quot;https://github.com/v2fly/fhs-install-v2ray&quot;&gt;fhs-install-v2ray&lt;/a&gt;替换。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>设置服务器登陆密码</title>
    <link href="https://www.rootfw.com/posts/3828c730.html"/>
    <id>https://www.rootfw.com/posts/3828c730.html</id>
    <published>2020-07-26T07:18:33.000Z</published>
    <updated>2020-08-08T23:00:28.251Z</updated>
    
    <content type="html"><![CDATA[<h3 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h3><p>拿到root权限后，修改SSH配置文件<code>/etc/ssh/sshd_config</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">PasswordAuthentication no 改成 yes</span><br><span class="line">PermitRootLogin no 改成 yes</span><br></pre></td></tr></table></figure><p>设置密码,输入两次，输入<code>不提示任何字符</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>重启SSH服务，最后通过账号为root，密码为自己刚设置的通过第三方ssh登陆连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h3 id="Debian-9和10"><a href="#Debian-9和10" class="headerlink" title="Debian 9和10"></a>Debian 9和10</h3><a id="more"></a><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ssh <span class="comment">#选择安装</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#PermitRootLogin prohibit-password 改为 PermitRootLogin yes</span></span><br><span class="line"><span class="comment">#PasswordAuthentication no 改为 PasswordAuthentication yes</span></span><br></pre></td></tr></table></figure><p>设置密码,输入两次，输入<code>不提示任何字符</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>重启SSH服务，最后通过账号为root，密码为自己刚设置的通过第三方ssh登陆连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;ssh restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;centos7&quot;&gt;&lt;a href=&quot;#centos7&quot; class=&quot;headerlink&quot; title=&quot;centos7&quot;&gt;&lt;/a&gt;centos7&lt;/h3&gt;&lt;p&gt;拿到root权限后，修改SSH配置文件&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/ssh/sshd_config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PasswordAuthentication no 改成 yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PermitRootLogin no 改成 yes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置密码,输入两次，输入&lt;code&gt;不提示任何字符&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;passwd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重启SSH服务，最后通过账号为root，密码为自己刚设置的通过第三方ssh登陆连接&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;service sshd restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Debian-9和10&quot;&gt;&lt;a href=&quot;#Debian-9和10&quot; class=&quot;headerlink&quot; title=&quot;Debian 9和10&quot;&gt;&lt;/a&gt;Debian 9和10&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.rootfw.com/categories/Linux/"/>
    
      <category term="centos7" scheme="https://www.rootfw.com/categories/Linux/centos7/"/>
    
    
      <category term="linux" scheme="https://www.rootfw.com/tags/linux/"/>
    
      <category term="服务器" scheme="https://www.rootfw.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>速率换算</title>
    <link href="https://www.rootfw.com/posts/20b4bacc.html"/>
    <id>https://www.rootfw.com/posts/20b4bacc.html</id>
    <published>2020-07-24T03:02:19.000Z</published>
    <updated>2020-08-07T12:50:08.982Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="文章已进行加密，需要密码才能继续阅读." data-whm="无效的密码。请检查并重试.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入访问密码.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2c52a8b7d57e4bf372ea145d325f6360a44fa351684574c732ffbf390ee4eacf">52f0b6e8b126d4a6e49e2c3b3ecaa54f341bbbdec61a52b214a95e492f5800ebcdfa6de6e9724cd526c156fa287fa9be7ea25a193ba5afa407df94b5b4c0028d5f5ac465c22a938402e61c235033c6ca47f6b73780515fad4e5c2b3c28114a6266c11aa2df744c9db5898bcf8bd2027b0be9cdfdb3fec0cb2f17aec27bddf48fc6e2daa59f673ab4da522395b7e320414c910d6753bc6102a757813e6e96c2721a57154ee431f833c6f92108b07ed101ced226b8d4fcd5f33b6ba812c6ce36188eb2cbfe0062bdbd2e59930deba13d62ff2329cd7343f6eb523c7ae2305238f6073056fbaaf30fc24a464a5054d6584b7dc71103d66b11fd8f0223f977f1b76218733e4afec5d9a0aa34386e3558256f9f559da0a82e858f285df8a09f6243b632400d15da4f5846e2b76830e18f6facd2a29c6072c0d9cedfe44e4a9122529ae2d531eed16960869722d69fca5a1160d1b4d0be7f8e34e2b5ac885f95c957c36fe7f24eabac331818a7deadf1e529d72d438ac8f42912ed7240b8dda676768de6f4a6574f73b4783ccdcbcbc790abf335ffdcccfc592c9d4dc5c69cb2998b5c96aaf91bd6afe02e4d16f468850bd1d9d74b2305d3a2af8b9e86e89e69772ab8aadbd3ad2fd84a30a5b58e9c30d3c11a0ad2f2c24a9526736ad46dc9fd8f2f96377254b528bcacda5be2d5c263880b3cc390c240fc21a7ede3146c5d9e404dc137a0fc90b11d385080dd5099ed6e92e3843a56b64370fcec7b44eaf9e66055e3e7612f0702bfdd805d21d5cf3f024154d80c30fb80a9470e735b8f7aad357f94f5cddd87122358df7fff3df634e674ce8eedb1123d5dce97fb64259defb4dd8165e2a7a0fded5c65effe345427c379f425525996c09dbbed1385b4f92d1e95c919b72b0f3ed8457336a82cdd1f5facdcc4e186120ece073fa0e60c8acc55d5cc5f8de3ea8ddfb0e525fbf2d1ef5b6f58e77f1f123831c8fe37f60560b6aad95dcec215d420d38763887a8091ba54fc170e93fe76c5f7b7a81c708149814f06c5d6a4df43eabd61ba564c49c2b81c9038b4ad86ceac80439ef01bdea7f22b30fa36a2c6f43da72a4de54f07a33d7cc78a5fd81d433dc396157888e8310be5cbedd99cbfbe5e9927ff5726206d72477312a0ebb22740917800bc3d488307bce8a44e82f432495c7b325a1fc32db85ab0ea195cf3b3615f694ab679863b09d5fea505e96183a1c31c2afc298dd86a07e9f104dc99ea5436e291ff62b372d3eb0dbbdf4485f72e757cc1d6d98a0ed75f4af6013c3a9bb4c66728aa1cfc764a7f75f3c992d0f6883c7ed49b38718b9936fdb4f21eb3734203466b3eff36965d081593f1111df14b85c4ce606a1ecbb01451c0f6d174acf0a5e618e84a41490c4a1660cdaf2b81dbe4cab1a2a2d9576b291ea83cf005216714d0b626a1642dc0e84f1375dbfb0c1f281d4d03fe82813548aa6d08166dd3d7c2882d920f1cd465c51c9b8f3082d03d5d473a7fab819b6f053f1e4646097a1016f109f0dd029a3102863ba1549e4a7d989ee970c7de84de869f2e39f2490bd0fd9772ba793b1dc5b4a91d1b3cc4784e52982107166721fae251d18541f2665f65d23aa01d7c993bb16d7051984e0a1a58615a4491bd90f8a229008030a93dde994884e30b54f7d48eb43ac6be0fdf2c835dbb1fd7ada00bbd6cb7e22de8e95628298ab5fda8a2bbc1e28218e2ab0e00b2d9455adac78b59df27bc333fa5a4213647eb7de08c21c365e2151311c9be7c7017aa01faee2b8f289b2cf381a0de9be73f0bd2efc92ee87e9809b2b5ab477075794d5b3bc81f2cbc65188ff05b3d4a330fcadef78fc85dc97ea4d544cf2368421fb8c35caf56a4b37c8312f91a8ef55f683db06d2e03f4a0f221e07a3b1efd87a0085437535049533bee461cc908bdd2c5ecf8dad21fd4616f090616cb62fc150022751e46e8858ea370277171bea4aff6930ebc0267fe8984188a6261a1ccfe55219fcd4196937f3af226e5f90b1e27174c55b4d5d9a3c6fd42103748f5e468b4e4c1181a5fbfd268357b1bc2e4b4e1db26839d7dc1e3704283b3603bd18a0541673b905bf81fbabe81a566d4d1855807a21ee4211b565a1ce6c1808cdc688542aa20402a043d9f089e63fece6d2fef0212c78a96a25f4ad6732aa307154dd93a2635c519d08a8f501632381bbd66294d7a97d72d39c4a95ace7a56eb83293ce95d3c766810a4bab8fb60ac91b84beaeef638af1f9eed78f1cde1c6134ca66657b28e2db6edcbacbd18370fddd6821167629ad6d5ad2b959532925218fad6a12ad24f8e67945e5c2d65c3ffd57aa6f610b136bae682217e1dd3a865c83e1d8f821713e4775d143bf372e74c3bcd974b00dbe9e4b03605a8ce789f003cecccf015976ffe7b83467ac78555df0841224bef66e3419bc7536d3d4ca0ab49b60caa0e4b80d7c9738ae31bedd83a6a295bbd029b20b3981052cbc4fbca022525579b4ba48a0746dda476d3ca41db8429444e5bd6fa177bb14faa73854000dd76fd1856e9acf6ce1a929211eaeac9846b03984009ac8c02e4a531c2dc7869950996b553267676df55a4dcd1bdef3b0a01a22e6504efedfe3864db634467dfbfe79de262827eb8562c8bb03ed62bba4b8cb589f80097ebe390a424e1aac8faaad5a2469cfac70171d88134075e011ec3a9f12d99181cec134d80d1a263957d96579bd1c2d5c537e18c842e6a5139ebd84b48a75b2de9053d8dfff47341bb9ecac1c9b439ba417ddf933ab42e6b78d9b4337505cbdc06d25e3d494ab71db631852e056801566120891a2ff05bc7b08ba35cf900579ded10e514c06a3561c994573434eac00e4b6ac3827dbae1bccf5ac9fc71a990234a258fb871c2e2254d958b3eeca2d943d86806959a33d1f7508bca9dc04551566293ef51330b07de1be7566220e294216b0492f65bc3d855252ce91f689fef39e88840edbffc147a6a071c063a31299f2b6819dc95bfdaea6e1d3e65b3fe5222dab0490fb0f7601321159cd8b895554a1463f34c93da0b352280a29eb91349afa04a535862ca3c68d89e8ca915baa78fca45b1fa4cd1130b051df1eff07fd6bc6a78c8d5a682b9d9194943721e0e54387c7506ce43ea4e805f22f2a33845c3195fd6c9b0b9bba51d2ce118a3fb693bc389d7e7ecc60da6a6cbb69a3732e9296e6c0ea03e9474bf871e0cc68b8e7e4cff4f10c7c526edddee43c91c2a1dbe866e31971924c1bd6dd4e1cc0a3cab4bcfd8ae0bfbc33ad3fac7b0ff8deeeaae64539d106243185d6a9f17c09b8c5756ba6a3a1d5a467e5110c82971eef5912d655972fcc2bba81e743b56063221c7da13419a09e4ffd41e28bcbe754029737afb9ee2d4604dd9f8ca86f6053a895b913e41dc573bca436a1db895653b2384b9c9ba99ebb9ff40b1c543376d1eec496e7b2be861276560aff1cd5a24d204c9dfe130b7b199128803f16eac4c48f5c3807bf6d3a2c04e962365c61fbb4fd7303033a4e77f470ee6b4933f1a03e200dd44ed9c4a89fad641844ec85dd213c70067ed04d3e7f25f0f7449556bc79e2afae9612bdb2a775ff94baf6d8b4c89a1aed562c5f385ff869dc6fb8b53f092a13eb149f426d042d280d03d034d4f38233f59bb1b94db0ae60311a55f1112efcf4ce3f8ceb92055a9919aca35371fbaf2e040be88394577a3222cdb7be7effbad831dc456ddac5d2d41dc43a1e1f8126643ce3fe753657bc81f4c3d4fb78ebecf0218b3893ba398504a14b8ac66da019c68c3b0e4510c97a93d39d1f4</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      无权限访问，仅提供VIP用户学习阅读.
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
      <category term="vip" scheme="https://www.rootfw.com/tags/vip/"/>
    
  </entry>
  
  <entry>
    <title>VIP培训课程</title>
    <link href="https://www.rootfw.com/posts/4b7bc44c.html"/>
    <id>https://www.rootfw.com/posts/4b7bc44c.html</id>
    <published>2020-07-22T06:56:56.000Z</published>
    <updated>2020-08-09T23:03:51.938Z</updated>
    
    <content type="html"><![CDATA[<div class="notification is-info"><p>精品课程开课了：欢迎报名，多年实战沉淀跨平台，梯子源码解剖·一键脚本如何写·多服务器中转·匿名IP·linux实战·跨平台实战一针见血开启您的学术世界。本课程内容不在任何平台公开教学，同学们快来吧！</p></div><a id="more"></a><div class="notification is-danger"><p>感谢大家的支持，原频道Hasan W已经删除不在更新视频，新频道大家可以在YouTube自己搜索关键字comebey 或者 [点击关注]</p><h2 id="课程目录"><a href="#课程目录" class="headerlink" title="课程目录"></a>课程目录</h2><h3 id="开门见山"><a href="#开门见山" class="headerlink" title="开门见山"></a>开门见山</h3><p>多年实战横跨多平台沉淀，前后端，大数据等等！曾走过数不清的弯路，开发过主流某<code>知名</code>源码架构。因为某些核心点网络上基本学不到，必须不断实践总结的经验，那绝对不是任何平台能轻易学到的知识点。如果你真想学点有用的知识，方可报名。</p><h3 id="初级公开课程"><a href="#初级公开课程" class="headerlink" title="初级公开课程"></a>初级公开课程</h3><p>1.所有目前主流FQ开源部署，源码基础分析<br>2.各种服务器初级流量中转开源部署<br>3.各种机场模板介绍及基本部署<br>4.各种前端后端等等及习惯网络知识</p><p>所有视频我会上传YouTube，从最基础的学起，涵盖所有目前YouTube主流各类FQ原生部署方法，各种网站及博客部署等等网络知识，大家想学什么，可以给我提建议或者意见。包括一些基础的实操。我不想和大家灌输太多没用的理论，我也不想像其他UP主说相声一样，真正实操起来懂的真的没几个懂。youtube讲FQ的圈不大。YouTube缺少真正能把翻墙代码讲清楚讲透的人。从来不缺视频内容搬运，和二次创新。随便找个别人写的博客内容，拼拼凑凑。就开始录视频。最起码的版权是什么都不知道，一个不懂尊重原创作者的up不值得尊重！甚至很多朋友看了其他某些UP讲的视频来问我，说实话我感到很悲哀，如果他们解决不要你的问题，为什么要执着去学他们方法？因为有些视频内容就有误导性。但是反而大家就是喜欢看热闹。并不是点击高的视频内容一定优质，好的视频内容，建立在原创的基础，视频内容发布出来是能马上能解决你问题的，<code>一针见血</code>当然这和个人学习能力也有一定关系。那么在这初级阶段，我讲的每一期视频，只要你用心学习，哪怕多看几遍。我保证很快你能学以致用，且融会贯通。当然大家请支持任何原创视频。<code>公开电报群一个</code></p><h3 id="中级收费课程"><a href="#中级收费课程" class="headerlink" title="中级收费课程"></a>中级收费课程</h3><p>1.主流FQ原生部署中级培训，深入分析源码及功能实现，及相关理论知识。如果基础的理论知识不清楚，就输在起跑线了。<br>2.服务器中转核心知识点，服务器及多服务器延迟测试及基础知识点。相信我中转并不是那么的简单，当特殊人群需要特殊服务器做跳板去特殊地方匿名IP会开启你学术之旅。<br>3.因为特殊原因其他培训内容均不在博客中详细简介</p><p>课程针对真正想学知识，尊重知识的人，主要是大家遇到各种问题以后自己就能解决，培养自己有这种能力。大部分遇到的问题我都会让你自己亲手学会。linux系统各个版本从基础代码学起，结合到各种FQ服务，看懂核心代码真正的含义及基础功能添加，优化自己独一无二脚本。只有看懂了代码，自己知道如何优化，基本上你再去搭建任何翻墙服务是非常轻松的。包括其他等等系列课程<code>中级交流群一个</code>排除一些广告发布商进群。这也是我老群的教训。 费用366为期一年，每天一块钱</p><h3 id="高级收费课程"><a href="#高级收费课程" class="headerlink" title="高级收费课程"></a>高级收费课程</h3><p>主要针对想通过这个行业想变现盈利的朋友，各种FQ脚本深入优化，记住是深入优化，或二次开发。如何写自己的一键脚本。外贸公司中大型穿墙网络代码部署，外网访问各种功能纯代码配置等。搭建机场高级进阶，各种服务器深入学习中转，机场网站前端代码优化，后端功能添加。前端web css。网站安全维护等其他核心知识要点。<code>因为特殊原因其他培训内容均不在博客中详细简介</code> <code>高级交流群一个</code> 费用3685为期一年</p><h3 id="一对一课程"><a href="#一对一课程" class="headerlink" title="一对一课程"></a>一对一课程</h3><p>针对内心有迫切学习的欲望，尊重知识尊重版权的人。远程或直播亲自教学，一个礼拜脱变之路。课程不在此公布。费用5680，添加本人私人联系方式。笨鸟先飞！一个礼拜后可进高级交流群</p><p>所有报名截止到每年9月1号，在一年课程中所有学员中，我会选几名悟性高的学生一起和我共同开发项目。所有报名的同学请保持互相尊重谦虚的良好美德去学习。知识无价，请您尊重！也请您尊重知识产权！</p><p>以上所有视频为comebey原创视频版权所有。收费课程按需求选择购买，收费课程为本人多年实战总结的金品课。`</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;notification is-info&quot;&gt;
&lt;p&gt;精品课程开课了：欢迎报名，多年实战沉淀跨平台，梯子源码解剖·一键脚本如何写·多服务器中转·匿名IP·linux实战·跨平台实战一针见血开启您的学术世界。本课程内容不在任何平台公开教学，同学们快来吧！&lt;/p&gt;
&lt;/div&gt;
    
    </summary>
    
    
      <category term="VIP培训" scheme="https://www.rootfw.com/categories/VIP%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="文章" scheme="https://www.rootfw.com/categories/VIP%E5%9F%B9%E8%AE%AD/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="VIP" scheme="https://www.rootfw.com/tags/VIP/"/>
    
  </entry>
  
  <entry>
    <title>服务器之间延迟测试qperf</title>
    <link href="https://www.rootfw.com/posts/70b5ad4f.html"/>
    <id>https://www.rootfw.com/posts/70b5ad4f.html</id>
    <published>2020-07-08T05:58:05.000Z</published>
    <updated>2020-08-07T12:52:15.704Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="文章已进行加密，需要密码才能继续阅读." data-whm="无效的密码。请检查并重试.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入访问密码.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="0336515fd6077d621542ed5dbf2d3b03df9593c71c812ce714d825fdff3976f3">2c9c9bacf08a3bd2ddd88010db1484c91ef3fa8597139a0b7bf41fe7cd1ef8d310392587a68eed1df8445b1d3497e6bbb30f49ae3f709187e5bc4037db7e9f2f496f5d051e134a1f75794530d7cd5b03a9f520c0db3d65e51586372b013fc83b574eaeb28ab2bf689912ba316fa8831014b3c8cd0da8efad407e72f677762dd2270e0656e1979b377207954e1d754418ed284872f32ad54c760890211d8a7448c02d878677f1f89972b399261f933977bbf319233d8ca1d4eaec4bd1125f4481ccabf9485c8810c2dca388db25d83929880f17852a9312f79363e7379f7771951099b2fd0e70cf1022fa2ae53cc473636f9d6896c59a911ed764b485b4569e460106ffcf3f335e6c344fd6713b334d615bc4ad4b209a99cd660ccf467767c879716ec0a63ca3396358df6b2d2cabdcece86db868555e1b533514d9e8b8db0f983c751229ac13c7d13894fb8ba019ebe734ccdec247cf3e93e8a0c938c44ea783b54bef2b45450a2ac316abdf8e8f0072237aed61c9a9f32c79054daa0e470e5ae7d8f9c94cf65bb46fbb636331b1280641de074c007c2b2bd73954e54fe5bf23093311e39107730a3238d8cc84752a70c8d15aba0fd193098210cc2b2dd108784ca99e66d7848d6ad829c5b6f65fbf1bba9f94bcdca213f97b28106419cf8a3b41d2b2675b7c9531bf5c63586b3065c4166845e15f25d953a15168a1228f877d7f25e956da164d84023248eea0927180e6bf41460441538b07077432a16eb3ba90c2d3ac399ab0f3a2747140e89a665c892a0b3a3ee0da6980e3bd11cc97445c81b8497a11340969596173ed39a5dffac41c2aada7da6c84ca9dcbe563de86dc37b1321f8da3628e30b4e81481ed6d8a8959c3fc92485b0c11a43b10d7e9cbe97b64eed07f0e9e31e7008c5acbf0b2bc0d968570fe7952ed69667bebf23c283ec688189b5118b1a3f09235b80cb18027d75e4f5f9e513ec9de3a78a2de51d6f6281309aa82099fab965b941b3f3430afd14c1bc5f0fb2bf20cf1c2c57da1d90264b2583ea0f0f65d7ca2fded8511190c244fa9064705971d9449a26ab32c502d5f0dbb1a2c5d248f757b7a6c9218b26121583d70d0df2c78fa4b400becf1ca6422fc9813898d8261e3b177b805307d7a49f3f078aa3ca4802aa30ebdbf8ae5a684894e73b3396b3852fbd11238d3aa47e0ed74fe3256d08f860c50359d3982156b6d187f755d2c0c7bd2fdbdffd84b1315cbd7d2efd6ce8974cf9cd188f97e9bda274b06c4e9607ac060378f74810c6d936f14adb57562897d81a195dc869f84eb218112db36a1d5888fc3f893c5ea8fbcb785e2cbcc5e675a265df5da302de7fda8ff007c0b8ad852dffbe262efb6b29213fe3b7185b88e7d49a980a7e64e1cc759689f43c25625f6ddc39f2c7c1ae7230b87a492aa5e01e3c7904617c3fe5f636dea4e6231f3e77d4b40994c2f3f595b84bd86a04c10c7dc83c64ea3c1b28f2d14742745da743bad24d6ee0b905a6eefb0f7e801921006a04c9b84a316b3a2c9ec48ee73de79168200c18e8657068c65d5eafeb42fe4396ce14871796da061a0dd4062d2fe833c9542042648f2b96573fc0f9e263bd36eced2f72d69da014ad3df040dfde1d9a1b28ece920d54451b64cc4e2ab7de1e909140e3e9c5f88be36edff4602dfd3ab8053a9707b28337d98280a2bcfa8f87b2a3e058ff33db855630674a11b62c47fcf1bab16a241911ffdebd9848edc84af7135f771e51d33cf2e5428637b9dcb5d791693994a13581ee41b4a5c81236cff9de527d7ec4fb980b22274d0ba2e5ae6c6b2fc649a615a8e3bb0bb6133cf8a1fff35b14e0dc813a5eac8c11c3f4c27f80a2a0834438c5f3471ac71b110b731176500c911904a5ed37d174864c1ce1f924380227e8a68bb8b431eb07ed8438ac8da84f3ea7acd170573c426ab5f0918f1fddc49c94aa2cb74bc350ca78f902466e8c4f10007ff3b77ae07c4b3437eccbb13ce3c043769de74ec0b5f1245295ee0554cec1a4c119b7d74ec896a5ff8efcf9ceca1a5670b27cf682d432ab3800091df0a819021f2ad50aa729be688241d10b58b12d6225a5fa5ab57f8e098444033f1b9ad332c39a1be1fd3cc623cd94642d966f6065a1e04b44f04f7f0307f3d6ebc3759b0dfdfc14c4241d0419f4451a6f8b210288b1cbf38b47bfee52b4f8bc583b0fe38fa615387c2abe55af605e7cbbd399357ec69680f2397132d83054786cb90c623351743d14c677df2c7673de1a5f805ca885e13b02a9397cdc7259753ff64a2b87c07ecf6668a5ec0b232e0285ff3f1e5b3b6ad2b45503e6a3eec589847773f458ed3c276bb68d5283ca5dc25bfeebb64b3613cd65c36b9c0abb84890dd54845df625e51a40da5008390656e006d4c177738a7d55a99093d2ab63e1d6cf021128d4655d50f8acd9bf477427b8d6b37179dac3e08cbf5f70538114f1fce042eda54a472302ca7c4f7bb68ba307c10a6a33c4fa2f6003e8fe4920e4b53137298fd945480409da94c7ecbc965ae4c7757084e849caa2ff0e866e08b228b3d40dface1ee9ff23586c1a2e419878355f3f4cb6f3a4880606ada1735de62ef053b358a672098ddc65e4228c62fd130a6d1656ecfcd846f811e4e054baba905bb7353f04d86e3db70a742df3f9178be529faf3f20b588a44f8eb1cb08f320d2259a95f3f0b211cd85ea52c0bd808019a00d2be3135cb801eb8cdb0b1a64c980d2bbaf1282ead38d3acf2a1f427ae4c92299724bd571deac90a31e19fe24f32e435a2fda7c4ebb77b155b2dfb568a66e03b26de14fa3750b942696ab3fd0b5e14f8ceefe3f3f02e429fa21b26f9f135fb3ea79089e036edbf1ecc620ac2302392fac386fc7d890c86c5925f914c9bb7fe55bbe252d2cbbb9bf88414913371550660427f0ab7b61f422319c96c255b94934a1c4927e59f0b598b7a31b9b5ebaf91bca96fe103d20fd1200055941b33b6cb5615066fe081d60d5c96ebe89d0bd791f2b37aad676829086019466ad922f7fc36cd1642ebaa5a297eb91137c6079efa256e678ccaf0e75cb2062ffc800130de81c874c80224ba879406d078fff0690131ec5b7000f9aa3e0c09894bd729768d09b7ae23645b23f880cf0af611903eb706801d7a50e4dc1cd5f9f980e4221e7f54a149753bf9c200dbdc8c99e50ef442b7be754899eeee58a189d3c20c4bb14b054663c39b7090650e4fe54a05328396ce6127278074d426866008aa1f9412fa013de7f7242cf792468f9a0b663ee0add43c67b76b3023c7070914c4abbdacf32b84ae0bf39d9fce77159e0a952e2af39728b77b610acf1f3d88098fdae6dc33eecc7288a0a1bd145a23b03d259f7fe63f73532db42956db32162b29dd0ba602555576c44ae6fe75184527d89348ca0663379fba1bf690be2551d86d0a1d423a63ac6e18d5b9b201fa459fdd0b6787fdb67a3aefb959ecf272f9f0a4652227dff343324d043ffea030edef333373ae6721da7a082c71dac5c02a5277c34f93c6d1e61d1f9651b34b38a38a106374ef8aff81e832dc310cba948f69177c7fa07c6ac48fd89e41370442f13c4ce272f6d57539022ef5d06c0c9e29487c7a4b729e95ade7df941d8054ff2323b27c5e6c8069346a1ec09ed3a9f6456df80e8d1721a65ad3b967532771703e040218a015d21616d7482bf47a3a3ad3e4c256538ae32274977335b2e68be2b26ae6355164b2d11b92507e49926962ed586d31daf546bc08e363d5c6f272386679399e8fd18505e0716971502b72a4d9ae3f50052f49988dab1a9b66d9d1722e5a30be9155f95da43ea10572ac4b51d9d9273911b09f1c69d7a5398a165d832412f2a78d4123ada6605bccbb4a209a8b59246fae1d1d0a07973575723485c37c4923d60fc44d13506f577cce8ec07a150233c278449ec36453d27970e6587df5cee50a589042a0818335f214a7350624b6ac75c4863ebd394e15d45c9665b49a86f06427a7736294a86588456aa4f484306e9f998edf51b2fbe2c401c326693765d822f1474079c3b5d3d750330be92580b1aa4a248dbcda92e4b5ed859e9c324c354cc30b20c4203d68bc72359a84985a54469aa50ad4437056cd6aa9122cef3cafd8f5c8fde7a6d785fe084f9011786c38fd6b91adf2b79e4c715b2502c426042c179654931e2a86ecd6f29c715b1bba2c9f2924eca67c95e623f88c731e9ea7bf158663f65b5d990a19308bbeddd5dcbbe0326703448abe5093ab0f338d044da9860af9c27e3a5688c77e17daf9242d944b63cec238071aeb9f336e151b35722492c588742100e46054d1e564675d0d140bd189bf1f9a257c792ededc7650765d4c424b9c808814a1581926aa02c75349927c3671700f17503302fc7f3c56da8d3fdf4d313f573215e57d064affcc5ac7cd43daec7a59f3ee67a7f554b5926f8f0ae28e478079c1a83f0825a418aa83bac878aa49ce5396069a9c5f822bb9b12100e551ef4806d56d02126679dc3d8b9b986d94b2e1ef315bf7ad2b108c094c375a103cb3a9e7cf9f9c6cad840c704e9ee6304e4ae62ad29842bc339481352361d5f3ae174281377b97f871d7152bba64ebd0fdd16fd51f7967a534e26e9969def38ecba8d818937e32c7e57a258829c02f1c1868f38018b497117d9d5c045c5b387cadf7b7aa7a61f24077e2c5813477e2b9954b5013f98a6b2879e5aa2b9f53d5ca4c3be541b21a4104725b7f4c631d3eeb3d837d08d6a5ac0558b31c8e07535c5db45142c06957eab9d6cba0e77fd3f6505c463628911195fe0846fd6b9ba85c60903b8ac72b3e3288b8b21b23f15c33a6334091c77e1e52576510314a2770ae91747fd72f1d49910e48b28058457d685e94ca0c25b98327ea0a383d9093eb09e9b7d9eb46f5db7fd0a1958741bb080887de11671868c2a2cb3609c13cec95f6d8bb5b27bf97424b26f0a66c84ee3733de218234c11bd6bc8676bf464359e5c7f2cdfbfb6680163419536f876631874ca662bacbb14c478ed1026c42bc9e09a4a77640a772d7a30f46f265cbbb3796f3d6a945cee23b8edc2f7c12e9f7d0da1de2ec0910e8ce1922079f73bc8fd2282333b9575eef1dbb1cf0132154fe6ed252b9f5abe1903be9ade281cc2ba4a1c09769566b07584513a52cda9319ce583aece6dca3d5325b6621375303e2a0526cdd59a618d30e8db9dd611b45a143061f7a72f6622ec6f954c93200d8490c700058803f64d817f7d83f37ce887886f7f6ed9b47b4069db1b7a09f036f1b59cad1fc06c0c61033a096d0fafbb7143e70c6cb7754807f92d1db6564344f1a511083584446b7b0c988eccf51b989c514c9b5b26236d71885efbfd911d5ae1f076e10d761efc4e166cac888ff174f0d881041a7edd8f2d6b10ebfed71d60f121d6dd2c123b9ef19e572d5d2b9e83fa4bf64131fdcbe35e55f7e283bf49e2d88ba18640596e84911dc902b49ff399f5a361ed0cf842de21632e556a74d1601e319b6ba3045d01d7ace4d1360bad5145ea13dd6014856b1377eb4eeb27f89e41ea67db87189c9c543d02e1434c3e49313452b0958828be14bf81f581b05593bdf4e04e163b66637a9b9719fefd3d36d276bf218db0924f5d6abeb60b8b7e6cf71ae05fdb6c86a45aa2149a8babb677d824218642b89b04fea6cedea15ff3072df1219781771119e4abc8211d3a76eae623fc8d1b045fae863386185f0a2a35e10034c523bb997122b4260c8ae5d4d1e2da872fb19fee5d3458d95512f81bc76ae3d91b86ce084ac252b0afa204fca2bcc755f8bbd3c759605626d3ac1fdff72a7edcd540bfee0330ccb60de47acbb0fc35dbb98db68eaad0f46509b87086da5bbf0a3b52d3cc760544fd75dcc4b01793d571054d5726c2d922c47fa95edf29bb7532c5dd237fd01d78caa3debd6c84da11e1cca90806f03d66c891716930a2833cb38e6fd134f33d8356b0a6c779ed61e97b9e09124ed5945b371ce08d0c880a89a8661cab37f1ba9c9fd365d03f02322340ed87f1295adf3688605b3269fb771ad8b6f7948c10b8f1259304f7b8cb5619195ca56f0e5d11b5f11d2cfc4c012e6681907f339179d43e1bf92a74080ca0f95fdb6f39c176bd4f7d9e5453de6819623066daf86b757b31c1257a0ade173c7704e6e5448afdb2090027c373d7e41c12f349e1fefdd172dcb1fe82cbac4824f3bc855d3546d4967a9cf31cf037ce1bf24d31ad997534c6bdd100d425290abca1998a87e0fe51580ca5bc00fb5676d7dc067a0025c79d4e69b9f83cc0c398c5829e0e5e7545cbbdcd605920cc95b035c977cc8915da63e24c382748cbb47bd28ae31ea0cb353792cd0d6d1fdd73350bd763e5d9598ea15d175e4bc14d8c908546ed452ff5b73ea3e899bf107a7888dea01da9e11a457e1a784d1b0a64eb70ab6adcd6b0498c433e716c6bf1b9a789eb08230ecd02cb5c74ea46957d68c40a508f55c8ecf45cf358c222d3b46617669ab205140a154e3482f5e26d1286a1308b69a0621fb58fe17c60c8a223aaeecefffd49ec54cbc435a8ecbef9bd207757a241323664e2242306f58c47fb370ddf2d66a79bf7f9052e6a9d2598e04324aefd06a1780182b3eb00b9eec3b9a294ac04c5b32699d98f3b605b0bccea142719f0141ba47bd6400f36107d3e2a8a890381bd5287885d7d05d4fa65dc2b322fed4f5021fc651d1b6f40d3305374ff0c2c07e44f96a8b707ff07af3765d12a5e55bba0d05267fe352e0cbbc3d4e58c34e71724f986bdf0df2ae9237b37098e63392c9db654ffad1797e219c1ea8b6833fdc4600e7174c13344044e89b558ed6d9bbcb565f3a74dd7189b38bb5c44e7880f74b90dea354ff4c69e9b9450e5d9590f72ee7e20264fdc4e64dd1d3ea988d3c221246f1b7aaa193adeec5b7121ba67659a7e19e222636bea4783882494f7076c5d0e4547a61b1b3d8784b7aa32f8340f62d359a6b5d3bb3f879819bce8e4e59e7a652fbd3bd4aea870dfef8430efdc36349d7fe9f9f6b239bbddde7d610b853cf2843bcab9949cd557b61c48bfedcfba6346e741c874cd57d3894c19ebedcc5cae73e8f1be0267f5480ef58bf5e720afa36f74b219506f8759ab27da0cfe81f91bac196f6bc49e0a6f17f686ea2bce18532626294264fae2d4e6200992287a007883708b802c99aec50ea776d611f596ca69e3c09765239f71a30877ef08cc0bac3286256be7caf06bedf4b0c224e905ac772f0543e30bcedb44d0351f2a874f7b8aabac587ece656725d53cda505fce2fe44a3b81b2e5c060eb35d9325f074c1af745a5d6c5f1689cdb922a88b2d79b58de6d692470a775d62983e1c73d483f5d3ff95f6c0ddf9609b7ddda819ab46c8289eae0610ea2a16b3936dae5643484ceab1e4018b48788bcf8de83c77cf22659056ffce2d98442ef883a2b3eea8859e8776a5f59de942792656da71e7c71afbe5eaacc3c51175cc7591950a3cbf01d95f8031cd2696c48f48cb7c212e38f1fe8693cc0c833630cc279bd7206113e86db27090b3430cc1a95e9464d46cbd64e9dd4edea7111e3bbc5015e638a35034ffd221f663ed7543ee4372b738c96794d34acb061072ba48b2cb537e493920785b3fdfbbe18adce2a80f799ff03a5bdc369424a09826671dc8b33b3a4a4074e2c7af9542600e8b50164be2425cc5c673036b205df4ec3abf42f8286991dff08fa81a9c79aa42f9a02d8b9bbdc1ebee752cf2c81f915aed4de24b8b517f94763ab6821c19f5adc73de6a8c327659619844d6edaece02e928014b03208a5d8098115f519c3c766360e48751b7aefcf31a73c222f4aa93d0f8232784e544add9213cc8de150ff4ec5ab37c5fd2a95a390f2f8542a08efb122395b80ccb9713ea22a08ef9a21d8ef48febf4c61e5c326ccfd66b96a87aad46024b8a1c7855753d4ac6efa007b442a218822dfeeb84f8bb133e3fc1599c18c7e44074218e48d48ab1992b6efdf02f88f85b1586e2ec8ecb77d312f5e2374fc59cfa12279511b0ee07a01da51bad87f7519d98a02c21b2508cd7ccbe9a849318101c3db74bdd822b74c2f8f3ae6dfe0c7927fb50d4d64afeeae1447d17e4957bce24f46f621ab003fcc3a173d64bd487e28a73d131d4bc7f481c5fe4eea93073eec494a231e1cec60cbe017807ecfd74547b76a832a57fa5fa8be3c38624377136c59e9798d2b9c49dc0c375736544c614ee34a07f06880cd834c63b134974bc72272d7c7c74a536aaa60389c8be5326f4d2966c29f51900feff97656abd82c03d065c29a346bbf7146d021b0a6ac761170d57ae87d8f35c1960653beec5f4ff9b6b3ee2e26d4edf39403ce6c77eaa9ec1856b974d71c5588ab5af07cb37af882f09aa2f5abd38044f5afabd75fd3b7fe352ac61a225028f959cadd3d4393d4cd9ab70d4f4817b751d73855aa6aa31fe8a07caf448fd9dba72a956beb9303ace6799b377b5a1c2ebffa24448f8c73ce8482cd9d57f441b922110fed1a47a319ffebf82dfb75b547ac64f18e0d4b8289d61d82f181f88f91ac97cb7674ac9b54b40333db9600adbb9dce3161f19069db3970c8c032fa97160c36be3aa26dfe8ee546417d05434c02723bd8b436682a73fe3a2de5f9a5ae9657ffe48e541b610d0c7fed0207c4872e846340116e791d43af78bdd334e25cf798e4c457169f5bbded217b3e282cc64b590738b1dadea2c22ccffc5905b3950625a57a2e7bac6b38f6b1cfdcf8ba263ec5d9e116449d6f7bd02a8ed99c6c0b549facc35223b53aaa3d56b3323704c67c3131c7fb087c989b9ea6cd0e2c4c012bcece309c4d8d3311b8f690999e85d5a88f2d6ed65f4977cfed9d831cfe22c36a6874ccea81268ea32e7d79d1573ab2858e64699e20258fadb07bbee5f26eda71cf257afa7a2ff9097115837408a723550f1209037ff4b178863f1f1090f664ba6b5dff560225dd063761cb53b5e0d1eaffba799d7a075869cf57b62f581913ba2ff35dde83294ed4d86051b1dc61b9ef9d2f1d439ca45da2f3f6ecbe2c41f694431863d1e910f0342576a9f80e72a58e62e19cd75c492f1a7c363e6f179c8766b4012262794e6d6ac4d6b55db7cc70eb862f4723611368d427dd4988ee2b4e41af6fe87f2a311c629faa332bba61be80de9cf31c4ec464d9547f7b3931ec1602bde33df17f60299b9b8b09d9c7d11882ebf87f407bd5b384d0c45c60c8b6f7849a487fba4a23e91c319d9d801f9c8b73e97c3b519c0fe6a5a09c99d3db424cb60e494ba538514d639aeaa07542b151f6b246d77fb586d4e41f34bf6cca6c562cf26f991ad9da71702ba42b6cdb0cdf664dec6ccc75c45162610cbd888ac7a88e8d4923901d4f8d563d081ae5be4456db140d94bd482b42a25c5b8ed71dfea3ec204b1b4f51e0f82f2fe9bb881a711f8708ca7e788525110559bcd4f9429e45f7b8b93ef7388bfc481722d52809a486a435f902b58788040f4484ea47c07a8554033ecc8dd28667bd0c03865ccc92c0bfcdc1e8ac6cb453017e3510196c4ace13e2d12ffca1bd0dda21fbc7e1c4c4e01297745771afb82221a7ba34a9a7dd33dc3cf1acd53d269c99cd7274100b2ab4690fa73550fcb441419e55f7fa3bb31b34908a50e2856027a6945e5ee8d6ae07880ddb0a456810aeba1326b1c2374faf1db39b958e34b2b748de31e67f9b73a28b02c42f8181cbc1d3c6e751afca48f05e55ce88598389c2bdffb59d1cca05b3727aa60d19b3b049ce7a034b753597cf4a2453cce2a2d8463d4f95b7e05dca3383ce6bb527b4c80726690ee015ae0f1a4036b1afc0d2e31645968354012d48f1ad839bf793b7277ece629b0978e7d8b9dae5e3aeb6078850c5875103f50859a7bcf2e6323136985bb5a9ec40b1f1dfc3a485d08b443a59795895a3cb4d66b45033fbd69cf466c475df1944d76417b6b9dae8696122e7605f6cf04d1e07aea90986318ebe02245da8db5b3530786800a351d4afddfeedd4e20e3de581b71a901ba6c3f345a84d9630f385717d6d52c5f1df16d4fc33de4f2b0a03c64d0af35ff3e51e8731be7863e7262558464a9a42ffe42daf6fb6417d90daa1aa5054aec3aea4051bea1e115a006930932365275ec39f6dbe76634a034be3ef333789b7b11c14d5e0d318af68cb436b3944b8b82cb0dd26d7720f621285e6cc73691c617526d6521e55e9bc7bc254e5333b5422fcdb30cfc06128da0eedc0c93e82fb50f497e181ec8a88f69db4104c61412e3f5243d3d3a9099d4bd9246aa88ac94426b4839c5cffd020f3ba06dc4fde3d4e22a2944873fe54ee94a54b775788685d0d348340764409bc80e48a81c62c596d818bf5c474a70d2f24197e10b8c86a1239a9bdad1902fae41ed7f2346c206fbec36a53c2b94d1731359725ccca78d0723de4121b636b1d8a0f9374bde5c14cd36714733b5f1a767d4590bfe958b08b3a48fa7eaeacf5a9af6b2857f714879a5bc57244ac93177343537d09aef5f14ba9c9d138209e2386862ef427c5c23109e879369486dfd38d99c3b22deda04dd9e9709c6523396674b9d681eb434e31b6e07267d133a3a7f50c62e9cc5cb202c52ac6f458a237a01de2a6e5db7c0036f1b4dccbba580eac323d90a881f12d0035f8edffc065a82bc20065acba0f3404677f22c32fb2076e98877d8a1ba07d177fdf675fb28e4204ef6faab313f3857e52a3d058e066e00e1c2abd892f30b0c043d20476e63b1edca5e26ec9d1d8a1b36b891da78663f12e29ba2332f1a0fff8c850b5cf6314147428d4a2175d872da0b51b692d6c19f24ee15f014470c232693ad9c0dd8a79757ff22038e23400ff54cf899d97f89bb5877eb57040d4dc47855ad1bb9e79d4a7fa807d65ab751d0946c6524113c9c9c9580f627779f90743bd73cc3d5636e9a5281772f3a50f18f17225dc511f87f4e868520aa9b8f5233ebe8154e17e85a377589b0f216f5f2707fb689655c69cc366cebf10e6e6e41dbbd966461d8d7d387154f4b47b47d122bbf36df27aed0455097e8cd53076c20ac57987c41e018a60bc7dd1b27effc2af5c08f958a284528e8b6f19e7223666416593ab784f189f78725e5442ddad31719f59fc21fb1a612cd7e50174ee9df8d31337ad0c987de6a9f2c6d7ff25dd5fea425c24ae097903853636db363b99aed37469c3682b34e908cdb3e1100429a060e67d82e894280ff2cd4b65efa1e18ce806962702c01e481d6c25707ab42cd6e77cddc7f52cccdde213879200b205e7d06e8bd9b515093009c6491be60b097302834b19d68e01c2c14d97a76015417ebb43ae8b97a4c53ff3ec5098e8d114254730cebac009ccdec205b3f5bbdc804fd5b274ece78ba7faaa640311a4df356461b3147135f1469e21ce9dfa899c2fb90a908f8e224fecfa9e1bcdba7ab7143eeb49b7c54fa1e1aafe8e1b4c65fbef33367be693796d846aa4ea1995333dd6e93d652cc660248451da9cb73edd4f3fede7a5f80ebadfa2064dbd2e2bea053c38f6a38b6588d82f5a5afc69bf1b0b22e27707923bd865bc887fec5f22b0004ae8feb17fdef63c55f0d1e8ae046bbc3ba4a8c396c7879b6b8983ffc70e446633546a20a72465519df44393d3b945fa5f04bbfac628817959eb4c5b97839d09a9f96367aaf8344c6e56a52b9e9f9888582acce3743102f9b24d110305006d8f93843dc26e7b5afc970b11a7656eea113e01571c0dcb6c9236384525321f45ea4be49b775055b84c4bf0e8334f73060730f857691d80663a413a92e3ff1223bec06e3174813a0d92157d44e3e7c0c77c47a2b604f62ea3bae423bfb9f7fd3db3bb5681cf6618c270ba9232fe4bed537b1eb964f60ec3121a921639b9d254ec9dc04cad54aa522260b5ff5b003f28db9c541feba13d181bbbfc4cebc7d92f6c2fcac87b404038b191f167dcf9d97ee502b893c69e4860a9211970a7ac0b08523a7ba732a06ea2ba1bf33f5c8a38c7c7e2382dde98be1dada708559dab9584887e0ef243b5f462d0bf8f4b7df5d6906343cd0b5c7b28286148f3d8f8ecd176db341d3d3f6060bcf0d6630a7aeeb00acf80b0644ea5da6df4a6a4779c5eb4eed0b1cba8563a3cd46e417128e5b9c97eeb9d65d8fdf266d5057dfc2eb5e19a29edfbc7630b1f5958005a5bcb87bbd0b5eb60d09f374508c2b37fdadec78e2821fc88af9a143c241b302a7d11dfbb332fbb2849e30a58cc291703e302c5cd9c3db076904383ac105eb7a12db9511ad515ce872aa451999b12b2365201197353b4d24db21bd52af4743fdb4956a147d5f76a2291e56fc302a35ee74598353c80fface50625335752ce78bd3339a121cb23025be19fd032115e4e4d7c41858652efb70d78797ff3883b14ca816c4990647c6cbb6d19028853f9a20c4c53a1fb4e8072bc71ed57b92ae34d1ae2c8a938de2331cc9eb8dabe813496a89d07adcc4821f0f14a18954b3b455f8527f08e47adf09a3e90b3c1351e5cadeed6a0176cf7f917fe3906877f102caf2fe9af17ca44c7f05f26e699a056f8c4f2177ab2185d403fd1aaaf1808ec699fa3010f7f4eb5b7e7cbcdb9b7b27c154e8c09ea11076c5881545dbad61b31e09ca5106731598dba79b400f20ccc7216d3429b7df4735cd8ffd6e8e839c93d06f79da33e88f1a18e941b29b56708965746e6cd7588d8e39ef5af9756be56f769c33b58f901ec3b44f4638a6382722697947cb6c5893eaf6aaa0f4f3cc8c568271f34c0eb2671e4ae866337f588c46866c91424bf6d38dd4da185ed08eddda4ed09063a524644e28f18861661395734d0db51aae250d75c4a8ea57505e61f226d7dbbefc6b51c6d530072fad4629aa4ed782278b1054857601be9251c20f0639ce3986fe1b2b8dd066e35496cd5f349f7a3b9023abb94b0822e92268d15fa9fd1b12704c009dc2f6253192ce6bf75c0067116cef6a4007017ec0e2b4f27b2b99b6de071c71de41baae385b726770c222b8715eeec7be209c9b341fba5f24078424fb15808c395d569e33244112c91c82ef73dbc96bd9e33a158534c4a0d519e56673e725f0ae8e8accd5e0d7be2f24069d38cab950113d55c058eca5caa99fccd114feffcaf6799befe5cf15ff88ec59e899d33c4919d3195f76a917697821471a292e4155a7a7a2e2eb28229deea907934f156ccaa7fe0ab7afa402c37a33e8a922e7b28913d6af9114f3dbd7ca773559ec63fc30664feea204daad907cad9dae0d8a34c358661b4d70311361b83399199152b23060edb570147e75506e8a4a0b496a4c1f8182bf99cb12b120bc073856e7a64159d8a8c01e6de0978178205ad691ab7b450d3d1263ba9cd240caffa4c764143b326e5e87e2224609e8e264e0dd66a8c48b32829150eb2ed68d2393119b4ee4d3995d64ab60c371472bde47cbabd0bf016b2560b76b2c706adbfb7ead1b79d1cb1109da4697e815fea0e25fca18e99ab1c1dc3b03f0847fa3fbcc926c8ec7dd58143c0dd425a7f9b5ab7d81dcf307221813070477f77ef992562e197fbdc5dd63fb0c360cf11cf157fb04e4eaa19ed7d89be967de0e2cf24e6a6fae9fcc63c4ba21a62a9561f5dab8a0506a24169b141db9b20dacb4c8283b368f9e47f48a11180fe6853b53427fe4beb68007104fa2c339f245969a07334ca359a9541cc3dca7451ca50eb81bb132c35b5ea50cfc2105d21c9a0ec60f8dc0e26b7e2b6af9ecd17f1c9f84a9d7228cb79504a7689f400aa4a0463ab4346b62cc074b784aa9ddc675328d3103719c66fd92a0eda7dfbe75737b7b7f7514e2478752969edd5771f6b12b85d7db26078d0a55474a471df0f28b1188d2c9560ff65d9099f5c5689c141e69e7ecde8f2d7445ebd5127c6e2f20e0a4bc10c5946586d9e32f9fa1acc829027fd81fe21b8c969c5ccf5254994e371d435f954593b7acb3afb00f2055df743c89ecbef805ec4a742ab67f6bc7733c184ecca9bda93e08032a52e4e9775f31759054b0274cd17d71e3d9e1a865d600b1322a9e71c34805f9ee605b98dbcb3e2d45ccc85e13ad07c01c62ff196fa2782fca1b6c1c22ffbc71b9f641a009a307fa3acca877943874751c874b3fb21eda91c8c50a42073cf33610c3d735cb18a1f47e3ea537d1da018d4e21b2c0a556cb94c76ce5484ce874caf4742b5c21911bd60bc15e5238a204d463d102c06b7ba5becc1d56e7f58c134c7bd0be84ab2988c3ba359b714b04373cbcaba008eec27da05ffa87b5077c070eecaa399c85479465026736b8a840409c403f7da4169e4aa444a8c311e56c57db011c8b16cf7d9367bafd36b5a8198276d0fcf449db32cd785aa01bfe4efc5c8ebf8f9b348176a767c1f59c3b3d6c0e104c2e21be7a2404da4b35c6e194a627501b6d2b285588f598b1349978291612ac44506ef5858189fe7f743a7d51d9c49dc17c515ee460a8fc5155b2b10d9258baa93fdeb167849353dd0914684d267a19b3edf8900c90cea0d8dd78809eb850e4a00a51b7e603963a510318ec4744dddfd06a9a72480877bfc9020b6257fc6898a3735971cd5f3fc4276f0a1c5bf724e2d819d3db846aef7c3b60c9efb5fccc0fe8c1f0c6117bbab4b3ed249c1d8b0ce3f7aedf4128ac825a36eb3b71a17973d3787e7ec8af04052167890f651b4070625e9b1736d7599f95d9345818d129ad0393ab897de2fba21d3191e8666935cd5f2e3b262a37e3601147aa0c89e26a2d862a15d1e2aa92bb73c3502257219c0d920f655d2f6ffe5df89d81b8a2320e5c96a6b947b620b37e290003d4df50e9f97cae98ea25425f39f640521ab71249ddc567d2d8e57f0e8d03d72fc5fb2e141220bbdc04156612ef81bdd39dfa055df555d3f95946a6078c7310cf770a8faee2e4a33692c754038ee8cef94873b4f9c17e5e9d29a7e143005b52c86cc48933f6061b60e432c6df235268ce7e1eb364ffb2eb680ccc4dce67b58f59eb96e8b20ae0a12653955ce1b269dae9c9d347f00d1e3d714114a844e132d150601bb625a077a6486e8628de4ab8655e4b5aa74a37d58b47786e646ee2fc6e540cb8756e2c2b18c76d7ed22037eae9c6ae85d94e2cbee19468c5eb2b8ba0e851f123dcd44377c3be0406fc0acd4b8f4a1f318a051d436590fd58f1f00c1476205185306350c07396ae29cbdffc2edba617bc2e2e6c74655459f75e1b334d552df94b31914df0e176156435e9a44eb9c4322fc00f8097224e3da18169943912d4209a47240dc186fe0cfd66a589c699049ea04a054627e4fc11e55e8ea476a8d831618b9e413dabdeccb72728836165c9cd72b1c4a782e53ac6a3bda6f98e8bd8dab43b70a2d7baaa5ab93c490c8f64aaaf49dd3785b7a3616066afac8b9dfb2df437d099957898049994d59315810d3d30cface24646173f679d30fb4684e9b6d0dfb8b18f1ad296aeb9c769a13b3e03d3218d79c8ba806e8fa069298efbc59e73a3907ddbe794b1e34eeec1ce74ffe39a8fe6a8935734b08c852a29929d05824bf53edd013d7cee4fd682056b82c197ca8519dc8c3030a93fd6b4383f7a299bf317c8e773f0ff5e3ce7cfeb9b1bdd7205615d7fe2b47097774fb7f519071a65534921c5c469eb873069e8aa14a55db654515ed2af8d3fa7e5e6b103b1518905420c7e418da2c70591c81e26c1f233295c3f3a2220e7c8cac330428b9da6bc7f166591c4ddf36d28ec93ae2aa502721a556e6e504a01e790ffed23fc5defc96b07c1bec001c5c418aff943da2d0d96830e22f1b0a8a925d46dd3c74c46818f17006e46a1b7fda1df2dea9afef29bd04f2983570ff7e0cf9af0b0543cfacb9db2b681874a97cd75e4586149f8df4d11d3b2999364219d6ff29322a2faaf4bb8af6146d9f3b9b59ff3bec969ff4a49afe1ed2e287cbbafe695a90f94b8c33689e6e6e02da474b0fe9196b20ea1548fa3e7d2819af196660cb56df0afe6fdad7bafed163b912e845d80667913933c47bc8ad656294db5485874e7cb3ba7b5c73c6f772c87ca33c100196917fba10f7213114b272276e0c6293f94157fdef9a836134b5e05ef5b28d252cad2b222c46f6da24b7a80da1aae262f531563ce74d0cf59f10b40b65fd30c9f704dc73649efc496d1dfdafca677402a33f1baae3e75ec033b50029ef3661d6ec41163475f2327119f0e3744659fd82e2b3ef24c73f2adb499339e921e04f3bf1f12d906d6a0c8a887c24d97cc3c42251bff9928802ceb5dd9e5a7447308d147687181a6f10a0a9bf6307ec1c0f8465d1950149578cd858867164590f41dbaa8fb4cab586fc2860127cd955fdc7e3d844671b6a4caba7c3b6d626563f7ef8b35f6a62de3a445c5f93148adcefe446ddc5e49a866654ea99ce9087d0cf342959662cc3cbad206c33291ee0cd3baf88fb5c7fbd73d9aef8cfc952b42fa2e384884a46a74ca4f3238e62ba0247fea3863e625ba28d08c07cd824c6a9d3adc0f61276772bbf90d510f2a1035a583397e7afc3c4790bdf8637d35dc0a7e1dacfd3450f4c13a272a69ccf7d2a4fca202357459aa82a9c69cb3343e1237835e1aad1c9da634a975dee1b36c90097d4773dbcfdae82386613c0b2c2767eb204c3e0f04beea776c3694c52154340d57bbfe94761654609df93116e2dc2507d67a9c15978a319513bea8baf10fecd7fd6bdee089b20d062d0a9da04e15904ed8f39a963cd81cd34db21cd5f95980fe958cacea29ddd6b17ffe0c1bf0a28f314e3b05e8fc0739dc6ea15a92fbcbc2c7c98bdaa69abef2acab31905e49d9b9482ab427a614f3e65463ec4c1949636493aa2d151d8215640ad930d10742d77387e3276d43b724a7cded57efe47c94645400147909e38ce3cab585716f877f7defd56b2a721bda8e0f58f82fa464f22323bc83cb6ecf435b96bd400689d9d00b273550741c053e162bb1514062a242e1011a41b103be5b407e12b2ad64649f632d30abffa820f0afa0b29aa37bd94b64c86c9d1f028ac3418b231f312d52106b50c26ebb2ee5f315989c7d0139153cec3a43dbdfecdfe7186a428a24f370673a7e95b5862f0e8709e2bc7dcfde3baf0f5214da3bba1ae58232fbb60d395a492f04c4f22516e79acd69e9203f67c81a8c00cbf2e4ff554b1e0c154f5f1a96a21f24cb67d39f74d78590d3cf7138327bf185b3b2255a8dc3deb22416e95fb5966bd87ee4268cc713d6269d399bb6d653f83cad2eb61cf1d39ed25458844fead4e1ca4eff2a5bfa617475209efb46057f09e578d9545a560932d343e5df5ea848851ec7be926963dace8467dde34aa7bd37c952a534fb37a60034b3ac16e5d8b6c7d5fce28a9cde2a811118cb82146e1d1b85d0cb025e1b33c6ee01d5ad01fe103aad33753686393b909ec562b5428310c9b64457a32d0f9ae8637d3ad5ca363a7d2d181f90a7a3efa9dbd6fe825c5be3190d3840d628135d47e9350106840e9354793fc9db886bcc6fd953e6bceb9a7923458160edfef3322a528d12409633b4bdbd3444e059f5421025f12a07673b98be80099a0fc92f31911ef5b98a877360aa94bcadc512c2ceaa396f0354d1023aa7bbb82939f5fcf88789d1d42bd55b925233b5900dfe0bdb3e6fadc481cc5931d5a847feb8dfc1ffb9d81b63457214509590726594b445002687460035d12f986e4cf0d87e66cddbc3621c5989449e11ee9305d5a5b1517d258db395e3d040514811443e4fc2476bb81f4ea5718bb9ed16aea31c3011514f287a1c5508fed9deb9599d3bcefc868cf8bf646f172fade2fe69a630ffab1b1f72bc1770deaba3e03f63572e14b5cc22b1865486d6eef70f92ccc343e385a5e937162fd68d6acbc51eff4927d7a459ee9719a020e044a345ef8817c8dd29a7aad62af71ba8bc0b2760009ee7ffe64cae1f9543f31e4272d968d72730c5e0439a228350d28a9f72f7ac812aa079092e64795daf1b050c81451ccf70595eaf93f2dc5768fa956f29f8427ef0faaf7f5f2f1545aae905a5051e0fe43720fbb3001324a99cc2bfd0b09c362da22dd6ab3c480f2526121f0eac1a3306fa5519e10baace4ecce1a9cdcf7a771301169adc91f78a9a9ff5dbea3f0d1ec0f0f3970ee14e183d479bdfd3c510b79b9ac98416e878708ff9adb67eaa7b77af8248cb23eb436ff3c35abe12b4d5397d4739a4619cfc80de513507167b109923ee0d1b92167957f034704683888458c193d55287885ddc94d6b9b0ee83a9e544c7d1e1d6171e9da81fdf11ba60ea6165636cdc34afa24291307bde8eab261e8034cc33d267faf29a17f64d45fe00c45c2907e134d8dade84442b6a89fab742a52a409155e0319241b91b009bf4ef30be11a09d57eb0f376387e8894a9683356e1360c6810bcfb252abf0d5e870b06df344bc067027015428ec4bbdba28848d4aa66a78a3f0eb32b218efcc8392ec228ea48f5e219134995944f2163f951dc1530863d25e1ead882611776e1ee509100cc64d41819f4d0f265b8301eadb85d3844b853676889a8f688f512fc88438351351f36baecde6939a4b75728d5f6b83e43937cfd9c1c6a66ddaabba46133d8fce7489646e3dd8c7f4d3e33e9234cc2a7200c69679f237d6c9416c10c1e93699d7e1994c88bb1063d956d1f4e9e5027dee2033aebf1d0cf15f4ba905d623c1d70420a51ac3a2e50f8044f83b614016416486776ef33be8cba5d8004f3bf22300c8f537d262615ec6d1d7395804f8f56427450f7eb4e1c8a2c8cf19ba95d1c270cefa6c8d50b288eaf48b47c8d8aec2011bd4d526c77a64f4b19c5270ba63ac5fea43a45d0d6895237342ee8ac5c9667accbba89cbcb31eb3bd96fed2e9bed2f544b71c5ea6c01a9545a7d31e6ece9348d10604a91850b605eda9ea577255b3a4c191b7dc6d004ea0044b80723e00f702e47c67385f5798c6425f6084a3cfe1d112dd4ddd80e4bdd5b962f234004d13ad6c8b2c86fe4256d4c6532c7a38391392a34c4ee9323ac6ad7db1fd5ca93792418eacbadaece366ba09e2128b35f64672da9e6855b4cf897689c3715f3d802e0f3da17d37d5e90202a34dcfbbc322d817f1cdae5c5b3a1bac03ac304c32bcad080c700c81e8e8639cad87cf31575929d1d501a7532606db491dee08b79e8767e213fabfe727beee639cd8b297e22cbe60af4ae0f7f262e31915644c910ed7fa0b1db85a66d2866073f1a5454f515dc34b55a4a8618edf664c0f09cd6ca11d4337ee5cb38a11103a12312208462440333f83baadf4f517112b0c3b8c6e3bdab01859b042551eccc58b893ac61c6868146748d870abf647e7e486af832bf73dc72276d729ff700871d48cb1132eac0efe1dfc1d4f37f29195afb38cc6a19abdbc7649b092b1ac0556dccb079bc500142e0499db67ea061db3cfe3ee0efee37558d6bada5987d201ed64ce72347fa53f40cc203c5f9539d1ab0b8e7eef5b205d74072add522db1a688d9fac9640b9f2dc4a85b67f2002089c4e70844f8e33c5180378fd4f10af4c2dee917ff7a2d6c8325609fbad2419d08090b14f53f25cf13c411780a5a42747406b892a0b01f73fe92146ebf76662b4f968791a96cbb5ad049555decb6c68333bd65f973ef123075daa1047c10421aec105587d546c0ececd8aca5f02a0bdba49af8fc89d0ced76edfe3d153e0bcdfcd6d95fbc5fcecd0e4f7796d6e3d6607b9d955e485623d07528c5e1bbaf5b85dd939f2db10e7825e212ef84d2afec623907b9d04c56d9977360f2f4991a46b4b3964b72fe0dd5c3f3a45d7d0bbc299f1a7f6fc5782b187e6f973f0dd7cf861dd51ef1d7cbb9b164b48910d3deb3a7c623b55e9e7db9f4aa8c053c7a35bb96a741244236148d7303d644f0e9d1a3285813d89ecfabbfca814e97258532887187555a6e469aaaa33d23fcac732d9fd0f27755076f315b40aa9778ab3c9e0a27195aed6abcff90d42dcd8201e45f7fce0ef55c01c71b3c02db77d39ddf56eaaf6bf04215a578260a34aa2d6920e5de46a1e70162010514407c490c0c65d3cfc5a53ee94a0d3919e8ad9086303b20a7923f4153e754705c83ee15292be6571a9f45047f9414c2327a419b02c0199631b18ccd10123136011306facac7ac7b58558e22b7fa61083620776497b738a26130474d1fb12ee428597c25ddfd80186e1c484ba08ce7f37eb2955a0eef4a03ed479507b8df2e50c8ce8404cf181f692160ca4959d0fafc8d4d05685305cdcd1b47f94807a9738794dc06f91127f4da30c0693fa5d417da1459a6392de82df26799148fcaad4ee0e01286eeeafac985480f6b733d951fbe006e1627d04f53670dccf44f38c42863c6ab9b6363c1b270259e7f7216251020a3b7063413953256578b440152aec7b18116bfed8bc66b8e8543d0161fc075329d15b779e577d523c0e193b99110c3fcf441cbdc5529725e0d6034645602a121d5aed19f6a6e5a6e0317892b4b15c0b286b63e8ace0e3d8d246a7d164fa721fdcba282bcfde467314c41ed923d8969a6ee64016e2b62c6925f5ab8a168c31043a9f961022b542838e3a9ef37c0afa0687673cce8f9cb0872f8f93878eadf7a3e190ea6be6a6b83390c9b36b18191b1068cf4257d3010f3c8fe948896eaf555aa059f7837ba0259608b867137a04b0ba2efce5c56c1077df81c7a87bf0376cf22c51eb7196c35703d5ce125f1614e8e82cb821e20d10791236f555a029059460ab9e31ee358bf01c970b7cfaf009301cc09a41010664d795e4493748c528860779179bff866e4eb9e14da6579411825f2e26a53271f55ae77036517cb19720980d6b515f6e1b40c0a808c8a83bb76f5aabdbedbb567ce8c1aa2ee80077347c7a0ba09876a6f67bc306459090af7c9077e74592224fd5d717c48b39c25c770acea6eb852b6c6ff4faf9a4b4479e5dde1a3cdba31d22a4cc9d743bd2d0767f9b251a8591219c4f24c29da7e5791dffd53878d68d91e806e79f06f627b305d3be0cf0500ae010ea8b95e033a17e1a3ba1df61738a1c511ef690c5023b8239627f93296c6bd41d15347f9ec6d6e33dd39073c43ab9374e93484a3da93ba346272d45bbaeb7230913f00359d87de9493557fa61f49847050c737d68badfe4bf8cfa73684edfd053efe522d745f929e29102035a983cf18429fab1e9b7961374cb284ece24542894c548511b263584eec0d75cfe5075366cf334eaec4f4de52d124c94ab91db25235505b9f4f4aec921e59e2108a2ec0167a2b461a3c90f00b99d45ebbce874bde6a4720f7055f589a3a96ba80940cd7bdd6d045533301987b6a5336f7fdb7f6acbad56f1511603949731ebc4d0c93d6fb2b40f83332638866632b8f3578fd78b911e4102772fcfe875246f8e7466c4d41d0093b1c1f8e8d38d364f052629b56ee9a152087927f1f64f473d777da6fe302ba111ecf2da22774590dfc33cd8b03d60fdd07cda1988f63af682f492dd2e5c9f1fad15dfba411839fbd483d8762e0c35fa262007cf7ccc9540354be7978044286fc25f050dfe5e3ab875dc5672f91bbd0a4a5895a7e7eee9f51c5c239eb08159e53ac2abcefead9fe6a742976eb1c04e46b9f8aa63b90fbfd46033977f79758032fbe1c865582ea3da1fc3effef36dec66add8a615af9ff82b4cd20150f9751f849099e2c8653f2b5dc7a3d728ec3eb16bf1d43c38b967648f6e39b7a2beae263018e28f3d52876b608ae02a75f092bc94ae40f4833c019d5e62cd632aabd4aca8f08baa9d4169258f02e11e10ecb6e1310a31e3c5d9761458488758b413121ce25c0d0cf3f7b67bb3b1ac1827bac3f3418fe6c21e0a37405ffc5e806ef95445cc9e5e8b042ff92b313b6f105548d97620d96b3c2673f238f68cef0743f7ea1616d02fff54735d1723479917f1bdae575da5b322696e94699bdc28c936cbee9b40eff725c596c1f8a80fda47d0cda3b737c4c014542e732941542af8f5e669b28dd39865306e53111c3eb52dbcb5e037a2fb3d1fe08b16e0a4d5869aceb988750bbc823a647d6e7c01f757fc8fad9b5dd1a54b94b9137c73e3a8342d1295013b0a88e38e47fac0c5f97d0875cc1a50897188ef15148eaed2aaa4c77365406e4e67c4fac7c5e1a7da591148abfe8b30aa08194d83e1201e923afaf1873a12c25ddc9e65e12e0622765722e2c2185c4d417ec3727777fa1f71cb1d8aa9a27eb373afd336d61c28e287a467091ccaf3e31b9a393c3b694308ea8484bdb5209f89c4a05c59dfaea8a7655cf73ee6f86e49fa7f3857b5411ee54cb36fa2fcb64fd3e0ca00e3a96066874880ca98bb904746c31240d6a45ed3415baa23a629ba0c01976592433168765be3344c1174560c4314ba7635bac155d303024f2639f609351a6c97337b796cf0f62c1b211c322ea545083259c0a9050d581c3766ed51134c7f222e92e7e29300a823b84ef3cf4e0fa6179b1ffc9e096e93abb050c1444defccc4c6898a37c50370d246c1e7780511209614273a73a2ecb8eae43d4d55f0896ba7fed88f250ff08c2988707b78e4aa3a8b12f261125c2f84e766cbc2bd74703e76315de27a6d060500dbe1da30a7ee7aef54b00c5feefada72a4e69a54ad65ed65412522ed6b880e599b33049aa9e0d36dcb90011db82421eba43a5d8282c969871eb8e1f4319905e4919560b972f6ec361fb5ff71f4c3dda22fb90e9d2f97bab00a713281e4ac872402ea041864d268411001916b4e7855231d37135033aa5a61274ac0065b230d97e7927d10a2a60e778d583b9d88597633c4a0498191babecf88d3148cb585ef06bf1bac52bdf98fb25f80c949520289d512708413033e83fe25649198ec02b18bfc296a3e7920d1d4ec8e9a3bf7ef9f1d48220934bb4c1701bd7460e95b49d5a439e0c6ecb8e7c8a62c557b88a9d70e4b12d61a0f01a3ab38c8a50caf016688fae33433d961783c42fa205788866e850beab5ed604e08e694a0edb5a26cc227b71ba191b37c43b4f7077920a0421ca5b798629ce3075e3ff2f592677ef1e56d33943721024a39b91a3c03bd3ea710ded2f0a8da2ef3841f6470775e3b8a5edf5128bf5539241e956e4cd4ce6059e0bb75c2fb521e73b82d39493b73a23b7c31efe8b3536ddd94eea525e70f312570bc066702976b4925c162c956ce5252411b049abb8b613044d5d0240083a0e591b36f9942068bca115dc898265e89b5d421de1bd2d05ab453c04188a26e1e22cd29060008569766e724cb28e70350ee8b845fac16c8e8302cffc84d53149a51c2f9086d6a08cb75d868a80bdf45383aed420d11bf6657994ab6eb573b3d2f53c703408c36f01c27cc73adeac740e3184758752e85a2f3e12e2bbeb1d1137f25f65b461a5de08969075be91f0e22435f9972b8e970e89f109c6b551759643f631854393d05db5e965c259eee98292abb0c5808ded477ed4a9fca253d7d08a298fc7fa6dfe32bde408028c4d6c100739da2b4506aadf466d5abcd8e7200a17b16de29ee251f27963fec81026c1568419cc395e3628cb2ba09c430c8936c78ac369742beabbd6c509601b31918d47f4ccda79004ed36f3304aafda87ce5e7a6ec400893dbe83c0db496bd11bde103c65eb5930b9dbf843e2eda63195baa11cdaedf21e9691ca86dc643e28c117f84258afc9fe6c5dab60c06580e646e091ad0068f8c7b94086d99e59d5ec1c4e38f28f86abc264fb035f24f96a31b52c63ca3d051148d83b611e253cad37e5604e509290030c6310d113cdd54e06407d1da6fad2fb336237309c177e73577ab31a615ad0e6ce923570ffab7c717223b979c6d62986fe8ca179845aa81039c8c28deaa17b33aa0f60da3d0d9f0667e0653e869fa5b7f38fd3318979f9e64a859bcd94c58bf158ba1ad20f4a3d7bf70743366a363a36a8190c690d0594d450f4b414bc36864f1e1a261aa7a34233ffc495279c97e0d3d5278814e5e28eaf8eab673f9f8ebb8d9e5c0f40ed2f77cbadfc17cc71ccef0780511879e2be89111909f8b87a75c3612a294a338339fc149ab019c4f4a89b48b63d6d6006544738f837b305d68a6172e25cd779948353f6f7c7cd2a22b8a333354dc61091d54b81a4ae6c4026daeeab40c151d97e8680497f5d10a6f95c7adf392f200b71a9fd52b8bd55ed5ae8a42e31619fdc29e477251ff2cfcd12433a5e28c720306288b5dad06ee2cc3e8fbe2893e68978b0c1f3e96fd9f775def46539a9579b6591a9363165dff870864808c27bdd5517b8cb249fa1e9bf4b4b98a0823f304aded19b0acd5271957e43e1b0a340fca92d31f25f2e5bc42faafe67d90ad530d319dad994a7ab1a30321bca21de267f82173b54ad294f6269bf32243288dd5664ff6ff7f30cc0ed0b7b2c906d4db9114c91dd005e912fb2294f7cdea663cbba9235816c712c740a6edf3fdf5020a1b941f9efc798ad69398f92a6a551f583f377a747fdd82bd195bb6424b26573a46442d642a5e17f6112b42a1787c9c58d856e02368069d35cd6a62280b1355b1392237dccb4d5201ce4a0933b1ccd0aa0f3dd15af02a0f11532cffe712d1b49607e7d71db5ff314440142a636b65ee025b20002280680c2f386a8412ece74ce899a6e7b926689e05148ea5b5cf8ee05a2517ca809b867ce58a650adb7c0d0a774ced2ed1cf85d4856c0b0dcdd21760f66aaad7fdf37e856f2c5c19675015cafbd948960500fb9e2e8f59a5ab8bcc741f6bdca145bbc8fe8bab68265cff5d1bdc0cce14e3762d91132f65a582068d627891e501ba960438106dd5cfaaf5de9eed89ab5b6283f6c47e85f490b61c78a5d43e4a3317d434c5c573c2cb47adf48bc138945f4d595ddd5e64a6700fd7e68edf2e8c088cf908ddb0d134b39</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      无权限访问，仅提供VIP用户学习阅读
    
    </summary>
    
    
      <category term="VIP培训" scheme="https://www.rootfw.com/categories/VIP%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="文章" scheme="https://www.rootfw.com/categories/VIP%E5%9F%B9%E8%AE%AD/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
      <category term="vip" scheme="https://www.rootfw.com/tags/vip/"/>
    
      <category term="Linux" scheme="https://www.rootfw.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>v2ray流量中转</title>
    <link href="https://www.rootfw.com/posts/5b02b57f.html"/>
    <id>https://www.rootfw.com/posts/5b02b57f.html</id>
    <published>2020-07-06T03:43:30.000Z</published>
    <updated>2020-08-11T05:14:54.383Z</updated>
    
    <content type="html"><![CDATA[<p><strong>当我们在科学上网的过程中，有时候因为服务器到你本地延迟太高会影响我们使用，当服务器端所有配置满足需求的情况下（当然也包括线路问题），延迟太高绝对会引起病发直接会导致数据传输和影响访问速率，比如：网速非常卡，频繁掉包，那我们该如何降低延迟呢？如何改善呢?我们可以通过中转流量解决这个问题。服务器中转方法很多，今天我们通过v2ray来配置个非常简单的中转</strong>温馨提示：今天我只讨论单纯中转，不讨论服务器线路</p><p><img src="https://cdn.jsdelivr.net/gh/ComeBey/imghosting/comebey-pic/20200708074625805.png" alt=""><br>我画了个拓扑图简单说明下：<br><code>1.假设当PC访问SERVER B时延迟为60ms+80ms=140ms或者更高的延迟，且SERVER B是中上配置服务器，大流量G口。假设不是高峰期延迟在140以上140~560/ms之间，即使你服务器配置不错，大流量G口，因为延迟太高如果vps线路本身不是优化好的线路，病发可能性极高容易掉包。一旦频繁掉包会直接影响正常访问数据和网速</code></p><a id="more"></a><p><code>2.假设当PC通过SERVER A 中转服务器延迟在30ms，这台服务器配置不好，在通过中转服务器访问被中转服务器（最终访问外网节点服务器，假设这台服务器配置不错）SERVER B 在35ms延迟，一共65ms，对比上面140ms-65ms=75ms 降低了75ms延迟，这样的中转才有意义，在配合BBR内核优化效果是非常非常明显</code></p><h2 id="Dokodemo-door"><a href="#Dokodemo-door" class="headerlink" title="Dokodemo door"></a>Dokodemo door</h2><p>是一个传入数据协议，它可以监听端口，进入此端口的数据发送到指定服务器的端口，从而达到端口映射的效果及流量转发。</p><h2 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h2><p><code>vultr</code>服务器centos7 一台（当然你也可以使用其他版本服务器）<br>点击这个链接注册后通过支付宝支付最低消费10美金=70左右人民币，即可得到赠送（100美金有效期30天使用）<a href="https://www.vultr.com/?ref=8623585">https://www.vultr.com/?ref=8623585</a></p><p>电信网络100兆，PC电脑离路由器距离30米左右，隔两面墙壁 WiFi使用5G频段传输<br>实际测试 vultr 我选择日本地区最低配置5美金一个月那个，延迟在200~230左右甚至更高分时间段，一分钟内掉包非常非常频繁（我只说大概的）</p><h2 id="安装v2ray"><a href="#安装v2ray" class="headerlink" title="安装v2ray"></a>安装v2ray</h2><p>当然你也可以使用新版本v2ray脚本或者其他翻墙服务安装，自行谷歌搜索，本脚本是老版本v2ray,安装完毕后请自行配置相关<code>config.json</code>参数，并且保证配置成功后能顺利访问外网。<br>安装v2ray官方脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure><p>配置config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [&#123;</span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">10073</span>, <span class="comment">//端口</span></span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">      <span class="attr">"clients"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"id"</span>: <span class="string">"e61f55bf-8450-4fa6-884e-4b46b64122c4"</span>, <span class="comment">//UUid</span></span><br><span class="line">          <span class="attr">"level"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"alterId"</span>: <span class="number">64</span> <span class="comment">//额外id</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [&#123;</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [<span class="string">"geoip:private"</span>],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把v2ray配置信息中<code>port</code>打开（如果是谷歌云也可以添加防火墙规则）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --add-port&#x3D;端口&#x2F;协议 --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>然后看下能否正常访问外网，在这个前提下在继续往下看</p><h2 id="配置Dokodemo-door"><a href="#配置Dokodemo-door" class="headerlink" title="配置Dokodemo door"></a>配置Dokodemo door</h2><p>准备另一台服务器比如谷歌云或者其他品牌服务器，同样安装v2ray官方脚本（请不要使用除官方脚本以外的一键安装脚本）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure><p>温馨提示：可以使用<code>vi或者vim或者nano</code>编辑</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/v2ray/config.json</span><br></pre></td></tr></table></figure><p>把初始的配置信息全部删除，长按键盘<code>D键</code>清除，在按键盘<code>I</code>键盘直到提示<code>inster</code>(没提示就多按一次),再把下面代码黏贴<br><strong>方法一</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [&#123;</span><br><span class="line">  <span class="attr">"port"</span>: <span class="number">23213</span>, <span class="comment">//你的中转节点入站端口</span></span><br><span class="line">  <span class="attr">"listen"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">  <span class="attr">"protocol"</span>: <span class="string">"dokodemo-door"</span>,</span><br><span class="line">  <span class="attr">"settings"</span>: &#123;</span><br><span class="line">    <span class="attr">"address"</span>: <span class="string">"111.222.333.444"</span>, <span class="comment">//你获取到的节点信息内的境外节点ip</span></span><br><span class="line">    <span class="attr">"port"</span>: <span class="number">32334</span>, <span class="comment">//你获取到的节点信息内的境外节点端口</span></span><br><span class="line">    <span class="attr">"network"</span>: <span class="string">"tcp,udp"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"tag"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"sniffing"</span>: &#123;</span><br><span class="line">    <span class="attr">"enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"destOverride"</span>: [</span><br><span class="line">      <span class="string">"http"</span>,</span><br><span class="line">      <span class="string">"tls"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;],</span><br><span class="line"></span><br><span class="line">  <span class="attr">"outbounds"</span>: [&#123;</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [<span class="string">"geoip:private"</span>],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"log"</span> : &#123;                                 </span><br><span class="line">    <span class="attr">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">    <span class="attr">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>,</span><br><span class="line">    <span class="attr">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: ###, <span class="comment">//端口</span></span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,    <span class="comment">// 入站协议为 VMess</span></span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"#######"</span>, <span class="comment">// UUID</span></span><br><span class="line">            <span class="attr">"level"</span>: <span class="number">1</span>,       <span class="comment">// 用户等级</span></span><br><span class="line">            <span class="attr">"alterId"</span>: <span class="number">64</span>     <span class="comment">// 额外ID</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,        <span class="comment">// 出口协议</span></span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"address"</span>: <span class="string">"#######"</span>, <span class="comment">// 国外服务器地址</span></span><br><span class="line">            <span class="attr">"port"</span>: #####,        <span class="comment">// 国外服务器端口</span></span><br><span class="line">            <span class="attr">"users"</span>: [</span><br><span class="line">                &#123;<span class="attr">"id"</span>: <span class="string">"#####"</span>&#125; <span class="comment">// 用户 UUID，须与国外服务器端配置相同</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"block"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 增加 freedom 传出绕路，国内流量直接放行</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123; <span class="comment">// 路由设置</span></span><br><span class="line">   <span class="attr">"domainStrategy"</span>: <span class="string">"IPOnDemand"</span>,</span><br><span class="line">    <span class="attr">"strategy"</span>: <span class="string">"rules"</span>,</span><br><span class="line">    <span class="attr">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,      <span class="comment">// 不允许客户端访问服务端的局域网地址，以提升安全性</span></span><br><span class="line">        <span class="attr">"ip"</span>: [</span><br><span class="line">          <span class="string">"geoip:private"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"block"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 配置国内网站和IP直连规则</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,  <span class="comment">// 对于一些常见的国内网站，也使用直连模式</span></span><br><span class="line">        <span class="attr">"domain"</span>: [</span><br><span class="line">          <span class="string">"geosite:cn"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>, <span class="comment">// 对于所有国内的 IP，都采用直连模式</span></span><br><span class="line">        <span class="attr">"ip"</span>: [</span><br><span class="line">          <span class="string">"geoip:cn"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后重启v2ray 查询v2ray是否运行成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service v2ray restart</span><br><span class="line">service v2ray status -l</span><br></pre></td></tr></table></figure><p>博主实际测试在没中转情况下非常非常慢和蜗牛速度一样，中转后速度直接提升到6w以上，我会在视频中详细讲解</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;当我们在科学上网的过程中，有时候因为服务器到你本地延迟太高会影响我们使用，当服务器端所有配置满足需求的情况下（当然也包括线路问题），延迟太高绝对会引起病发直接会导致数据传输和影响访问速率，比如：网速非常卡，频繁掉包，那我们该如何降低延迟呢？如何改善呢?我们可以通过中转流量解决这个问题。服务器中转方法很多，今天我们通过v2ray来配置个非常简单的中转&lt;/strong&gt;温馨提示：今天我只讨论单纯中转，不讨论服务器线路&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ComeBey/imghosting/comebey-pic/20200708074625805.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;我画了个拓扑图简单说明下：&lt;br&gt;&lt;code&gt;1.假设当PC访问SERVER B时延迟为60ms+80ms=140ms或者更高的延迟，且SERVER B是中上配置服务器，大流量G口。假设不是高峰期延迟在140以上140~560/ms之间，即使你服务器配置不错，大流量G口，因为延迟太高如果vps线路本身不是优化好的线路，病发可能性极高容易掉包。一旦频繁掉包会直接影响正常访问数据和网速&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
      <category term="中转" scheme="https://www.rootfw.com/tags/%E4%B8%AD%E8%BD%AC/"/>
    
  </entry>
  
  <entry>
    <title>加密库</title>
    <link href="https://www.rootfw.com/posts/b7316760.html"/>
    <id>https://www.rootfw.com/posts/b7316760.html</id>
    <published>2020-06-29T13:41:40.000Z</published>
    <updated>2020-08-06T11:35:13.277Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="文章已进行加密，需要密码才能继续阅读." data-whm="无效的密码。请检查并重试.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入访问密码.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="5de3ad4800c1527e7a06c56b9734b93e7ab7ac4a82ef9b6e041f5db389d21aa9">7b3fe121a03b5a70b907c517bebb08583c561160c515efa0ff6dffb11a426a501808a7a5a59cc1dbc4359504f719d68ffc4782bee37ebd9fc169d9fa914daf0ec72b5d0ab310e9c20a7d1cbd8fb9cb10ca515edd707c49aaf97be0e5fa7fbb66f61793b9661a9b6dac531fdad0d0bd613a68e00646cefe1886725dcb21922dbd6ace4f200616136718fc9de3cce721176362f018c61f2c7218e36ace3d502e5ce34ec52f658f1904d245f96548e7036918af88150d08ccb5c94455f50c62001022b2a1038031bd0b22895c2018c552eabdb5733443e315cddff82160850bc6a461dade55b880085f8979637ecc61fd98078eeaeadb89998d21d347313fded9f8f9bb89957a7faa7ff12ebb9a23023154e247b5a7f26036f79c8a4cac92c773b6c3d01fe0d0e088919974c6d0d30ac0a07ce4560bff137d0ef6e0f1907d422afba6ae375dcd242d0483890e8ccb021a28b53dc7d325a4bb92378d1c8ba4f7443d1ed994f04b1d2ea33b708976c58b8d4845a884d3fbed6cb1640bb11e8cc00bfb02e76c4c7724ca2c113c82a07102923d1d2471fb11a1666576235debf1956a45f83a7b8c3a01cf18b41f83ac9a1d625f23d2d3d9a3678c0955df032952b7cf78dce8b80c9d867382de563a640c9c8cdd4e6a41f34bb652e76ca480f874fc67d5ce3075b28d94c18b3bbc78760cf3f611d85749203980ab194ee73162a6b22d95758fce1ee54e320c16be91560175c700fbcc5bce684babda9a19a70d1ba68da9ca4cf080b52ac2d52d801ed8a6912e49e3ebeb417be97775c495b06aefe2c07e69b4a4b73c1042445bd0120a4ab79335430f5ebd0bf7c80859aa16b6d2c12b758bf69d881f6ead4bea1d12e32daddb3a8c9a2977a6f25ab412b396f89e76c53ac38bf689b66a128babaa1a6b76f62ed772b833fd8adf6e0992d4ddc87b96f027922c5843f35df2cd0be87827c2c09cc681a661a2e486ef8435d0ec03d0d5ec25a666504ed5039be01aeb311414ad8d253e3e684e270c6d97eac27fa1ca75316a922372d95abb36e2073cd66fa654974a88b6d644bc82e99d3cd967ae080e6ef292fc989c1158443f60996813124a43c22cdfb6ba1288506fd7896d414a4786c63899ce75143cc16729959b74def3be6b7db9a8ea945489d528d556621693cf2f9144d31b0f4396d2ae513aa38a6e64427478707f4589d5c8c092fd74681b1b4823e2483665ff655e60f37a4ef9f165b72e9e16754bfe5e2d87a36fc6cc1e0e42045498a8314dc63d188da07562a12832f441d9c517e629d3db1dfb6f580ef58c6e6f4239b03882c812c7940c979e3e19f6bd698c1cdddf366d94a0aa232a7a0fa238291e34afea47c3f603f43c3246a8fcabf63a1e7d8b6d032f873e67b04ccdbdb1e7b2a4ef5463a0fe3da75cb70e31d2fb60e32e0fd5899ea87ac5fc8693c6c3e9d84da248dfc270c4f3634cd5ec840448885670a78635c5debf76e4e8e85a8aa8e789f8181a0e39534ee1e8bf13454a3464ece24e2f07dd575f6b0d870b562c0b7b18b671d38f0d3b3f74d5d65ffc42505b656525a65c60513de5e8bf7d8194c27e7b245e7112e4fb7dca1c51766f0aa8e6b9a3ed4f5b00bbf75595431389082f6c6aea707073336e1dea928b12950f0190ccb36c47c71f9ed3e3029eb7caab5b06de1102bc36db31ad6e9e66ad4bf9a922663c0da57de5ab65b674dd16a767b4013ec1364330ee213aa331ae045a94d85ca0b1646a060f2c58da73495ca49db273ee44ee01e0d0f025ed29e8f08245461ff5092d2f5e33ffd1e5470fd35230326f42aa9cac7dc0539cfe37d9381fbee6c542d0193d02492b6abba94c6bc63d6830f6b0944af9a46ea8740e0c22d199a4e0c480df7103be393eda142108104ec4f64ebacbea3a2f5a0b3d7ab55c65846fc4772fc47806b8c0e0888b3250b3aee0957c947e0100a56c9838b60021d15ca3ae7944108df0cf0733669d1cf787f44c2dfc8952ea71a734edd3c73be9efa9242a1a481a0afb6f1fe9aa86611db5b178e9d20c3290b1186c323ca4141de6203f688d55bfdfbdb3416e9900ddb7c4075c224bc5d902d8cd407230222a7c4536b3e177aaa6f5a3e6b79edd3d17934ad79521ede7b1082654aa415a880289a5d048847a8e3c9560a35ffc5854fff9125317531260e624516e76b24e41e208c7e4bd34282ddd33e6e9a97eebc516bac05b79098ec734936d9ce150e475f306537b8fe40216bdbb389ccc5f156d78f8b803408768bd185c31636a3fb52690ba8caad0b1c1c7a63ea8bbdb25d228d320746194e1d81f8e00a9b24c9139eb5435b6e6ce9aa1757dffe1161ff5242ebe61d50f39fdd451ede640b4dcdabf8cd98986f9eb88f7318a901677f227b892725ceba3a66fabb22d1a10f8440cb4bbca292c81c5c0902afdf3a2c9170a8e3000b5164c19c5c7302d34ff7c7c6fa3a037d68312566f96ea7e2f9f6939ad0d522e5bfc4a5e0802d5751191e18349613e37c07dac76abb370733a30e0fb7ed2b149369b9180241b6cd440a6a33918b0f3788b0902122aa6263947a3ca4ff0cd047ad79fe737942d31ab8d2e98f6e38e3313bf695e59a20d31e427d06e88a2a332d1176cbfe4bc0b023910dee1fe59d09dd42e41d6d11e62775034f7379a9c8aa7cf50c9876fb6b9e61aa43da190927d903b4349eecba0d1b3f0cdbc2f28d407a54bea149e7622bd8a146c991c4b72601d7d4615537b071b61116860481a80bf4082eb87ccb45180966e5126473c8129dc61049991c9ef181f34b3d070a46c426e493ed4eafa9ba3559462918a74be2d8e85ae7d8e7b79300eba955d4ece6b56daca5aa2a7b8bfbd99ac0cf0fb6ee7ea7cfa5ae01d9cbbdfa58a6137adeab208a6c290c350e97e4a9b7623d3b0ae97773cfbb144c1a74df1d72e333f818a9a668b1e4b38f39b9af49fb98448e52e98b34021f2ecaeb950e2be7031cba690ba948d23b027</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      无权限访问，需要密码才能继续阅读.
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>防火墙设置</title>
    <link href="https://www.rootfw.com/posts/8189ee31.html"/>
    <id>https://www.rootfw.com/posts/8189ee31.html</id>
    <published>2020-06-27T14:52:27.000Z</published>
    <updated>2020-08-06T11:34:11.308Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、查看防火墙状态"><a href="#一、查看防火墙状态" class="headerlink" title="一、查看防火墙状态"></a>一、查看防火墙状态</h2><p><strong>firewalld的基本使用</strong><br><strong>systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体</strong><br>启动：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><a id="more"></a><p>查看： </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p>停止：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>禁用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p><strong>服务：/sbin/chkconfig –add foo 把新生成的foo.service 放到/usr/lib/systemd/system/下面，然后采用load命令导入 systemctl load foo.service</strong><br>启动一个服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld.service</span><br></pre></td></tr></table></figure><p>关闭一个服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><p>重启一个服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><p>显示一个服务的状态：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure><p>在开机时启用一个服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br></pre></td></tr></table></figure><p>一般需要重启一下机器，不然后面做的设置可能不会生效</p><h2 id="二、开放或限制端口"><a href="#二、开放或限制端口" class="headerlink" title="二、开放或限制端口"></a>二、开放或限制端口</h2><p>1、开放端口<br>如我们需要开启Shell连接时需要使用的22端口</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=22/tcp --permanent</span><br></pre></td></tr></table></figure><p>其中–permanent的作用是使设置永久生效，不加的话机器重启之后失效</p><p>重新载入一下防火墙设置，使设置生效</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>可通过如下命令查看是否生效</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --query-port=22/tcp</span><br></pre></td></tr></table></figure><p>如下命令可查看当前系统打开的所有端口</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h2 id="三、限制端口"><a href="#三、限制端口" class="headerlink" title="三、限制端口"></a>三、限制端口</h2><p>比如我们现在需要关掉刚刚打开的22端口</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=22/tcp --permanent</span><br></pre></td></tr></table></figure><p>重新载入一下防火墙设置，使设置生效</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>再去查看系统所有开放的端口，已经看到没有22端口了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h2 id="四、批量开放或限制端口"><a href="#四、批量开放或限制端口" class="headerlink" title="四、批量开放或限制端口"></a>四、批量开放或限制端口</h2><p>批量开放端口，如从100到500这之间的端口我们全部要打开</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=100-500/tcp --permanent</span><br></pre></td></tr></table></figure><p>重新载入一下防火墙设置，使设置生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>查看系统所有开放的端口，可以看到从100到500的端口已被全部开放</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --list-ports</span><br></pre></td></tr></table></figure><p>同理，批量限制端口为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --remove-port&#x3D;100-500&#x2F;tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="五、开放或限制IP"><a href="#五、开放或限制IP" class="headerlink" title="五、开放或限制IP"></a>五、开放或限制IP</h2><p>1.限制IP地址访问<br>比如限制IP为192.168.0.200的地址禁止访问80端口即禁止访问机器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule&#x3D;&quot;rule family&#x3D;&quot;ipv4&quot; source address&#x3D;&quot;192.168.0.200&quot; port protocol&#x3D;&quot;tcp&quot; port&#x3D;&quot;80&quot; reject&quot;</span><br></pre></td></tr></table></figure><p>重新载入一下防火墙设置，使设置生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>查看已经设置的规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --list-rich-rules</span><br></pre></td></tr></table></figure><p>2.解除IP地址限制<br>解除刚才被限制的192.168.0.200</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule&#x3D;&quot;rule family&#x3D;&quot;ipv4&quot; source address&#x3D;&quot;192.168.0.200&quot; port protocol&#x3D;&quot;tcp&quot; port&#x3D;&quot;80&quot; accept&quot;</span><br></pre></td></tr></table></figure><p>重新载入一下防火墙设置，使设置生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>再查看规则设置发现已经没有192.168.0.200的限制了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --list-rich-rules</span><br></pre></td></tr></table></figure><p>如设置未生效，可尝试直接编辑规则文件，删掉原来的设置规则，重新载入一下防火墙即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;firewalld&#x2F;zones&#x2F;public.xml</span><br></pre></td></tr></table></figure><p>3.限制IP地址段<br>如我们需要限制10.0.0.0-10.0.0.255这一整个段的IP，禁止他们访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule&#x3D;&quot;rule family&#x3D;&quot;ipv4&quot; source address&#x3D;&quot;10.0.0.0&#x2F;24&quot; port protocol&#x3D;&quot;tcp&quot; port&#x3D;&quot;80&quot; reject&quot;</span><br></pre></td></tr></table></figure><p>其中10.0.0.0/24表示为从10.0.0.0这个IP开始，24代表子网掩码为255.255.255.0，共包含256个地址，即从0-255共256个IP，即正好限制了这一整段的IP地址，具体的设置规则可参考下表</p><p>重新载入一下防火墙设置，使设置生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>查看规则，确认是否生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone&#x3D;public --list-rich-rules</span><br></pre></td></tr></table></figure><p>同理，打开限制为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule&#x3D;&quot;rule family&#x3D;&quot;ipv4&quot; source address&#x3D;&quot;10.0.0.0&#x2F;24&quot; port protocol&#x3D;&quot;tcp&quot; port&#x3D;&quot;80&quot; accept&quot;</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、查看防火墙状态&quot;&gt;&lt;a href=&quot;#一、查看防火墙状态&quot; class=&quot;headerlink&quot; title=&quot;一、查看防火墙状态&quot;&gt;&lt;/a&gt;一、查看防火墙状态&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;firewalld的基本使用&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体&lt;/strong&gt;&lt;br&gt;启动：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl start firewalld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://www.rootfw.com/categories/Linux/"/>
    
      <category term="centos7" scheme="https://www.rootfw.com/categories/Linux/centos7/"/>
    
    
      <category term="Linux" scheme="https://www.rootfw.com/tags/Linux/"/>
    
      <category term="防火墙" scheme="https://www.rootfw.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>shadowsocks原生部署</title>
    <link href="https://www.rootfw.com/posts/80f65055.html"/>
    <id>https://www.rootfw.com/posts/80f65055.html</id>
    <published>2020-06-27T11:17:37.000Z</published>
    <updated>2020-08-06T11:08:42.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-准备工作"><a href="#一-准备工作" class="headerlink" title="一.准备工作"></a>一.准备工作</h2><p><strong>1.root权限</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p><strong>2.系统包更新</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="二-下载安装pip"><a href="#二-下载安装pip" class="headerlink" title="二.下载安装pip"></a>二.下载安装pip</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">"https://bootstrap.pypa.io/get-pip.py"</span> -o <span class="string">"get-pip.py"</span>  <span class="comment">#下载pip</span></span><br><span class="line"></span><br><span class="line">python get-pip.py  <span class="comment">#安装pip</span></span><br></pre></td></tr></table></figure><h2 id="三-安装SS和配置SS参数"><a href="#三-安装SS和配置SS参数" class="headerlink" title="三.安装SS和配置SS参数"></a>三.安装SS和配置SS参数</h2><p><strong>1.安装shadowsocks</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><p><strong>2.root权限输入<code>vi /etc/shadowsocks.json</code> 配置shadowsocks参数，<code>如果不能vi进去可以使用nano或者vim进行配置</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;         </span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8388</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"password"</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-创建启动脚本"><a href="#四-创建启动脚本" class="headerlink" title="四.创建启动脚本"></a>四.创建启动脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/system/shadowsocks.service</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Shadowsocks</span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line">ExecStart=/usr/bin/ssserver -c/etc/shadowsocks.json</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><strong>温馨提示：<code>Shadowsocks需要安装libsodium加密库，否则只能使用</code>“aes-256-cfb”<code>无法使用其他加密协议，请执行以下代码：</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz</span><br><span class="line"></span><br><span class="line">tar xf libsodium-1.0.18.tar.gz &amp;&amp; <span class="built_in">cd</span> libsodium-1.0.18</span><br></pre></td></tr></table></figure><h2 id="五-调试服务"><a href="#五-调试服务" class="headerlink" title="五.调试服务"></a>五.调试服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> shadowsocks    <span class="comment">#让服务ss服务生效开机启动</span></span><br><span class="line"></span><br><span class="line">systemctl start shadowsocks     <span class="comment">#启动ss</span></span><br><span class="line"></span><br><span class="line">systemctl status shadowsocks -l    <span class="comment">#查看状态</span></span><br></pre></td></tr></table></figure><p>然后自己去安装BBR加速<br>温馨提示：你真的懂吗？对于懂得用ss的朋友来说就是好用，对于不懂得使用ss的朋友来说即使您现在使用的是v2ray或者trojan GFW真要墙你IP也是轻而易举，不管使用任何翻墙软件大部分情况是在于人，在谁的手中使用，shadowsocks一样可以配置NGINX等服务搭配使用，一样可以加CDN不要被一些UP主带坏了节奏，任何问题如果经不起验证都是扯蛋</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-准备工作&quot;&gt;&lt;a href=&quot;#一-准备工作&quot; class=&quot;headerlink&quot; title=&quot;一.准备工作&quot;&gt;&lt;/a&gt;一.准备工作&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.root权限&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo -i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;2.系统包更新&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="SS" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/SS/"/>
    
    
      <category term="SS" scheme="https://www.rootfw.com/tags/SS/"/>
    
      <category term="科学上网" scheme="https://www.rootfw.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>V2ray+WebSocket+TLS+Nginx</title>
    <link href="https://www.rootfw.com/posts/54c2b25c.html"/>
    <id>https://www.rootfw.com/posts/54c2b25c.html</id>
    <published>2020-06-16T13:34:25.000Z</published>
    <updated>2020-08-06T11:13:23.142Z</updated>
    
    <content type="html"><![CDATA[<p><strong>centos7系统环境搭建，温馨提示：请使用centos7系统搭建，如果学习能力强可以Google搜索Debian或其他系统搭建方法，只是部分代码不一样而已，V2Ray+WebSocket+TLS+Nginx 前几期视频分别提到过 TLS 和 WebSocket 的配置方法，而本文搭配 Web 服务并同时实现 TLS 和 WebSocket浏览器域名访问自动跳转https有简单前端网页。关于 Web 的软件官方给出Nginx，Caddy 和 Apache 三个例子，三选一即可</strong></p><h3 id="一-安装前准备"><a href="#一-安装前准备" class="headerlink" title="一.安装前准备"></a>一.安装前准备</h3><a id="more"></a><p><strong>1.更新服务器，大概几分钟左右耐心等待</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p><strong>2.把VPS服务器同步本地时间及时区（温馨提示：如果你在国外请同步所在国家时区）</strong><br>Centos7系统同步时间如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">date -R               //查看服务器时间</span><br><span class="line">timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line">date -R               //查看服务器时间</span><br></pre></td></tr></table></figure><p>Debian系统同步时间如下：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">date -R                //查看服务器时间</span><br><span class="line">rm -rf /etc/localtime</span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">date -R               //查看服务器时间</span><br></pre></td></tr></table></figure></p><p><strong>2.安装bbr（可选择安装了v2ray以后在安装）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">centos7系统</span><br><span class="line">yum -y install wget</span><br><span class="line">wget <span class="string">"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh </span><br><span class="line"></span><br><span class="line">debian系统  请确定服务器已经安装了wget 如没有按照请先执行这条代码 apt-get install wget</span><br><span class="line">wget --no-check-certificate -O tcp.sh https://github.com/cx9208/Linux-NetSpeed/raw/master/tcp.sh &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><h3 id="二-安装v2ray官方代码-（老的官方脚本）"><a href="#二-安装v2ray官方代码-（老的官方脚本）" class="headerlink" title="二.安装v2ray官方代码 （老的官方脚本）"></a>二.安装v2ray官方代码 （老的官方脚本）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure><p>安装成功后执行 <strong>vi /etc/v2ray/config.json</strong> 长按键盘D键删所有代码，在输入键盘Ins键进入可编辑状态，复制以下代码后 黏贴到配置中按键盘Esc键，在同时按键盘<strong>shift+：输入wq保存退出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">//复制以下代码</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"log"</span> : &#123;</span><br><span class="line">    <span class="string">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">    <span class="string">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>,</span><br><span class="line">    <span class="string">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"inbound"</span>: &#123;</span><br><span class="line">    <span class="string">"port"</span>: 9000, //重点(此端口与nginx配置保持一致)</span><br><span class="line">    <span class="string">"listen"</span>: <span class="string">"127.0.0.1"</span>, //重点(此端口与nginx配置保持一致)</span><br><span class="line">    <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">    <span class="string">"settings"</span>: &#123;</span><br><span class="line">      <span class="string">"clients"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"id"</span>: <span class="string">"eb950add-608e-409d-937f-e797324387093z"</span>, //你的UUID，可更改需与客户端保持一致 </span><br><span class="line">          <span class="string">"level"</span>: 1,</span><br><span class="line">          <span class="string">"alterId"</span>: 64 //此ID也需与客户端保持一致（不要设置超过100以上可自定义）</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">   <span class="string">"streamSettings"</span>:&#123;</span><br><span class="line">      <span class="string">"network"</span>: <span class="string">"ws"</span>, //可设置tcp等</span><br><span class="line">      <span class="string">"wsSettings"</span>: &#123;</span><br><span class="line">           <span class="string">"path"</span>: <span class="string">"/v2ray"</span> //与nginx配置相关（可自定义）</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"outbound"</span>: &#123;</span><br><span class="line">    <span class="string">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">    <span class="string">"settings"</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"outboundDetour"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123;&#125;,</span><br><span class="line">      <span class="string">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"routing"</span>: &#123;</span><br><span class="line">    <span class="string">"strategy"</span>: <span class="string">"rules"</span>,</span><br><span class="line">    <span class="string">"settings"</span>: &#123;</span><br><span class="line">      <span class="string">"rules"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">          <span class="string">"ip"</span>: [</span><br><span class="line">            <span class="string">"0.0.0.0/8"</span>,</span><br><span class="line">            <span class="string">"10.0.0.0/8"</span>,</span><br><span class="line">            <span class="string">"100.64.0.0/10"</span>,</span><br><span class="line">            <span class="string">"127.0.0.0/8"</span>,</span><br><span class="line">            <span class="string">"169.254.0.0/16"</span>,</span><br><span class="line">            <span class="string">"172.16.0.0/12"</span>,</span><br><span class="line">            <span class="string">"192.0.0.0/24"</span>,</span><br><span class="line">            <span class="string">"192.0.2.0/24"</span>,</span><br><span class="line">            <span class="string">"192.168.0.0/16"</span>,</span><br><span class="line">            <span class="string">"198.18.0.0/15"</span>,</span><br><span class="line">            <span class="string">"198.51.100.0/24"</span>,</span><br><span class="line">            <span class="string">"203.0.113.0/24"</span>,</span><br><span class="line">            <span class="string">"::1/128"</span>,</span><br><span class="line">            <span class="string">"fc00::/7"</span>,</span><br><span class="line">            <span class="string">"fe80::/10"</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="string">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你可以输入  service v2ray restart  在输入  service v2ray status -l <span class="comment">#看看是否运行成功</span></span><br><span class="line">service v2ray start|stop|status|reload|restart|force-reload    <span class="comment">#调试 V2Ray 的运行代码</span></span><br></pre></td></tr></table></figure><p>打开 80（HTTP）和 443（HTTPS）端口(如果看过我前几期视频，确定防火墙规则设置好了，谷歌云可以忽略。其他品牌服务器请确认已经开启了80和443端口如果没有可尝试下面代码操作或者服务器网页端<br>开启<code>http80端口</code>和<code>https 443端口</code>)</p><p>也可以通过下面的命令来打开这两个端口:请自行开启防火墙开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=http</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=https</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="三-安装NGINX"><a href="#三-安装NGINX" class="headerlink" title="三.安装NGINX"></a>三.安装NGINX</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装 EPEL 仓库（谷歌云忽略此步骤，如果你是使用其他品牌vps服务器如果没有安装EPEL请先安装）</span></span><br><span class="line">sudo yum install epel-release</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装 Nginx  【 yum remove nginx 如果想删除nginx卸载命令 】</span></span><br><span class="line">sudo yum install nginx</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx.service         <span class="comment">#设置开机启动Nginx</span></span><br><span class="line"></span><br><span class="line">sudo systemctl start nginx.service          <span class="comment">#启动Nginx服务</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">调试代码如下：</span><br><span class="line">sudo systemctl start nginx.service                //开启 Nginx</span><br><span class="line">sudo systemctl stop nginx.service                //停止 Nginx</span><br><span class="line">sudo systemctl status -l nginx.service          //查看 Nginx运行状态</span><br><span class="line">sudo systemctl restart nginx.service            //重新启动 Nginx</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> nginx.service           //取消开机启动 Nginx</span><br><span class="line">sudo systemctl reload nginx.service           //重载Nginx (如更改Nginx配置需要重新载入数据)</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx.service            //开机启动</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">调试代码如下： Nginx调试也可以不需要代码后面添加 **.service** 请先**sudo systemctl start nginx.service**</span><br><span class="line">和**sudo systemctl <span class="built_in">enable</span> nginx.service** 然后在通过下面代码也可以调试.</span><br><span class="line"></span><br><span class="line">sudo systemctl start nginx              //开启 Nginx</span><br><span class="line">sudo systemctl stop nginx              //停止 Nginx</span><br><span class="line">sudo systemctl status -l nginx        //查看 Nginx运行状态</span><br><span class="line">sudo systemctl restart nginx             //重新启动 Nginx</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> nginx           //取消开机启动 Nginx</span><br><span class="line">sudo systemctl reload nginx          //重载Nginx (如更改Nginx配置需要重新载入数据)</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx          //开机启动</span><br></pre></td></tr></table></figure><p>通过以上方式安装的 Nginx，所有相关的配置文件都在 /etc/nginx/ 目录中<br><strong>Nginx 的主配置文件是 /etc/nginx/nginx.conf</strong><br><strong>Nginx 日志文件（access.log 和 error.log ）位于 /var/log/nginx/ 目录中。</strong></p><p>如果在设置完成之后不能成功使用，可能是由于 SElinux 机制(如果你是 CentOS 7 的用户请特别留意SElinux 这一机制)阻止了 Nginx 转发向内网的数据<br>如果是这样的话，在V2Ray的日志里不会有访问信息，在 Nginx 的日志里会出现大量的 “Permission Denied” 字段<br>要解决这一问题需要在终端下键入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect 1    &#x2F;&#x2F;debian忽略</span><br></pre></td></tr></table></figure><p>验证 Nginx 是否成功启动，可以在浏览器中打开 <a href="http://YOUR_IP">http://YOUR_IP</a>   注意：打开则显示centos网页 但是提示不安全网站没开启ssl加密https</p><h3 id="四-生成证书"><a href="#四-生成证书" class="headerlink" title="四.生成证书"></a>四.生成证书</h3><p><strong>如果你已经有其他证书可忽略，把证书和密钥放到服务器指定目录下，只需在Nginx 中指定 证书和密钥路径。申请证书方法太多可通过安装acme.sh工具生成证书或其他方法生成证书，可Google搜索。</strong></p><p><strong>1.安装acem.sh证书生成工具，以下提供3种方法安装，选其中任意一种方法安装证书工具 (温馨提示：自动升级acme.sh在root下输入 acme.sh upgrade)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh   // 如提示安装失败 请先安装curl 输入 yum -y install curl</span><br><span class="line">wget -O -  https://get.acme.sh | sh     //如提示安装失败请（先安装wget）输入 yum -y install wget 已经安装了忽略</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/acmesh-official/acme.sh.git   // 如提示安装失败 先安装git 已经安装了的忽略 输入 yum install git</span><br><span class="line"><span class="built_in">cd</span> ./acme.sh</span><br><span class="line">./acme.sh --install</span><br></pre></td></tr></table></figure><p>通过以上代码安装acme.sh提示红色抱错 你可以按实际相关情况而定安装依赖 比如安装socat 或者 netcat<br>       <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">centos7  yum install socat  <span class="comment">#通过80端口生成证书的依赖</span></span><br><span class="line">centos7  yum isntall netcat</span><br><span class="line"></span><br><span class="line">debian  apt-get install openssl cron socat curl</span><br><span class="line">debian  apt-get -y install netcat</span><br><span class="line"></span><br><span class="line">安装成功后执行 <span class="built_in">source</span> ~/.bashrc  以确保脚本所设置的命令别名生效</span><br></pre></td></tr></table></figure></p><p><strong>2.生成证书 路径为/root/.acme.sh文件下 安装好后可自行查看</strong><br>  <strong>温馨提示：通过acme.sh生成证书有多种方法：</strong><br>  例如—自动DNS API集成 如：cloudflare DNS API 令牌 和 使用全局API密钥 acme.sh支持大多数dns生成证书<br>  例如—使用DNS手动模式，等多种其他安装方法，如果你是个好学的人可Google </p><p>  生成证书如下：本期视频只用指定端口 生成证书 <strong>推荐使用443端口生成证书</strong> （一般用单域名足以，毕竟是翻墙用无需搞那么多花里胡哨的多域，比如：主域baidu.com那么不建议使用<a href="http://www.baidu.com,因为是翻墙的前端web请自定义比如tw.baidu.com,前缀tw可以自定义请不要写太长，主域baidu.com和二级www.baidu.com可以备用你懂的）">www.baidu.com,因为是翻墙的前端web请自定义比如tw.baidu.com,前缀tw可以自定义请不要写太长，主域baidu.com和二级www.baidu.com可以备用你懂的）</a></p><p><strong>1.通过侦听80端口申请证书，如果80端口被占用,请使用443端口,请确保这些端口都打开了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone -k ec-256</span><br></pre></td></tr></table></figure><p><strong>2.如果您80在反向代理或负载均衡器后面使用非标准端口，则可以–httpport用来指定端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone --httpport 端口</span><br></pre></td></tr></table></figure><p><strong>3.侦听443端口以颁发证书，请确保443端口开启</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn -k ec-256</span><br></pre></td></tr></table></figure><p><strong>4.如果您443在反向代理或负载均衡器后面使用非标准端口，则可以–tlsport用来指定端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn --tlsport 端口</span><br></pre></td></tr></table></figure><p>  <strong>-k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书</strong></p><h3 id="五-把证书和密钥安装到指定路径-etc-v2ray-（路径可自定义）"><a href="#五-把证书和密钥安装到指定路径-etc-v2ray-（路径可自定义）" class="headerlink" title="五.把证书和密钥安装到指定路径 /etc/v2ray （路径可自定义）"></a>五.把证书和密钥安装到指定路径 /etc/v2ray （路径可自定义）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ecc 安装代码 sudo ~&#x2F;.acme.sh&#x2F;acme.sh --installcert -d 域名 --fullchainpath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.crt --keypath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.key --ecc</span><br><span class="line"></span><br><span class="line">rsa 安装代码 sudo ~&#x2F;.acme.sh&#x2F;acme.sh --installcert -d 域名 --fullchainpath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.crt --keypath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.key</span><br></pre></td></tr></table></figure><h3 id="六-配置NGINX-conf"><a href="#六-配置NGINX-conf" class="headerlink" title="六.配置NGINX *.conf"></a>六.配置NGINX *.conf</h3><p><strong>vi /etc/nginx/nginx.conf  #进入编辑配置文件：长按键盘上D键删除所有配置信息，再按键盘Ins键进入编辑模式复制如下代码黏贴到配置中编辑，填写对应自己的配置信息后。最后同时按键盘上 shift+: 键，在输入wq保存退出</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include  /etc/nginx/mime.types;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 域名;</span><br><span class="line">    rewrite ^/(.*) https://域名<span class="variable">$1</span> permanent; <span class="comment">#填写自己域名</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    server <span class="comment">#关键代码</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="comment"># SSL configuration</span></span><br><span class="line">    listen 443 ssl http2 default_server;</span><br><span class="line">    listen [::]:443 ssl http2 default_server;</span><br><span class="line">    ssl_certificate /路径/*.pem; <span class="comment">#你的ssl证书*.crt 或者 *.pem都可以</span></span><br><span class="line">    ssl_certificate_key /路径/*.key; <span class="comment">#你的ssl key</span></span><br><span class="line">    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;  <span class="comment">#套件RSA和ecc不一样在下面我会分别给出</span></span><br><span class="line">    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class="line">    root /usr/share/nginx/html; <span class="comment">#网页路径，这里也可以放你们自己的html网站替换下就可以了</span></span><br><span class="line">    server_name 域名; <span class="comment">#你的服务器域名</span></span><br><span class="line"> </span><br><span class="line">    location /ray &#123; <span class="comment">#/ray 切记路径需要和v2ray服务器端和客户端保持一致 可自定义名字</span></span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_pass http://127.0.0.1:端口; <span class="comment">#此IP地址和端口需要和v2ray服务器端配置保持一致，</span></span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">    proxy_set_header Connection <span class="string">"upgrade"</span>;</span><br><span class="line">    proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>套件如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;   #RSA套件</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;  <span class="comment">#Ecc套件</span></span><br></pre></td></tr></table></figure><p><strong>修改 Nginx 配置后，请务必重新加载配置  输入 sudo systemctl reload nginx.service   #必须这样操作</strong></p><p>查询是否开启ssl 打开网站<a href="https://myssl.com/ssl.html输入自己域名，端口输入443">https://myssl.com/ssl.html输入自己域名，端口输入443</a> 或者 打开<a href="https://www.ssllabs.com/ssltest/index.html">https://www.ssllabs.com/ssltest/index.html</a> 查询 ，也可以google搜索关键字ssl查询，很多网站可以查询，评分是否到达A级别</p><p><strong>温馨提示：通过acme.sh工具生成证书请使用443端口 代码如下：sudo ~/.acme.sh/acme.sh –issue -d 域名 –alpn -k ec-256 （侦听443端口以颁发证书，请确保443端口开启 按文章流程操作80端口生成证书时会提示端口占用，当然如果你想简单点可以通过已有购买的证书或者通过宝塔申请的或者其他证书，把密钥和证书直接复制拷贝到服务器指定路径下，在配置nginx指向证书和路径。部分免费证书会缺少CA证书那么在网站ssl评分就会大打折扣，解决办法是重新把CA证书添加下就可以了</strong></p><p><strong>通过在浏览器输入自己域名查询是否发现网站加了一把锁🔒开启了https， 且网站域名ssl评分到达A 如果是，恭喜你搭建成功.如果你已经学会了那么接下来的课程会越来越有意思.</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;centos7系统环境搭建，温馨提示：请使用centos7系统搭建，如果学习能力强可以Google搜索Debian或其他系统搭建方法，只是部分代码不一样而已，V2Ray+WebSocket+TLS+Nginx 前几期视频分别提到过 TLS 和 WebSocket 的配置方法，而本文搭配 Web 服务并同时实现 TLS 和 WebSocket浏览器域名访问自动跳转https有简单前端网页。关于 Web 的软件官方给出Nginx，Caddy 和 Apache 三个例子，三选一即可&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;一-安装前准备&quot;&gt;&lt;a href=&quot;#一-安装前准备&quot; class=&quot;headerlink&quot; title=&quot;一.安装前准备&quot;&gt;&lt;/a&gt;一.安装前准备&lt;/h3&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>v2ray定时重启服务crontab</title>
    <link href="https://www.rootfw.com/posts/a8ffa798.html"/>
    <id>https://www.rootfw.com/posts/a8ffa798.html</id>
    <published>2020-06-16T09:40:18.000Z</published>
    <updated>2020-08-08T08:18:27.353Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-服务器同步本地时间"><a href="#1-服务器同步本地时间" class="headerlink" title="1.服务器同步本地时间"></a>1.服务器同步本地时间</h3><p><strong>以下centos7同步时间选择其中一种</strong><br>方法一.校准时间同步本地时间  date -R 查看vps时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -i   <span class="comment">#root权限</span></span><br><span class="line">yum -y install ntp ntpdate   <span class="comment">#安装ntpdate工具</span></span><br><span class="line">ntpdate cn.pool.ntp.org     <span class="comment">#设置系统时间与本地网络时间同步</span></span><br><span class="line">hwclock --systohc      <span class="comment">#将系统时间写入硬件时间</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>方法二.校准时间同步    date -R 查看vps时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install ntp            //安装ntp服务</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd      //开机启动服务</span><br><span class="line">systemctl start ntpd       //启动服务</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai    //更改时区</span><br><span class="line">timedatectl <span class="built_in">set</span>-ntp yes        //启用ntp同步</span><br><span class="line">ntpq -p                   //同步时间</span><br></pre></td></tr></table></figure><p>方法三.校准时间同步上海时间时区   date -R 查看vps时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">date -R               //查看服务器时间</span><br><span class="line">timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line">date -R               //查看服务器时间</span><br></pre></td></tr></table></figure><p>Debian系统同步时间如下：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">date -R                //查看服务器时间</span><br><span class="line">rm -rf /etc/localtime</span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">date -R               //查看服务器时间</span><br></pre></td></tr></table></figure></p><h3 id="2-crontab服务"><a href="#2-crontab服务" class="headerlink" title="2.crontab服务"></a>2.crontab服务</h3><p>1.开启crontab,如果提示错误需要安装crontab,则输入代码无任何提示表示已经开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/service crond start</span><br></pre></td></tr></table></figure><p>2.输入提示绿色返回值证明已经安装并且开启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/service crond status        <span class="comment">#输入提示绿色返回值证明已经安装并且开启</span></span><br></pre></td></tr></table></figure><p>3.安装crontab：(有些系统没有安装crontab则需要安装,如果系统本身已经安装了请跳过这一步骤)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install crontabs    <span class="comment">#安装crontab</span></span><br></pre></td></tr></table></figure><h3 id="服务操作说明："><a href="#服务操作说明：" class="headerlink" title="服务操作说明："></a>服务操作说明：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/sbin/service crond start               <span class="comment">#启动服务</span></span><br><span class="line">/sbin/service crond stop              <span class="comment">#关闭服务</span></span><br><span class="line">/sbin/service crond restart            <span class="comment">#重启服务</span></span><br><span class="line">/sbin/service crond reload             <span class="comment">#重新载入配置</span></span><br><span class="line">/sbin/service crond status            <span class="comment">#查看crond是否正常运行</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/v2ray/config.json     <span class="comment">#进入配置文件信息</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"log"</span>: &#123;</span><br><span class="line">    <span class="string">"loglevel"</span>: <span class="string">"warning"</span>,    //可用info和debug和error和warning和none等5种模式</span><br><span class="line">    <span class="string">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,    // 这是路径 </span><br><span class="line">    <span class="string">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>     // 这是路径 </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"port"</span>: 16823,   //端口自定义</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,   </span><br><span class="line">      <span class="string">"settings"</span>: &#123;</span><br><span class="line">        <span class="string">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"b831381d-6324-4d53-ad4f-8cda48b30811"</span>,   //uuid自定义</span><br><span class="line">            <span class="string">"alterId"</span>: 64   //额外ID自定义</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"freedom"</span>,  </span><br><span class="line">      <span class="string">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.<strong>crontab -e</strong><br>输入i键,复制以下代码ctrl+c,黏贴ctrl+v然后输入shift+:在输入wq保存并且退出加入计划任务,可自定义添加需要的功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*/<span class="number">1</span> * * * * date &gt;&gt; ~/a.log <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">*/<span class="number">1</span> * * * * sudo journalctl -b -u v2ray &gt;&gt; ~/a.log <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">*/<span class="number">1</span> * * * * cat /<span class="keyword">var</span>/log/v2ray/access.log &gt;&gt; ~/c.log <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">*/<span class="number">1</span> * * * * cat /<span class="keyword">var</span>/log/v2ray/error.log &gt;&gt; ~/b.log <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">*/<span class="number">1</span> * * * * /bin/systemctl restart v2ray.service &gt;&gt; ~/a.log <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="以上脚本可自行编写多功能脚本"><a href="#以上脚本可自行编写多功能脚本" class="headerlink" title="以上脚本可自行编写多功能脚本"></a>以上脚本可自行编写多功能脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">crontab -l                <span class="comment">#查看已经添加的crontab任务</span></span><br><span class="line"></span><br><span class="line">tail或者(cat) ~/a.log或者~/b.log  <span class="comment">#查看最近10条日志</span></span><br><span class="line"></span><br><span class="line">more /root/a.log或者/b.log       <span class="comment">#查看所有日志</span></span><br><span class="line"></span><br><span class="line">tail -f /var/<span class="built_in">log</span>/cron          <span class="comment">#查看正常运行的crontab计划任务</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证crontab计划任务v2ray运行状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以根据特定字段过滤输出</span></span><br><span class="line">journalctl -b       <span class="comment">#显示本次启动后的所有日志：</span></span><br><span class="line"></span><br><span class="line">journalctl -f     <span class="comment">#查看正在输出的进程</span></span><br><span class="line"></span><br><span class="line">sudo journalctl -b -u v2ray   <span class="comment">#查看brook状态</span></span><br><span class="line"></span><br><span class="line">man 1 journalctl    <span class="comment">#查看所有 journalctl使用方法</span></span><br><span class="line"></span><br><span class="line">rm -rf ~/a.log 或者~/b.log   <span class="comment">#日志清除方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实例1：每1分钟执行一次command</span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* * * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例2：每小时的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 * * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例3：在上午8点到11点的第3和第15分钟执行</span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例4：每隔两天的上午8点到11点的第3和第15分钟执行</span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 */2 * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例5：每个星期一的上午8点到11点的第3和第15分钟执行</span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 * * 1 <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例6：每晚的21:30重启smb </span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">30 21 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例7：每月1、10、22日的4 : 45重启smb </span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">45 4 1,10,22 * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例8：每周六、周日的1 : 10重启smb</span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">10 1 * * 6,0 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb </span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0,30 18-23 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例10：每星期六的晚上11 : 00 pm重启smb </span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 23 * * 6 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例11：每一小时重启smb </span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* */1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例12：晚上11点到早上7点之间，每隔一小时重启smb </span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* 23-7/1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例13：每月的4号与每周一到周三的11点重启smb </span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 11 4 * mon-wed /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例14：一月一号的4点重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 4 1 jan * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">#实例14：每小时执行/etc/cron.hourly目录内的脚本</span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">01   *   *   *   *     root run-parts /etc/cron.hourly</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-服务器同步本地时间&quot;&gt;&lt;a href=&quot;#1-服务器同步本地时间&quot; class=&quot;headerlink&quot; title=&quot;1.服务器同步本地时间&quot;&gt;&lt;/a&gt;1.服务器同步本地时间&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;以下centos7同步时间选择其中一种&lt;/strong&gt;&lt;br&gt;方法一.校准时间同步本地时间  date -R 查看vps时间&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo -i   &lt;span class=&quot;comment&quot;&gt;#root权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum -y install ntp ntpdate   &lt;span class=&quot;comment&quot;&gt;#安装ntpdate工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ntpdate cn.pool.ntp.org     &lt;span class=&quot;comment&quot;&gt;#设置系统时间与本地网络时间同步&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hwclock --systohc      &lt;span class=&quot;comment&quot;&gt;#将系统时间写入硬件时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>SSR多用户脚本搭建</title>
    <link href="https://www.rootfw.com/posts/43d67d1c.html"/>
    <id>https://www.rootfw.com/posts/43d67d1c.html</id>
    <published>2020-06-16T08:20:33.000Z</published>
    <updated>2020-06-16T13:17:15.336Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搭建环境centos7-debian系统"><a href="#搭建环境centos7-debian系统" class="headerlink" title="搭建环境centos7/debian系统"></a>搭建环境centos7/debian系统</h3><p>第一步sudo -i</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p>第二步.ubuntu 系统安装 Curl </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y</span><br></pre></td></tr></table></figure><p>第二步.centos 系统安装 Curl 和 wget</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum install curl -y       </span><br><span class="line">yum install wget</span><br></pre></td></tr></table></figure><p>第三步.安装一键脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ComeBey/more-user-ssr/master/hasan.sh &amp;&amp; chmod +x hasan.sh &amp;&amp; bash hasan.sh</span><br></pre></td></tr></table></figure><p>第四步:调用命令调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash hasan.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;搭建环境centos7-debian系统&quot;&gt;&lt;a href=&quot;#搭建环境centos7-debian系统&quot; class=&quot;headerlink&quot; title=&quot;搭建环境centos7/debian系统&quot;&gt;&lt;/a&gt;搭建环境centos7/debian系统&lt;/h3&gt;&lt;
      
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="SSR" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/SSR/"/>
    
    
      <category term="翻墙" scheme="https://www.rootfw.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="SSR" scheme="https://www.rootfw.com/tags/SSR/"/>
    
  </entry>
  
  <entry>
    <title>V2ray+WS+TCP+TLS配置</title>
    <link href="https://www.rootfw.com/posts/231b7e32.html"/>
    <id>https://www.rootfw.com/posts/231b7e32.html</id>
    <published>2020-06-10T05:48:15.000Z</published>
    <updated>2020-08-06T11:15:41.752Z</updated>
    
    <content type="html"><![CDATA[<ol><li>v2ray+WS+TCP+TLS</li><li>安全级别不错</li><li>稳定性不错</li><li>推荐部署</li></ol><p><strong>centos7系统配置和Debian系统配置，acme.sh脚本所有证书将每60天自动更新一次（如果你非要手动更新随意)</strong></p><h3 id="第一步-V2RAY官方脚本搭建"><a href="#第一步-V2RAY官方脚本搭建" class="headerlink" title="第一步.V2RAY官方脚本搭建"></a>第一步.V2RAY官方脚本搭建</h3><p>centos7更新服务器 <strong>yum update -y</strong> (部分系统提示<strong>NO packages marked for update</strong>则无需更新)<br><strong>设置硬件时钟调整为与本地时钟一致, 设置时区为上海 date -R 是查看服务器当前时间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date -R</span><br><span class="line">timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><a id="more"></a><p>Debian系统同步时间如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date -R</span><br><span class="line">rm -rf /etc/localtime</span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><h3 id="第二步-安装bbr"><a href="#第二步-安装bbr" class="headerlink" title="第二步.安装bbr"></a>第二步.安装bbr</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos7 复制这条代码安装bbr加速如下:</span></span><br><span class="line">yum -y install wget</span><br><span class="line">wget <span class="string">"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#debian9 复制这条代码安装bbr加速如下:</span></span><br><span class="line"><span class="comment">#方法一如下：</span></span><br><span class="line">apt-get install wget</span><br><span class="line">wget -N --no-check-certificate https://bit.ly/2VWUksq &amp;&amp; chmod + hasan.sh &amp;&amp; bash hasan.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#备用代码</span></span><br><span class="line">apt-get install wget</span><br><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ComeBey/bbr/master/hasan.sh &amp;&amp; chmod + hasan.sh &amp;&amp; bash hasan.sh</span><br></pre></td></tr></table></figure><h3 id="第三步-安装v2ray官方代码"><a href="#第三步-安装v2ray官方代码" class="headerlink" title="第三步.安装v2ray官方代码"></a>第三步.安装v2ray官方代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh) </span><br><span class="line">vim /etc/v2ray/config.json              <span class="comment">#v2ray配置文件</span></span><br><span class="line">ervice v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行</span><br></pre></td></tr></table></figure><h3 id="第四步-安装acme-sh"><a href="#第四步-安装acme-sh" class="headerlink" title="第四步.安装acme.sh"></a>第四步.安装acme.sh</h3><p><a href="https://my.freenom.com/免费注册地址">https://my.freenom.com/免费注册地址</a> 当然我们也可以自行购买付费域名<br>证书生成工具 (温馨提示您还可以启用自动升级acme.sh在root下输入 acme.sh upgrade)<br>以下提供3种方法选其中任意一种方法安装证书工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh  </span><br><span class="line"><span class="comment">#如提示安装失败 请先安装curl 输入 yum -y install curl 或者 apt-get install curl</span></span><br><span class="line"></span><br><span class="line">wget -O -  https://get.acme.sh | sh  </span><br><span class="line"><span class="comment">#如提示安装失败请（先安装wget）输入 yum -y install wget 或者 apt-get install wget 已经安装了忽略</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/acmesh-official/acme.sh.git</span><br><span class="line"><span class="built_in">cd</span> ./acme.sh</span><br><span class="line">./acme.sh --install　　　　　　</span><br><span class="line"><span class="comment">#如提示安装失败 先安装git 已经安装了的忽略 输入 yum install git 或者 apt-get install git</span></span><br></pre></td></tr></table></figure><p>谷歌云直接安装（如果其他品牌vps也提示 install socat firt也请安装socat）centos7系统执行 yum install socat<br>debian系统执行 apt-get install openssl cron socat curl<br>socat为80端口必须用的依赖来申请证书用，如果您使用443端口申请证书则无需安装socat</p><p><strong>执行这条命令source ~/.bashrc</strong></p><p>安装过程中如果报错请查看面板提示信息，尝试安装acme.sh相关依赖项，比如安装 netcat 或 socat 如果提示报错才安装，不提示报错忽略<br>acme.sh 会安装到 ~/.acme.sh 目录下 （可通过root命令下 输入cd ~/.acme.sh查看，不懂的朋友请忽略继续下一步）</p><h3 id="第五步-acme-sh-生成证书"><a href="#第五步-acme-sh-生成证书" class="headerlink" title="第五步.acme.sh 生成证书"></a>第五步.acme.sh 生成证书</h3><p>以下的命令会临时监听 80 端口，请确保执行该命令前 80 端口没有占用 (80是http端口)<br><del>不推荐使用80端口生成证书</del> 推荐使用443端口生成证书<br>centos7系统 执行 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone -k ec-256</span><br></pre></td></tr></table></figure><p>Debian系统  执行 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --standalone -k ec-256</span><br></pre></td></tr></table></figure><p><strong>以下的命令会临时监听 443 端口，请确保执行该命令前 443 端口没有被占用且服务器443端口已经打开 （443是https端口）</strong></p><p>centos7系统 执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn -k ec-256</span><br></pre></td></tr></table></figure><p><strong>如果您443在反向代理或负载均衡器后面使用非标准端口，则可以<code>--tlsport</code>用来指定端口</strong></p><p>centos7系统  执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn --tlsport 端口 -k ec-256</span><br></pre></td></tr></table></figure><p>Debian系统   执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn -k ec-256</span><br></pre></td></tr></table></figure><p><strong>如果您443在反向代理或负载均衡器后面使用非标准端口，则可以–tlsport用来指定端口</strong></p><p>Debian系统  执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ~&#x2F;.acme.sh&#x2F;acme.sh --issue -d 域名 --alpn --tlsport 端口 -k ec-256</span><br></pre></td></tr></table></figure><p>-k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书</p><h3 id="第六步-证书和密钥安装到指定目录"><a href="#第六步-证书和密钥安装到指定目录" class="headerlink" title="第六步.证书和密钥安装到指定目录"></a>第六步.证书和密钥安装到指定目录</h3><p><strong>/etc/v2ray目录（路径可以自定义，当然也可以默认)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --installcert -d 域名 --fullchainpath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.crt --keypath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.key --ecc   # ecc 安装代码 </span><br><span class="line">sudo ~&#x2F;.acme.sh&#x2F;acme.sh --installcert -d 域名 --fullchainpath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.crt --keypath &#x2F;etc&#x2F;v2ray&#x2F;v2ray.key   #rsa 安装代码</span><br></pre></td></tr></table></figure><h3 id="第七步-配置文件-config-json"><a href="#第七步-配置文件-config-json" class="headerlink" title="第七步.配置文件 config.json"></a>第七步.配置文件 config.json</h3><p><strong>vim /etc/v2ray/config.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: <span class="number">443</span>, <span class="comment">// 服务器端口</span></span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,    </span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"23ad6b10-8d1a-40f7-8ad0-e3e35cd38297"</span>,  </span><br><span class="line">            <span class="attr">"alterId"</span>: <span class="number">64</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"streamSettings"</span>: &#123;</span><br><span class="line">        <span class="attr">"network"</span>: <span class="string">"tcp"</span>,</span><br><span class="line">        <span class="attr">"security"</span>: <span class="string">"tls"</span>, <span class="comment">// security 要设置为 tls 才会启用 TLS</span></span><br><span class="line">        <span class="attr">"tlsSettings"</span>: &#123;</span><br><span class="line">          <span class="attr">"certificates"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">"certificateFile"</span>: <span class="string">"/etc/v2ray/v2ray.crt"</span>, <span class="comment">// 证书文件</span></span><br><span class="line">              <span class="attr">"keyFile"</span>: <span class="string">"/etc/v2ray/v2ray.key"</span> <span class="comment">// 密钥文件</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行</strong></p><h3 id="第八步-验证是否正常开启"><a href="#第八步-验证是否正常开启" class="headerlink" title="第八步.验证是否正常开启"></a>第八步.验证是否正常开启</h3><p>TLS <a href="https://www.ssllabs.com/ssltest/index.html">https://www.ssllabs.com/ssltest/index.html</a></p><p><strong>手动更新证书密钥生成到 /etc/v2ray （温馨提示：视频中我讲错了acme.sh脚本所有证书将每60天自动更新一次，大家无需担心证书到期无法使用）</strong><br>ecc sudo ~/.acme.sh/acme.sh –renew -d 域名 –force –ecc<br>rsa sudo ~/.acme.sh/acme.sh –renew -d 域名 –force –rsa</p><p> 温馨提示：V2Ray 的 TLS 不是伪装或混淆，这是真正的 TLS。因此才需要域名和证书。 WS(WebSocket) 也不是伪装<br> 注意：使用 Qualys SSL Labs’s SSL Server Test 要求使用 443 端口，意味着你服务器配置的 inbound.port 应当是 443</p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;v2ray+WS+TCP+TLS&lt;/li&gt;
&lt;li&gt;安全级别不错&lt;/li&gt;
&lt;li&gt;稳定性不错&lt;/li&gt;
&lt;li&gt;推荐部署&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;centos7系统配置和Debian系统配置，acme.sh脚本所有证书将每60天自动更新一次（如果你非要手动更新随意)&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;第一步-V2RAY官方脚本搭建&quot;&gt;&lt;a href=&quot;#第一步-V2RAY官方脚本搭建&quot; class=&quot;headerlink&quot; title=&quot;第一步.V2RAY官方脚本搭建&quot;&gt;&lt;/a&gt;第一步.V2RAY官方脚本搭建&lt;/h3&gt;&lt;p&gt;centos7更新服务器 &lt;strong&gt;yum update -y&lt;/strong&gt; (部分系统提示&lt;strong&gt;NO packages marked for update&lt;/strong&gt;则无需更新)&lt;br&gt;&lt;strong&gt;设置硬件时钟调整为与本地时钟一致, 设置时区为上海 date -R 是查看服务器当前时间&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;date -R&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timedatectl &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-local-rtc 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timedatectl &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-timezone Asia/Shanghai&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="翻墙" scheme="https://www.rootfw.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>Brook crontab定时重启</title>
    <link href="https://www.rootfw.com/posts/10db3eaa.html"/>
    <id>https://www.rootfw.com/posts/10db3eaa.html</id>
    <published>2020-06-10T04:45:36.000Z</published>
    <updated>2020-08-06T11:06:42.318Z</updated>
    
    <content type="html"><![CDATA[<p>以下同步时间选择其中一种,如果无法同步本地时间请google下(关键字centos7或者centos6或者debian时间同步本地时间等关键字)<br><strong>方法1.校准时间同步本地时间  date -R 查看vps时间 sudo -i root权限进入</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp ntpdate   //安装ntpdate工具</span><br><span class="line">ntpdate cn.pool.ntp.org     //设置系统时间与本地网络时间同步</span><br><span class="line">hwclock --systohc          //将系统时间写入硬件时间</span><br></pre></td></tr></table></figure><p><strong>方法2.校准时间同步本地时间  date -R 查看vps时间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install ntp                //安装ntp服务</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd              //开机启动服务</span><br><span class="line">systemctl start ntpd              //启动服务</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai           //更改时区</span><br><span class="line">timedatectl <span class="built_in">set</span>-ntp yes           //启用ntp同步</span><br><span class="line">ntpq -p          //同步时间</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>crontab服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/sbin/service crond start     (开启crontab无任何提示表示已经开启)</span><br><span class="line">/sbin/service crond status    (查看状态)</span><br></pre></td></tr></table></figure><p>安装crontab：(有些系统没有安装crontab则需要安装,如果系统本身已经安装了请跳过这一步骤)</p><p><strong>yum install crontabs</strong> (安装crontab)</p><h2 id="服务操作说明："><a href="#服务操作说明：" class="headerlink" title="服务操作说明："></a>服务操作说明：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/sbin/service crond start  (启动服务)</span><br><span class="line"></span><br><span class="line">/sbin/service crond stop  (关闭服务)</span><br><span class="line"></span><br><span class="line">/sbin/service crond restart  (重启服务)</span><br><span class="line"></span><br><span class="line">/sbin/service crond reload  (重新载入配置 //重新载入配置)</span><br><span class="line"></span><br><span class="line">/sbin/service crond status  (查看crond是否正常运行)</span><br></pre></td></tr></table></figure><p>crontab -e (输入i键,复制以下代码ctrl+c,黏贴ctrl+v到加入计划任务,可自定义添加需要的功能)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * date &gt;&gt; ~/a.log 2&gt;&amp;1 </span><br><span class="line">*/1 * * * * sudo journalctl -b -u brook &gt;&gt; ~/a.log 2&gt;&amp;1</span><br><span class="line">*/1 * * * * /bin/systemctl restart brook.service &gt;&gt; ~/a.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">crontab -l (查看已经添加的crontab任务)</span><br><span class="line">tail ~/a.log 查看最近10条日志</span><br><span class="line">more /root/a.log 查看所有日志</span><br><span class="line">tail -f /var/<span class="built_in">log</span>/cron 查看正常运行的crontab计划任务</span><br><span class="line">验证crontab计划任务brook运行状态</span><br><span class="line">可以根据特定字段过滤输出</span><br><span class="line">journalctl -b   显示本次启动后的所有日志：</span><br><span class="line"></span><br><span class="line">journalctl -f 查看正在输出的进程</span><br><span class="line"></span><br><span class="line">sudo journalctl -b -u brook 查看brook状态</span><br><span class="line"></span><br><span class="line">man 1 journalctl 查看所有 journalctl使用方法</span><br><span class="line"></span><br><span class="line">rm -rf ~/a.log 日志清除方法</span><br><span class="line"></span><br><span class="line">实例1：每1分钟执行一次<span class="built_in">command</span></span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* * * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例2：每小时的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 * * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例3：在上午8点到11点的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 * * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例4：每隔两天的上午8点到11点的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 */2 * * <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例5：每个星期一的上午8点到11点的第3和第15分钟执行</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">3,15 8-11 * * 1 <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例6：每晚的21:30重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">30 21 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例7：每月1、10、22日的4 : 45重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">45 4 1,10,22 * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例8：每周六、周日的1 : 10重启smb</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">10 1 * * 6,0 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0,30 18-23 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例10：每星期六的晚上11 : 00 pm重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 23 * * 6 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例11：每一小时重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* */1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例12：晚上11点到早上7点之间，每隔一小时重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">* 23-7/1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例13：每月的4号与每周一到周三的11点重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 11 4 * mon-wed /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例14：一月一号的4点重启smb </span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">0 4 1 jan * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">实例15：每小时执行/etc/cron.hourly目录内的脚本</span><br><span class="line"></span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">01   *   *   *   *     root run-parts /etc/cron.hourly</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下同步时间选择其中一种,如果无法同步本地时间请google下(关键字centos7或者centos6或者debian时间同步本地时间等关键字)&lt;br&gt;&lt;strong&gt;方法1.校准时间同步本地时间  date -R 查看vps时间 sudo -i root权限进入&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum -y install ntp ntpdate   //安装ntpdate工具&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ntpdate cn.pool.ntp.org     //设置系统时间与本地网络时间同步&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hwclock --systohc          //将系统时间写入硬件时间&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;方法2.校准时间同步本地时间  date -R 查看vps时间&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install ntp                //安装ntp服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; ntpd              //开机启动服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl start ntpd              //启动服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timedatectl &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-timezone Asia/Shanghai           //更改时区&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timedatectl &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;-ntp yes           //启用ntp同步&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ntpq -p          //同步时间&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="Brook" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/Brook/"/>
    
    
      <category term="翻墙" scheme="https://www.rootfw.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="Brook" scheme="https://www.rootfw.com/tags/Brook/"/>
    
      <category term="定时重启" scheme="https://www.rootfw.com/tags/%E5%AE%9A%E6%97%B6%E9%87%8D%E5%90%AF/"/>
    
  </entry>
  
  <entry>
    <title>Brook centos7官方脚本搭建</title>
    <link href="https://www.rootfw.com/posts/c695a206.html"/>
    <id>https://www.rootfw.com/posts/c695a206.html</id>
    <published>2020-06-10T01:58:30.000Z</published>
    <updated>2020-08-06T11:05:12.892Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-更新服务器"><a href="#1-更新服务器" class="headerlink" title="1.更新服务器"></a>1.更新服务器</h3><p>1.输入sudo -i 进来root权限,  可自行选择升级内核,  yum update -y升级内核<br>2.yum install wget 下载wget工具<br>wget <a href="https://github.com/txthinking/brook/releases/download/v20190205/brook">https://github.com/txthinking/brook/releases/download/v20190205/brook</a> 下载brook服务器版本<br>3.输入cp brook /usr/bin  把brook拷贝到bin目录下<br>4.chmod +x /usr/bin/brook 给予当前路径brook可执行权限<br>5.brook -h #查看帮助<br>6.nohup ./brook server -l :80 -p pass1234 &amp;  添加brook端口和密码且让brook在后台运行<br><strong>复制如下代码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo -i   </span><br><span class="line">yum update -y</span><br><span class="line">yum install wget</span><br><span class="line">wget https://github.com/txthinking/brook/releases/download/v20190205/brook</span><br><span class="line">cp brook /usr/bin</span><br><span class="line">chmod +x /usr/bin/brook</span><br><span class="line">nohup ./brook server -l :80 -p pass1234 &amp;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Brook设置随系统启动"><a href="#Brook设置随系统启动" class="headerlink" title="Brook设置随系统启动"></a>Brook设置随系统启动</h3><p>vi /etc/systemd/system/brook.service        用vi创建brook.service启动脚本</p><p>按” i “进入insert模式,输入脚本如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description &#x3D; This is brook</span><br><span class="line">            </span><br><span class="line">[Service]</span><br><span class="line">ExecStart &#x3D; &#x2F;usr&#x2F;bin&#x2F;.&#x2F;brook server -l :80 -p pass1234</span><br><span class="line">            </span><br><span class="line">[Install]</span><br><span class="line">WantedBy &#x3D; multi-user.target</span><br></pre></td></tr></table></figure><p>按Esc，输入”shift+:”输入wq 回车，保存并退出</p><p>赋予可执行属性并生效： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;brook.service</span><br></pre></td></tr></table></figure><p>开启brook.service 服务  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;brook.service</span><br></pre></td></tr></table></figure><p>reboot 重启vps </p><h3 id="查看brook服务是否正常运行这台"><a href="#查看brook服务是否正常运行这台" class="headerlink" title="查看brook服务是否正常运行这台"></a>查看brook服务是否正常运行这台</h3><p>如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service brook status -l     如果正常启动会返回绿色 active (running)</span><br><span class="line">service brook start         开启brook服务</span><br><span class="line">service brook stop          停止brook运行</span><br><span class="line">service brook restart       重启brook服务</span><br></pre></td></tr></table></figure><p>systemctl list-unit-files 查看brook脚本是否生效 当重新修改brook密码后 我们需重载信息输入systemctl daemon-reload 或者重新启动vps 输入reboot</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-更新服务器&quot;&gt;&lt;a href=&quot;#1-更新服务器&quot; class=&quot;headerlink&quot; title=&quot;1.更新服务器&quot;&gt;&lt;/a&gt;1.更新服务器&lt;/h3&gt;&lt;p&gt;1.输入sudo -i 进来root权限,  可自行选择升级内核,  yum update -y升级内核&lt;br&gt;2.yum install wget 下载wget工具&lt;br&gt;wget &lt;a href=&quot;https://github.com/txthinking/brook/releases/download/v20190205/brook&quot;&gt;https://github.com/txthinking/brook/releases/download/v20190205/brook&lt;/a&gt; 下载brook服务器版本&lt;br&gt;3.输入cp brook /usr/bin  把brook拷贝到bin目录下&lt;br&gt;4.chmod +x /usr/bin/brook 给予当前路径brook可执行权限&lt;br&gt;5.brook -h #查看帮助&lt;br&gt;6.nohup ./brook server -l :80 -p pass1234 &amp;amp;  添加brook端口和密码且让brook在后台运行&lt;br&gt;&lt;strong&gt;复制如下代码&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo -i   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum update -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install wget&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://github.com/txthinking/brook/releases/download/v20190205/brook&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp brook /usr/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod +x /usr/bin/brook&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nohup ./brook server -l :80 -p pass1234 &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="Brook" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/Brook/"/>
    
    
      <category term="brook" scheme="https://www.rootfw.com/tags/brook/"/>
    
      <category term="翻墙" scheme="https://www.rootfw.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>v2ray TCP原生配置</title>
    <link href="https://www.rootfw.com/posts/3ba3d10d.html"/>
    <id>https://www.rootfw.com/posts/3ba3d10d.html</id>
    <published>2020-06-10T00:39:10.000Z</published>
    <updated>2020-06-25T04:14:00.155Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-安装脚本"><a href="#Linux-安装脚本" class="headerlink" title="Linux 安装脚本"></a>Linux 安装脚本</h2><p>V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测有没有安装过 V2Ray，如果没有，则进行完整的安装和配置；如果之前安装过 V2Ray，则只更新 V2Ray 二进制程序而不更新配置。</p><p>以下指令假设已在 su 环境下，如果不是，请先运行 sudo su。</p><p>运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。这两个组件是安装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon</p><h2 id="安装v2ray官方代码-老版本代码"><a href="#安装v2ray官方代码-老版本代码" class="headerlink" title="安装v2ray官方代码(老版本代码)"></a>安装v2ray官方代码(老版本代码)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure><p>运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。这两个组件是安装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon</p><h2 id="vps服务器时间同步本地时间"><a href="#vps服务器时间同步本地时间" class="headerlink" title="vps服务器时间同步本地时间"></a>vps服务器时间同步本地时间</h2><p>debian系统vps时间同步本地时间 (先输入sudo -i在同步时间 必须同步时间切记)<br>     <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -i     <span class="comment">#root权限</span></span><br><span class="line">sudo -R     <span class="comment">#查看vps服务器时间</span></span><br><span class="line">rm -rf /etc/localtime </span><br><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime     <span class="comment">#同步上海时间，如果您在海外请同步所在国家的时间</span></span><br></pre></td></tr></table></figure><br>centos7系统vps时间同步本地时间（先输入dudo -i在同步时间 必须同步时间切记）<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shangha                   <span class="comment">#同步上海时间，如果您在海外请同步所在国家的时间</span></span><br><span class="line">sudo -R                                                 <span class="comment">#重新查看本地时间</span></span><br></pre></td></tr></table></figure></p><h2 id="配置v2ray服务端"><a href="#配置v2ray服务端" class="headerlink" title="配置v2ray服务端"></a>配置v2ray服务端</h2><p>root权限下输入vi /etc/v2ray/config.json配置界面<br>长按键盘上 D键 清除所有当前配置，在按键盘上 Ins键 或者 键盘 i键<br>把下面代码复制并且黏贴到服务器中，在按键盘上ESC键，输入 ：wq 保存退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"log"</span>: &#123;</span><br><span class="line">        <span class="string">"access"</span>: <span class="string">"/var/log/v2ray/access.log"</span>,</span><br><span class="line">        <span class="string">"error"</span>: <span class="string">"/var/log/v2ray/error.log"</span>,</span><br><span class="line">        <span class="string">"loglevel"</span>: <span class="string">"warning"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"inbound"</span>: &#123;</span><br><span class="line">        <span class="string">"port"</span>: 12345, //请在防火墙开启对应的端口</span><br><span class="line">        <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,  //vmess协议</span><br><span class="line">        <span class="string">"settings"</span>: &#123;</span><br><span class="line">            <span class="string">"clients"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">"id"</span>: <span class="string">"db790014-700d-9b1c-d987-5aed2afa60ae"</span>,  //UUid 这个ID可以通过v2ray客户端生成new替换</span><br><span class="line">                    <span class="string">"level"</span>: 1,</span><br><span class="line">                    <span class="string">"alterId"</span>: 52  //额外id</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"outbound"</span>: &#123;</span><br><span class="line">        <span class="string">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">        <span class="string">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"inboundDetour"</span>: [],</span><br><span class="line">    <span class="string">"outboundDetour"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"protocol"</span>: <span class="string">"blackhole"</span>,</span><br><span class="line">            <span class="string">"settings"</span>: &#123;&#125;,</span><br><span class="line">            <span class="string">"tag"</span>: <span class="string">"blocked"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"routing"</span>: &#123;</span><br><span class="line">        <span class="string">"strategy"</span>: <span class="string">"rules"</span>,</span><br><span class="line">        <span class="string">"settings"</span>: &#123;</span><br><span class="line">            <span class="string">"rules"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">                    <span class="string">"ip"</span>: [</span><br><span class="line">                        <span class="string">"0.0.0.0/8"</span>,</span><br><span class="line">                        <span class="string">"10.0.0.0/8"</span>,</span><br><span class="line">                        <span class="string">"100.64.0.0/10"</span>,</span><br><span class="line">                        <span class="string">"127.0.0.0/8"</span>,</span><br><span class="line">                        <span class="string">"169.254.0.0/16"</span>,</span><br><span class="line">                        <span class="string">"172.16.0.0/12"</span>,</span><br><span class="line">                        <span class="string">"192.0.0.0/24"</span>,</span><br><span class="line">                        <span class="string">"192.0.2.0/24"</span>,</span><br><span class="line">                        <span class="string">"192.168.0.0/16"</span>,</span><br><span class="line">                        <span class="string">"198.18.0.0/15"</span>,</span><br><span class="line">                        <span class="string">"198.51.100.0/24"</span>,</span><br><span class="line">                        <span class="string">"203.0.113.0/24"</span>,</span><br><span class="line">                        <span class="string">"::1/128"</span>,</span><br><span class="line">                        <span class="string">"fc00::/7"</span>,</span><br><span class="line">                        <span class="string">"fe80::/10"</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="string">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><p>不同VPS服务器设置不一样，请在服务器网页后台添加防火墙规则，有些服务器后台没有防火墙设置则需要代码开启<br>启动防火墙： systemctl start firewalld<br>开机启动：systemctl enable firewalld.service<br>查看状态： systemctl status firewalld<br>开启12345端口：firewall-cmd –zone=public –add-port=12345/tcp –permanen 开12345tcp端口（端口自定义保持和v2ray端口一致）<br>重新加载防火墙：sudo firewall-cmd –reload<br>重新启动防火墙：systemctl restart firewalld </p><h2 id="查看v2ray运行程序"><a href="#查看v2ray运行程序" class="headerlink" title="查看v2ray运行程序"></a>查看v2ray运行程序</h2><p>   输入代码service v2ray start 开启v2ray<br>   输入代码service v2ray stop  关闭v2ray<br>   输入代码service v2ray restart  重新启动v2ray<br>   输入代码service v2ray status -l 查看v2ray运行状态</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-安装脚本&quot;&gt;&lt;a href=&quot;#Linux-安装脚本&quot; class=&quot;headerlink&quot; title=&quot;Linux 安装脚本&quot;&gt;&lt;/a&gt;Linux 安装脚本&lt;/h2&gt;&lt;p&gt;V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测
      
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="翻墙" scheme="https://www.rootfw.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
  <entry>
    <title>v2ray下载安装</title>
    <link href="https://www.rootfw.com/posts/65f94be0.html"/>
    <id>https://www.rootfw.com/posts/65f94be0.html</id>
    <published>2020-06-09T13:29:49.000Z</published>
    <updated>2020-08-06T11:22:28.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="v2ray主要特征"><a href="#v2ray主要特征" class="headerlink" title="v2ray主要特征"></a>v2ray主要特征</h1><ul><li>多入口多出口: 一个 V2Ray 进程可并发支持多个入站和出站协议，每个协议可独立工作。</li><li>可定制化路由: 入站流量可按配置由不同的出口发出。轻松实现按区域或按域名分流，以达到最优的网络性能。</li><li>多协议支持: V2Ray 可同时开启多个协议支持，包括 Socks、HTTP、Shadowsocks、VMess 等。每个协议可单独设置– 传输载   　体，比如 TCP、mKCP、WebSocket 等。</li><li>隐蔽性: V2Ray 的节点可以伪装成正常的网站（HTTPS），将其流量与正常的网页流量混淆，以避开第三方干扰。</li><li>反向代理: 通用的反向代理支持，可实现内网穿透功能。</li><li>多平台支持: 原生支持所有常见平台，如 Windows、Mac OS、Linux，并已有第三方支持移动平台</li></ul><a id="more"></a><h1 id="v2ray在以下平台中可使用"><a href="#v2ray在以下平台中可使用" class="headerlink" title="v2ray在以下平台中可使用"></a>v2ray在以下平台中可使用</h1><ul><li>Windows 7 及之后版本（x86 / amd64）；</li><li>Mac OS X 10.10 Yosemite 及之后版本（amd64）；</li><li>Linux 2.6.23 及之后版本（x86 / amd64 / arm / arm64 / mips64 / mips）；包括但不限于 Debian 7 / 8、Ubuntu 12.04 / 14.04 及后续版本、CentOS 6 / 7、Arch Linux；</li><li>FreeBSD (x86 / amd64)；</li><li>OpenBSD (x86 / amd64)；</li><li>Dragonfly BSD (amd64)；</li><li>IOS/安卓/软路由等</li></ul><h1 id="下载-v2ray"><a href="#下载-v2ray" class="headerlink" title="下载 v2ray"></a>下载 v2ray</h1><ul><li><p><a href="https://github.com/v2ray/v2ray-core/releases">Github Release: github.com/v2ray/v2ray-core</a></p></li><li><p><a href="https://github.com/v2ray/dist/">Github 分流: github.com/v2ray/dist</a></p></li><li><p><a href="https://github.com/v2ray/homebrew-v2ray">Homebrew: github.com/v2ray/homebrew-v2ray</a></p></li><li><p><a href="https://www.archlinux.org/packages/community/x86_64/v2ray/">Arch Linux: packages/community/x86_64/v2ray</a></p></li><li><p><a href="https://snapcraft.io/v2ray-core">Snapcraft: snapcraft.io/v2ray-core</a></p></li><li><p>压缩包均为 zip 格式，找到对应平台的压缩包，下载解压即可使用。</p></li></ul><h1 id="验证安装包"><a href="#验证安装包" class="headerlink" title="验证安装包"></a>验证安装包</h1><ul><li>V2Ray 提供两种验证方式：</li></ul><ol><li>安装包 zip 文件的 SHA1 / SHA256 摘要，在每个安装包对应的.dgst文件中可以找到。</li><li>可运行程序（v2ray 或 v2ray.exe）的 gpg 签名，文件位于安装包中的 v2ray.sig 或 v2ray.exe.sig。签名公钥可以在<a href="https://raw.githubusercontent.com/v2ray/v2ray-core/master/release/verify/official_release.asc">代码库</a>中找到。</li></ol><h1 id="Windows-和-Mac-OS-安装方式"><a href="#Windows-和-Mac-OS-安装方式" class="headerlink" title="Windows 和 Mac OS 安装方式"></a>Windows 和 Mac OS 安装方式</h1><ul><li>通过上述方式下载的压缩包，解压之后可看到 v2ray 或 v2ray.exe。直接运行即可。</li></ul><h1 id="Linux-发行版仓库"><a href="#Linux-发行版仓库" class="headerlink" title="Linux 发行版仓库"></a>Linux 发行版仓库</h1><ul><li>部分发行版可能已收录 V2Ray 到其官方维护和支持的软件仓库/软件源中。</li><li>出于兼容性、适配性考虑，您可以考虑选用由您发行版开发团队维护的软件包或下文的安装脚本亦或基于已发布的二进制文件或源代&emsp;码安装。</li></ul><h1 id="Linux-安装脚本"><a href="#Linux-安装脚本" class="headerlink" title="Linux 安装脚本"></a>Linux 安装脚本</h1><ul><li><p>V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测有没有安装过 V2Ray，如果没有，则进行完整的安装和配  置；如果之前安装过 V2Ray，则只更新 V2Ray 二进制程序而不更新配置。</p></li><li><p>以下指令假设已在 su 环境下，如果不是，请先运行 sudo su。</p></li><li><p>运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。</p></li><li><p>这两个组件是安   装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure></li><li><p>此脚本会自动安装以下文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;v2ray：V2Ray 程序；</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;v2ctl：V2Ray 工具；</span><br><span class="line">&#x2F;etc&#x2F;v2ray&#x2F;config.json：配置文件；</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;geoip.dat：IP 数据文件</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;v2ray&#x2F;geosite.dat：域名数据文件</span><br></pre></td></tr></table></figure></li><li><p>此脚本会配置自动运行脚本。自动运行脚本会在系统重启之后，自动运行 V2Ray。目前自动运行脚本只支持带有 Systemd 的系     统，以及 Debian / Ubuntu 全系列。</p></li><li><p>运行脚本位于系统的以下位置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/systemd/system/v2ray.service: Systemd</span><br><span class="line">/etc/init.d/v2ray: SysV</span><br></pre></td></tr></table></figure></li><li><p>脚本运行完成后，你需要：</p></li><li><p>输入<strong>vi/etc/v2ray/config.json</strong>文件来配置你需要的代理方式；</p></li><li><p>运行 service v2ray start 来启动 V2Ray 进程；</p></li><li><p>之后可以使用 <strong>service v2ray start|stop|status|reload|restart|force-reload</strong> 控制 V2Ray 的运行。</p></li><li><p>go.sh 参数</p></li><li><p>go.sh 支持如下参数，可在手动安装时根据实际情况调整：</p></li><li><p>-p 或 –proxy: 使用代理服务器来下载 V2Ray 的文件，格式与 curl 接受的参数一致，比如 “socks5://127.0.0.1:1080” 或  “<a href="http://127.0.0.1:3128&quot;。">http://127.0.0.1:3128&quot;。</a></p></li><li><p>-f 或 –force: 强制安装。在默认情况下，如果当前系统中已有最新版本的 V2Ray，go.sh 会在检测之后就退出。如果需要强制   重装一遍，则需要指定该参数。</p></li><li><p>version: 指定需要安装的版本，比如 “v1.13”。默认值为最新版本。</p></li><li><p>local: 使用一个本地文件进行安装。如果你已经下载了某个版本的 V2Ray，则可通过这个参数指定一个文件路径来进行安装。</p></li></ul><h1 id="示例如下："><a href="#示例如下：" class="headerlink" title="示例如下："></a>示例如下：</h1><ul><li><p>使用地址为 127.0.0.1:1080 的 SOCKS 代理下载并安装最新版本：./go.sh -p socks5://127.0.0.1:1080</p></li><li><p>安装本地的 v1.13 版本：./go.sh –version v1.13 –local /path/to/v2ray.zip</p></li><li><p>V2Ray 提供了两个预编译的 Docker image：</p></li><li><p>v2ray/official: 包含最新发布的版本，每周跟随新版本更新；</p></li><li><p>v2ray/dev: 包含由最新的代码编译而成的程序文件，随代码库更新；</p></li><li><p>两个 image 的文件结构相同：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/v2ray/config.json                  <span class="comment">#配置文件</span></span><br><span class="line">/usr/bin/v2ray/v2ray                   <span class="comment"># V2Ray 主程序</span></span><br><span class="line">/usr/bin/v2ray/v2ctl                   <span class="comment">#V2Ray 辅助工具</span></span><br><span class="line">/usr/bin/v2ray/geoip.dat              <span class="comment"># IP 数据文件</span></span><br><span class="line">/usr/bin/v2ray/geosite.dat           <span class="comment"># 域名数据文件</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;v2ray主要特征&quot;&gt;&lt;a href=&quot;#v2ray主要特征&quot; class=&quot;headerlink&quot; title=&quot;v2ray主要特征&quot;&gt;&lt;/a&gt;v2ray主要特征&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;多入口多出口: 一个 V2Ray 进程可并发支持多个入站和出站协议，每个协议可独立工作。&lt;/li&gt;
&lt;li&gt;可定制化路由: 入站流量可按配置由不同的出口发出。轻松实现按区域或按域名分流，以达到最优的网络性能。&lt;/li&gt;
&lt;li&gt;多协议支持: V2Ray 可同时开启多个协议支持，包括 Socks、HTTP、Shadowsocks、VMess 等。每个协议可单独设置– 传输载   　体，比如 TCP、mKCP、WebSocket 等。&lt;/li&gt;
&lt;li&gt;隐蔽性: V2Ray 的节点可以伪装成正常的网站（HTTPS），将其流量与正常的网页流量混淆，以避开第三方干扰。&lt;/li&gt;
&lt;li&gt;反向代理: 通用的反向代理支持，可实现内网穿透功能。&lt;/li&gt;
&lt;li&gt;多平台支持: 原生支持所有常见平台，如 Windows、Mac OS、Linux，并已有第三方支持移动平台&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://www.rootfw.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"/>
    
    
      <category term="v2ray" scheme="https://www.rootfw.com/tags/v2ray/"/>
    
  </entry>
  
</feed>
