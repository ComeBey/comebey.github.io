{"pages":[],"posts":[{"title":"Brook crontab定时重启","text":"以下同步时间选择其中一种,如果无法同步本地时间请google下(关键字centos7或者centos6或者debian时间同步本地时间等关键字)方法1.校准时间同步本地时间 date -R 查看vps时间 sudo -i root权限进入 123yum -y install ntp ntpdate //安装ntpdate工具ntpdate cn.pool.ntp.org //设置系统时间与本地网络时间同步hwclock --systohc //将系统时间写入硬件时间 方法2.校准时间同步本地时间 date -R 查看vps时间 123456yum install ntp //安装ntp服务systemctl enable ntpd //开机启动服务systemctl start ntpd //启动服务timedatectl set-timezone Asia/Shanghai //更改时区timedatectl set-ntp yes //启用ntp同步ntpq -p //同步时间 crontab服务 12/sbin/service crond start (开启crontab无任何提示表示已经开启)/sbin/service crond status (查看状态) 安装crontab：(有些系统没有安装crontab则需要安装,如果系统本身已经安装了请跳过这一步骤) yum install crontabs (安装crontab) 服务操作说明：123456789/sbin/service crond start (启动服务)/sbin/service crond stop (关闭服务)/sbin/service crond restart (重启服务)/sbin/service crond reload (重新载入配置 //重新载入配置)/sbin/service crond status (查看crond是否正常运行) crontab -e (输入i键,复制以下代码ctrl+c,黏贴ctrl+v到加入计划任务,可自定义添加需要的功能) 123*/1 * * * * date &gt;&gt; ~/a.log 2&gt;&amp;1 */1 * * * * sudo journalctl -b -u brook &gt;&gt; ~/a.log 2&gt;&amp;1*/1 * * * * /bin/systemctl restart brook.service &gt;&gt; ~/a.log 2&gt;&amp;1 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133crontab -l (查看已经添加的crontab任务)tail ~/a.log 查看最近10条日志more /root/a.log 查看所有日志tail -f /var/log/cron 查看正常运行的crontab计划任务验证crontab计划任务brook运行状态可以根据特定字段过滤输出journalctl -b 显示本次启动后的所有日志：journalctl -f 查看正在输出的进程sudo journalctl -b -u brook 查看brook状态man 1 journalctl 查看所有 journalctl使用方法rm -rf ~/a.log 日志清除方法实例1：每1分钟执行一次command命令：* * * * * command 实例2：每小时的第3和第15分钟执行命令：3,15 * * * * command 实例3：在上午8点到11点的第3和第15分钟执行命令：3,15 8-11 * * * command 实例4：每隔两天的上午8点到11点的第3和第15分钟执行命令：3,15 8-11 */2 * * command 实例5：每个星期一的上午8点到11点的第3和第15分钟执行命令：3,15 8-11 * * 1 command 实例6：每晚的21:30重启smb 命令：30 21 * * * /etc/init.d/smb restart 实例7：每月1、10、22日的4 : 45重启smb 命令：45 4 1,10,22 * * /etc/init.d/smb restart 实例8：每周六、周日的1 : 10重启smb命令：10 1 * * 6,0 /etc/init.d/smb restart 实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb 命令：0,30 18-23 * * * /etc/init.d/smb restart 实例10：每星期六的晚上11 : 00 pm重启smb 命令：0 23 * * 6 /etc/init.d/smb restart 实例11：每一小时重启smb 命令：* */1 * * * /etc/init.d/smb restart 实例12：晚上11点到早上7点之间，每隔一小时重启smb 命令：* 23-7/1 * * * /etc/init.d/smb restart 实例13：每月的4号与每周一到周三的11点重启smb 命令：0 11 4 * mon-wed /etc/init.d/smb restart 实例14：一月一号的4点重启smb 命令：0 4 1 jan * /etc/init.d/smb restart 实例15：每小时执行/etc/cron.hourly目录内的脚本命令：01 * * * * root run-parts /etc/cron.hourly","link":"/2020/06/10/Brook-crontab%E5%AE%9A%E6%97%B6%E9%87%8D%E5%90%AF/"},{"title":"Brook centos7官方脚本搭建","text":"1.更新服务器1.输入sudo -i 进来root权限, 可自行选择升级内核, yum update -y升级内核2.yum install wget 下载wget工具wget https://github.com/txthinking/brook/releases/download/v20190205/brook 下载brook服务器版本3.输入cp brook /usr/bin 把brook拷贝到bin目录下4.chmod +x /usr/bin/brook 给予当前路径brook可执行权限5.brook -h #查看帮助6.nohup ./brook server -l :80 -p pass1234 &amp; 添加brook端口和密码且让brook在后台运行复制如下代码 1234567sudo -i yum update -yyum install wgetwget https://github.com/txthinking/brook/releases/download/v20190205/brookcp brook /usr/binchmod +x /usr/bin/brooknohup ./brook server -l :80 -p pass1234 &amp; Brook设置随系统启动vi /etc/systemd/system/brook.service 用vi创建brook.service启动脚本 按” i “进入insert模式,输入脚本如下 12345678[Unit]Description = This is brook [Service]ExecStart = /usr/bin/./brook server -l :80 -p pass1234 [Install]WantedBy = multi-user.target 按Esc，输入”shift+:”输入wq 回车，保存并退出 赋予可执行属性并生效： 1chmod +x /etc/systemd/system/brook.service 开启brook.service 服务 1systemctl enable /etc/systemd/system/brook.service reboot 重启vps 查看brook服务是否正常运行这台如下代码： 1234service brook status -l 如果正常启动会返回绿色 active (running)service brook start 开启brook服务service brook stop 停止brook运行service brook restart 重启brook服务 systemctl list-unit-files 查看brook脚本是否生效 当重新修改brook密码后 我们需重载信息输入systemctl daemon-reload 或者重新启动vps 输入reboot","link":"/2020/06/10/Brook%E5%AE%98%E6%96%B9%E8%84%9A%E6%9C%AC%E6%90%AD%E5%BB%BA/"},{"title":"SSR多用户脚本搭建","text":"搭建环境centos7/debian系统第一步sudo -i 1sudo -i 第二步.ubuntu 系统安装 Curl 1apt-get update -y &amp;&amp; apt-get install curl -y 第二步.centos 系统安装 Curl 和 wget 12yum update -y &amp;&amp; yum install curl -y yum install wget 第三步.安装一键脚本 1wget -N --no-check-certificate https://raw.githubusercontent.com/ComeBey/more-user-ssr/master/hasan.sh &amp;&amp; chmod +x hasan.sh &amp;&amp; bash hasan.sh 第四步:调用命令调试 1bash hasan.sh","link":"/2020/06/16/SSR%E5%A4%9A%E7%94%A8%E6%88%B7%E8%84%9A%E6%9C%AC%E6%90%AD%E5%BB%BA/"},{"title":"shadowsocks原生部署","text":"一.准备工作1.root权限 1sudo -i 2.系统包更新 1yum update 二.下载安装pip123curl \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\" #下载pippython get-pip.py #安装pip 三.安装SS和配置SS参数1.安装shadowsocks 1pip install shadowsocks 2.root权限输入vi /etc/shadowsocks.json 配置shadowsocks参数，如果不能vi进去可以使用nano或者vim进行配置 1vi /etc/shadowsocks.json 123456{ \"server\":\"0.0.0.0\", \"server_port\":8388, \"password\":\"password\", \"method\":\"aes-256-cfb\"} 四.创建启动脚本1vi /etc/systemd/system/shadowsocks.service 1234567[Unit]Description=Shadowsocks[Service]TimeoutStartSec=0ExecStart=/usr/bin/ssserver -c/etc/shadowsocks.json[Install]WantedBy=multi-user.target 温馨提示：Shadowsocks需要安装libsodium加密库，否则只能使用“aes-256-cfb”无法使用其他加密协议，请执行以下代码： 123wget https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gztar xf libsodium-1.0.18.tar.gz &amp;&amp; cd libsodium-1.0.18 五.调试服务12345systemctl enable shadowsocks #让服务ss服务生效开机启动systemctl start shadowsocks #启动sssystemctl status shadowsocks -l #查看状态 然后自己去安装BBR加速温馨提示：你真的懂吗？对于懂得用ss的朋友来说就是好用，对于不懂得使用ss的朋友来说即使您现在使用的是v2ray或者trojan GFW真要墙你IP也是轻而易举，不管使用任何翻墙软件大部分情况是在于人，在谁的手中使用，shadowsocks一样可以配置NGINX等服务搭配使用，一样可以加CDN不要被一些UP主带坏了节奏，任何问题如果经不起验证都是扯蛋","link":"/2020/06/27/SS%E5%8E%9F%E7%94%9F%E9%83%A8%E7%BD%B2/"},{"title":"V2ray+WebSocket+TLS+Nginx","text":"centos7系统环境搭建，温馨提示：请使用centos7系统搭建，如果学习能力强可以Google搜索Debian或其他系统搭建方法，只是部分代码不一样而已，V2Ray+WebSocket+TLS+Nginx 前几期视频分别提到过 TLS 和 WebSocket 的配置方法，而本文搭配 Web 服务并同时实现 TLS 和 WebSocket浏览器域名访问自动跳转https有简单前端网页。关于 Web 的软件官方给出Nginx，Caddy 和 Apache 三个例子，三选一即可 一.安装前准备1.更新服务器，大概几分钟左右耐心等待 1yum update -y 2.把VPS服务器同步本地时间及时区（温馨提示：如果你在国外请同步所在国家时区）Centos7系统同步时间如下： 1234date -R //查看服务器时间timedatectl set-local-rtc 1timedatectl set-timezone Asia/Shanghaidate -R //查看服务器时间 Debian系统同步时间如下： 1234date -R //查看服务器时间rm -rf /etc/localtimecp /usr/share/zoneinfo/Asia/Shanghai /etc/localtimedate -R //查看服务器时间 2.安装bbr（可选择安装了v2ray以后在安装） 123456centos7系统yum -y install wgetwget \"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh\" &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh debian系统 请确定服务器已经安装了wget 如没有按照请先执行这条代码 apt-get install wgetwget --no-check-certificate -O tcp.sh https://github.com/cx9208/Linux-NetSpeed/raw/master/tcp.sh &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh 二.安装v2ray官方代码 （老的官方脚本）1bash &lt;(curl -L -s https://install.direct/go.sh) 安装成功后执行 vi /etc/v2ray/config.json 长按键盘D键删所有代码，在输入键盘Ins键进入可编辑状态，复制以下代码后 黏贴到配置中按键盘Esc键，在同时按键盘shift+：输入wq保存退出 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667//复制以下代码{ \"log\" : { \"access\": \"/var/log/v2ray/access.log\", \"error\": \"/var/log/v2ray/error.log\", \"loglevel\": \"warning\" }, \"inbound\": { \"port\": 9000, //重点(此端口与nginx配置保持一致) \"listen\": \"127.0.0.1\", //重点(此端口与nginx配置保持一致) \"protocol\": \"vmess\", \"settings\": { \"clients\": [ { \"id\": \"eb950add-608e-409d-937f-e797324387093z\", //你的UUID，可更改需与客户端保持一致 \"level\": 1, \"alterId\": 64 //此ID也需与客户端保持一致（不要设置超过100以上可自定义） } ] }, \"streamSettings\":{ \"network\": \"ws\", //可设置tcp等 \"wsSettings\": { \"path\": \"/v2ray\" //与nginx配置相关（可自定义） } } }, \"outbound\": { \"protocol\": \"freedom\", \"settings\": {} }, \"outboundDetour\": [ { \"protocol\": \"blackhole\", \"settings\": {}, \"tag\": \"blocked\" } ], \"routing\": { \"strategy\": \"rules\", \"settings\": { \"rules\": [ { \"type\": \"field\", \"ip\": [ \"0.0.0.0/8\", \"10.0.0.0/8\", \"100.64.0.0/10\", \"127.0.0.0/8\", \"169.254.0.0/16\", \"172.16.0.0/12\", \"192.0.0.0/24\", \"192.0.2.0/24\", \"192.168.0.0/16\", \"198.18.0.0/15\", \"198.51.100.0/24\", \"203.0.113.0/24\", \"::1/128\", \"fc00::/7\", \"fe80::/10\" ], \"outboundTag\": \"blocked\" } ] } }} 12你可以输入 service v2ray restart 在输入 service v2ray status -l #看看是否运行成功service v2ray start|stop|status|reload|restart|force-reload #调试 V2Ray 的运行代码 打开 80（HTTP）和 443（HTTPS）端口(如果看过我前几期视频，确定防火墙规则设置好了，谷歌云可以忽略。其他品牌服务器请确认已经开启了80和443端口如果没有可尝试下面代码操作或者服务器网页端开启http80端口和https 443端口) 也可以通过下面的命令来打开这两个端口:请自行开启防火墙开机启动 123sudo firewall-cmd --permanent --zone=public --add-service=httpsudo firewall-cmd --permanent --zone=public --add-service=httpssudo firewall-cmd --reload 三.安装NGINX123456789#安装 EPEL 仓库（谷歌云忽略此步骤，如果你是使用其他品牌vps服务器如果没有安装EPEL请先安装）sudo yum install epel-release#安装 Nginx 【 yum remove nginx 如果想删除nginx卸载命令 】sudo yum install nginxsudo systemctl enable nginx.service #设置开机启动Nginxsudo systemctl start nginx.service #启动Nginx服务 1234567891011121314151617181920调试代码如下：sudo systemctl start nginx.service //开启 Nginxsudo systemctl stop nginx.service //停止 Nginxsudo systemctl status -l nginx.service //查看 Nginx运行状态sudo systemctl restart nginx.service //重新启动 Nginxsudo systemctl disable nginx.service //取消开机启动 Nginxsudo systemctl reload nginx.service //重载Nginx (如更改Nginx配置需要重新载入数据)sudo systemctl enable nginx.service //开机启动 调试代码如下： Nginx调试也可以不需要代码后面添加 **.service** 请先**sudo systemctl start nginx.service**和**sudo systemctl enable nginx.service** 然后在通过下面代码也可以调试.sudo systemctl start nginx //开启 Nginxsudo systemctl stop nginx //停止 Nginxsudo systemctl status -l nginx //查看 Nginx运行状态sudo systemctl restart nginx //重新启动 Nginxsudo systemctl disable nginx //取消开机启动 Nginxsudo systemctl reload nginx //重载Nginx (如更改Nginx配置需要重新载入数据)sudo systemctl enable nginx //开机启动 通过以上方式安装的 Nginx，所有相关的配置文件都在 /etc/nginx/ 目录中Nginx 的主配置文件是 /etc/nginx/nginx.confNginx 日志文件（access.log 和 error.log ）位于 /var/log/nginx/ 目录中。 如果在设置完成之后不能成功使用，可能是由于 SElinux 机制(如果你是 CentOS 7 的用户请特别留意SElinux 这一机制)阻止了 Nginx 转发向内网的数据如果是这样的话，在V2Ray的日志里不会有访问信息，在 Nginx 的日志里会出现大量的 “Permission Denied” 字段要解决这一问题需要在终端下键入以下命令： 1setsebool -P httpd_can_network_connect 1 //debian忽略 验证 Nginx 是否成功启动，可以在浏览器中打开 http://YOUR_IP 注意：打开则显示centos网页 但是提示不安全网站没开启ssl加密https 四.生成证书如果你已经有其他证书可忽略，把证书和密钥放到服务器指定目录下，只需在Nginx 中指定 证书和密钥路径。申请证书方法太多可通过安装acme.sh工具生成证书或其他方法生成证书，可Google搜索。 1.安装acem.sh证书生成工具，以下提供3种方法安装，选其中任意一种方法安装证书工具 (温馨提示：自动升级acme.sh在root下输入 acme.sh upgrade) 12345curl https://get.acme.sh | sh // 如提示安装失败 请先安装curl 输入 yum -y install curlwget -O - https://get.acme.sh | sh //如提示安装失败请（先安装wget）输入 yum -y install wget 已经安装了忽略git clone https://github.com/acmesh-official/acme.sh.git // 如提示安装失败 先安装git 已经安装了的忽略 输入 yum install gitcd ./acme.sh./acme.sh --install 通过以上代码安装acme.sh提示红色抱错 你可以按实际相关情况而定安装依赖 比如安装socat 或者 netcat 1234567centos7 yum install socat #通过80端口生成证书的依赖centos7 yum isntall netcatdebian apt-get install openssl cron socat curldebian apt-get -y install netcat安装成功后执行 source ~/.bashrc 以确保脚本所设置的命令别名生效 2.生成证书 路径为/root/.acme.sh文件下 安装好后可自行查看 温馨提示：通过acme.sh生成证书有多种方法： 例如—自动DNS API集成 如：cloudflare DNS API 令牌 和 使用全局API密钥 acme.sh支持大多数dns生成证书 例如—使用DNS手动模式，等多种其他安装方法，如果你是个好学的人可Google 生成证书如下：本期视频只用指定端口 生成证书 推荐使用443端口生成证书 （一般用单域名足以，毕竟是翻墙用无需搞那么多花里胡哨的多域，比如：主域baidu.com那么不建议使用www.baidu.com,因为是翻墙的前端web请自定义比如tw.baidu.com,前缀tw可以自定义请不要写太长，主域baidu.com和二级www.baidu.com可以备用你懂的） 1.通过侦听80端口申请证书，如果80端口被占用,请使用443端口,请确保这些端口都打开了 1sudo ~/.acme.sh/acme.sh --issue -d 域名 --standalone -k ec-256 2.如果您80在反向代理或负载均衡器后面使用非标准端口，则可以–httpport用来指定端口 1sudo ~/.acme.sh/acme.sh --issue -d 域名 --standalone --httpport 端口 3.侦听443端口以颁发证书，请确保443端口开启 1sudo ~/.acme.sh/acme.sh --issue -d 域名 --alpn -k ec-256 4.如果您443在反向代理或负载均衡器后面使用非标准端口，则可以–tlsport用来指定端口 1sudo ~/.acme.sh/acme.sh --issue -d 域名 --alpn --tlsport 端口 -k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书 五.把证书和密钥安装到指定路径 /etc/v2ray （路径可自定义）123ecc 安装代码 sudo ~/.acme.sh/acme.sh --installcert -d 域名 --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key --eccrsa 安装代码 sudo ~/.acme.sh/acme.sh --installcert -d 域名 --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key 六.配置NGINX *.confvi /etc/nginx/nginx.conf #进入编辑配置文件：长按键盘上D键删除所有配置信息，再按键盘Ins键进入编辑模式复制如下代码黏贴到配置中编辑，填写对应自己的配置信息后。最后同时按键盘上 shift+: 键，在输入wq保存退出 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061user nginx;worker_processes auto;error_log /var/log/nginx/error.log;pid /run/nginx.pid;include /usr/share/nginx/modules/*.conf;events { worker_connections 1024;}http { log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\"'; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; include /etc/nginx/conf.d/*.conf;server { listen 80; server_name 域名; rewrite ^/(.*) https://域名$1 permanent; #填写自己域名} server #关键代码 { # SSL configuration listen 443 ssl http2 default_server; listen [::]:443 ssl http2 default_server; ssl_certificate /路径/*.pem; #你的ssl证书*.crt 或者 *.pem都可以 ssl_certificate_key /路径/*.key; #你的ssl key ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5; #套件RSA和ecc不一样在下面我会分别给出 ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; root /usr/share/nginx/html; #网页路径，这里也可以放你们自己的html网站替换下就可以了 server_name 域名; #你的服务器域名 location /ray { #/ray 切记路径需要和v2ray服务器端和客户端保持一致 可自定义名字 proxy_redirect off; proxy_pass http://127.0.0.1:端口; #此IP地址和端口需要和v2ray服务器端配置保持一致， proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; proxy_set_header Host $http_host;}}} 套件如下： 1ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384; #RSA套件 1EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5; #Ecc套件 修改 Nginx 配置后，请务必重新加载配置 输入 sudo systemctl reload nginx.service #必须这样操作 查询是否开启ssl 打开网站https://myssl.com/ssl.html输入自己域名，端口输入443 或者 打开https://www.ssllabs.com/ssltest/index.html 查询 ，也可以google搜索关键字ssl查询，很多网站可以查询，评分是否到达A级别 温馨提示：通过acme.sh工具生成证书请使用443端口 代码如下：sudo ~/.acme.sh/acme.sh –issue -d 域名 –alpn -k ec-256 （侦听443端口以颁发证书，请确保443端口开启 按文章流程操作80端口生成证书时会提示端口占用，当然如果你想简单点可以通过已有购买的证书或者通过宝塔申请的或者其他证书，把密钥和证书直接复制拷贝到服务器指定路径下，在配置nginx指向证书和路径。部分免费证书会缺少CA证书那么在网站ssl评分就会大打折扣，解决办法是重新把CA证书添加下就可以了 通过在浏览器输入自己域名查询是否发现网站加了一把锁🔒开启了https， 且网站域名ssl评分到达A 如果是，恭喜你搭建成功.如果你已经学会了那么接下来的课程会越来越有意思.","link":"/2020/06/16/V2ray+WebSocket+TLS+Nginx/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/06/26/hello-world/"},{"title":"hexo部署命令报错","text":"1234567891011121314151617INFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...fatal: Unable to create '/drives/c/blog/.deploy_git/.git/index.lock': File exists.Another git process seems to be running in this repository, e.g.an editor opened by 'git commit'. Please make sure all processesare terminated then try again. If it still fails, a git processmay have crashed in this repository earlier:remove the file manually to continue.FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlError: Spawn failed at ChildProcess.&lt;anonymous&gt; (C:\\blog\\node_modules\\hexo-util\\lib\\spawn.js:51:21) at ChildProcess.emit (events.js:310:20) at ChildProcess.cp.emit (C:\\blog\\node_modules\\cross-spawn\\lib\\enoent.js:34:29) at Process.ChildProcess._handle.onexit (internal/child_process.js:275:12) 解决方案fixed： 12delete .deploy_git directory：$ rm -rf .deploy_git #deletere-deploy：$ hexo d -g #重新部署","link":"/2020/06/09/hexo%E6%97%B6%E9%83%A8%E7%BD%B2%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF/"},{"title":"V2ray+WS+TCP+TLS配置","text":"v2ray+WS+TCP+TLS 安全级别不错 稳定性不错 推荐部署 centos7系统配置和Debian系统配置，acme.sh脚本所有证书将每60天自动更新一次（如果你非要手动更新随意) 第一步.V2RAY官方脚本搭建centos7更新服务器 yum update -y (部分系统提示NO packages marked for update则无需更新)设置硬件时钟调整为与本地时钟一致, 设置时区为上海 date -R 是查看服务器当前时间 123date -Rtimedatectl set-local-rtc 1timedatectl set-timezone Asia/Shanghai Debian系统同步时间如下： 123date -Rrm -rf /etc/localtimecp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 第二步.安装bbr12345678910111213#centos7 复制这条代码安装bbr加速如下:yum -y install wgetwget \"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh\" &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh #debian9 复制这条代码安装bbr加速如下:#方法一如下：apt-get install wgetwget -N --no-check-certificate https://bit.ly/2VWUksq &amp;&amp; chmod + hasan.sh &amp;&amp; bash hasan.sh#备用代码apt-get install wgetwget -N --no-check-certificate https://raw.githubusercontent.com/ComeBey/bbr/master/hasan.sh &amp;&amp; chmod + hasan.sh &amp;&amp; bash hasan.sh 第三步.安装v2ray官方代码123bash &lt;(curl -L -s https://install.direct/go.sh) vim /etc/v2ray/config.json #v2ray配置文件ervice v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行 第四步.安装acme.shhttps://my.freenom.com/免费注册地址 当然我们也可以自行购买付费域名证书生成工具 (温馨提示您还可以启用自动升级acme.sh在root下输入 acme.sh upgrade)以下提供3种方法选其中任意一种方法安装证书工具 12345678910curl https://get.acme.sh | sh #如提示安装失败 请先安装curl 输入 yum -y install curl 或者 apt-get install curlwget -O - https://get.acme.sh | sh #如提示安装失败请（先安装wget）输入 yum -y install wget 或者 apt-get install wget 已经安装了忽略git clone https://github.com/acmesh-official/acme.sh.gitcd ./acme.sh./acme.sh --install #如提示安装失败 先安装git 已经安装了的忽略 输入 yum install git 或者 apt-get install git 谷歌云直接安装（如果其他品牌vps也提示 install socat firt也请安装socat）centos7系统执行 yum install socatdebian系统执行 apt-get install openssl cron socat curlsocat为80端口必须用的依赖来申请证书用，如果您使用443端口申请证书则无需安装socat 执行这条命令source ~/.bashrc 安装过程中如果报错请查看面板提示信息，尝试安装acme.sh相关依赖项，比如安装 netcat 或 socat 如果提示报错才安装，不提示报错忽略acme.sh 会安装到 ~/.acme.sh 目录下 （可通过root命令下 输入cd ~/.acme.sh查看，不懂的朋友请忽略继续下一步） 第五步.acme.sh 生成证书以下的命令会临时监听 80 端口，请确保执行该命令前 80 端口没有占用 (80是http端口)不推荐使用80端口生成证书 推荐使用443端口生成证书centos7系统 执行 sudo ~/.acme.sh/acme.sh –issue -d 域名 –standalone -k ec-256Debian系统 执行 bash ~/.acme.sh/acme.sh –issue -d 域名 –standalone -k ec-256 以下的命令会临时监听 443 端口，请确保执行该命令前 443 端口没有使用 （443是https端口）centos7系统 执行sudo ~/.acme.sh/acme.sh –issue -d 域名 –alpn -k ec-256 如果您443在反向代理或负载均衡器后面使用非标准端口，则可以–tlsport用来指定端口centos7系统 执行sudo ~/.acme.sh/acme.sh –issue -d 域名 –alpn –tlsport 端口 -k ec-256 Debian系统 执行bash ~/.acme.sh/acme.sh –issue -d 域名 –alpn -k ec-256 如果您443在反向代理或负载均衡器后面使用非标准端口，则可以–tlsport用来指定端口Debian系统 执行bash ~/.acme.sh/acme.sh –issue -d 域名 –alpn –tlsport 端口 -k ec-256 -k 表示密钥长度，后面的值可以是 ec-256 、ec-384、2048、3072、4096、8192，带有 ec 表示生成的是 ECC 证书，没有则是 RSA 证书。在安全性上 256 位的 ECC 证书等同于 3072 位的 RSA 证书 第六步.证书和密钥安装到指定目录/etc/v2ray目录（路径可以自定义，当然也可以默认） 12sudo ~/.acme.sh/acme.sh --installcert -d 域名 --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key --ecc # ecc 安装代码 sudo ~/.acme.sh/acme.sh --installcert -d 域名 --fullchainpath /etc/v2ray/v2ray.crt --keypath /etc/v2ray/v2ray.key #rsa 安装代码 第七步.配置文件 config.jsonvim /etc/v2ray/config.json 12345678910111213141516171819202122232425262728293031323334{ \"inbounds\": [ { \"port\": 443, // 服务器端口 \"protocol\": \"vmess\", \"settings\": { \"clients\": [ { \"id\": \"23ad6b10-8d1a-40f7-8ad0-e3e35cd38297\", \"alterId\": 64 } ] }, \"streamSettings\": { \"network\": \"tcp\", \"security\": \"tls\", // security 要设置为 tls 才会启用 TLS \"tlsSettings\": { \"certificates\": [ { \"certificateFile\": \"/etc/v2ray/v2ray.crt\", // 证书文件 \"keyFile\": \"/etc/v2ray/v2ray.key\" // 密钥文件 } ] } } } ], \"outbounds\": [ { \"protocol\": \"freedom\", \"settings\": {} } ]} service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行 第八步.验证是否正常开启TLS https://www.ssllabs.com/ssltest/index.html 手动更新证书密钥生成到 /etc/v2ray （温馨提示：视频中我讲错了acme.sh脚本所有证书将每60天自动更新一次，大家无需担心证书到期无法使用）ecc sudo ~/.acme.sh/acme.sh –renew -d 域名 –force –eccrsa sudo ~/.acme.sh/acme.sh –renew -d 域名 –force –rsa 温馨提示：V2Ray 的 TLS 不是伪装或混淆，这是真正的 TLS。因此才需要域名和证书。 WS(WebSocket) 也不是伪装 注意：使用 Qualys SSL Labs’s SSL Server Test 要求使用 443 端口，意味着你服务器配置的 inbound.port 应当是 443","link":"/2020/06/10/v2ray+WS+TCP+TLS%E9%85%8D%E7%BD%AE/"},{"title":"v2ray TCP原生配置","text":"Linux 安装脚本V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测有没有安装过 V2Ray，如果没有，则进行完整的安装和配置；如果之前安装过 V2Ray，则只更新 V2Ray 二进制程序而不更新配置。 以下指令假设已在 su 环境下，如果不是，请先运行 sudo su。 运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。这两个组件是安装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon 安装v2ray官方代码(老版本代码)12sudo -ibash &lt;(curl -L -s https://install.direct/go.sh) 运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。这两个组件是安装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon vps服务器时间同步本地时间debian系统vps时间同步本地时间 (先输入sudo -i在同步时间 必须同步时间切记) 1234sudo -i #root权限sudo -R #查看vps服务器时间rm -rf /etc/localtime cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime #同步上海时间，如果您在海外请同步所在国家的时间centos7系统vps时间同步本地时间（先输入dudo -i在同步时间 必须同步时间切记） 1234sudo -itimedatectl set-local-rtc 1timedatectl set-timezone Asia/Shangha #同步上海时间，如果您在海外请同步所在国家的时间sudo -R #重新查看本地时间 配置v2ray服务端root权限下输入vi /etc/v2ray/config.json配置界面长按键盘上 D键 清除所有当前配置，在按键盘上 Ins键 或者 键盘 i键把下面代码复制并且黏贴到服务器中，在按键盘上ESC键，输入 ：wq 保存退出 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960{ \"log\": { \"access\": \"/var/log/v2ray/access.log\", \"error\": \"/var/log/v2ray/error.log\", \"loglevel\": \"warning\" }, \"inbound\": { \"port\": 12345, //请在防火墙开启对应的端口 \"protocol\": \"vmess\", //vmess协议 \"settings\": { \"clients\": [ { \"id\": \"db790014-700d-9b1c-d987-5aed2afa60ae\", //UUid 这个ID可以通过v2ray客户端生成new替换 \"level\": 1, \"alterId\": 52 //额外id } ] } }, \"outbound\": { \"protocol\": \"freedom\", \"settings\": {} }, \"inboundDetour\": [], \"outboundDetour\": [ { \"protocol\": \"blackhole\", \"settings\": {}, \"tag\": \"blocked\" } ], \"routing\": { \"strategy\": \"rules\", \"settings\": { \"rules\": [ { \"type\": \"field\", \"ip\": [ \"0.0.0.0/8\", \"10.0.0.0/8\", \"100.64.0.0/10\", \"127.0.0.0/8\", \"169.254.0.0/16\", \"172.16.0.0/12\", \"192.0.0.0/24\", \"192.0.2.0/24\", \"192.168.0.0/16\", \"198.18.0.0/15\", \"198.51.100.0/24\", \"203.0.113.0/24\", \"::1/128\", \"fc00::/7\", \"fe80::/10\" ], \"outboundTag\": \"blocked\" } ] } }} 防火墙设置不同VPS服务器设置不一样，请在服务器网页后台添加防火墙规则，有些服务器后台没有防火墙设置则需要代码开启启动防火墙： systemctl start firewalld开机启动：systemctl enable firewalld.service查看状态： systemctl status firewalld开启12345端口：firewall-cmd –zone=public –add-port=12345/tcp –permanen 开12345tcp端口（端口自定义保持和v2ray端口一致）重新加载防火墙：sudo firewall-cmd –reload重新启动防火墙：systemctl restart firewalld 查看v2ray运行程序 输入代码service v2ray start 开启v2ray 输入代码service v2ray stop 关闭v2ray 输入代码service v2ray restart 重新启动v2ray 输入代码service v2ray status -l 查看v2ray运行状态","link":"/2020/06/10/v2ray-TCP%E5%8E%9F%E7%94%9F%E9%85%8D%E7%BD%AE/"},{"title":"v2ray mkcp原生搭建","text":"1.更新服务器1yum update -y #温馨提示：更新大概几分钟请耐心等待 设置硬件时钟调整为与本地时钟一致，同步上海时间 12timedatectl set-local-rtc 1timedatectl set-timezone Asia/Shanghai 2.安装v2ray官方代码（老版本代码）1bash &lt;(curl -L -s https://install.direct/go.sh) 1vi /etc/v2ray/config.json #配置文件 service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行 3.v2ray服务端配置config.json 配置代码 {伪装协议utp、srtp、wechat-video、dtls、wireguard 或者 none}这几个分别将 mKCP 数据伪装成 BT 下载、视频通话、微信视频通话、dtls、wireguard以及不进行伪装。 123456789101112131415161718192021222324252627282930313233{ \"inbounds\": [ { \"port\": 端口, //自定义端口 \"protocol\": \"vmess\", \"settings\": { \"clients\": [ { \"id\": \"b831381d-6324-4d53-ad4f-8cda48b30811\", //自定义UUID \"alterId\": 32 //额外ID不要设置太大推荐4~50 } ] }, \"streamSettings\": { \"network\": \"mkcp\", //此处的 mkcp 也可写成 kcp，两种写法是起同样的效果 \"kcpSettings\": { \"uplinkCapacity\": 5, \"downlinkCapacity\": 100, \"congestion\": true, \"header\": { \"type\": \"这里替换伪装\" //伪装协议utp、srtp、wechat-video、dtls、wireguard 或者 none } } } } ], \"outbounds\": [ { \"protocol\": \"freedom\", \"settings\": {} } ]} 4.安装bbr温馨提示：如果没有安装wget请执行 yum install wget 12yum -y install wgetwget \"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh\" &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh","link":"/2020/06/07/v2ray-mkcp%E5%8E%9F%E7%94%9F%E6%90%AD%E5%BB%BA/"},{"title":"v2ray下载安装","text":"v2ray主要特征 多入口多出口: 一个 V2Ray 进程可并发支持多个入站和出站协议，每个协议可独立工作。 可定制化路由: 入站流量可按配置由不同的出口发出。轻松实现按区域或按域名分流，以达到最优的网络性能。 多协议支持: V2Ray 可同时开启多个协议支持，包括 Socks、HTTP、Shadowsocks、VMess 等。每个协议可单独设置– 传输载 体，比如 TCP、mKCP、WebSocket 等。 隐蔽性: V2Ray 的节点可以伪装成正常的网站（HTTPS），将其流量与正常的网页流量混淆，以避开第三方干扰。 反向代理: 通用的反向代理支持，可实现内网穿透功能。 多平台支持: 原生支持所有常见平台，如 Windows、Mac OS、Linux，并已有第三方支持移动平台 v2ray在以下平台中可使用 Windows 7 及之后版本（x86 / amd64）； Mac OS X 10.10 Yosemite 及之后版本（amd64）； Linux 2.6.23 及之后版本（x86 / amd64 / arm / arm64 / mips64 / mips）；包括但不限于 Debian 7 / 8、Ubuntu 12.04 / 14.04 及后续版本、CentOS 6 / 7、Arch Linux； FreeBSD (x86 / amd64)； OpenBSD (x86 / amd64)； Dragonfly BSD (amd64)； IOS/安卓/软路由等 下载 v2ray Github Release: github.com/v2ray/v2ray-core Github 分流: github.com/v2ray/dist Homebrew: github.com/v2ray/homebrew-v2ray Arch Linux: packages/community/x86_64/v2ray Snapcraft: snapcraft.io/v2ray-core 压缩包均为 zip 格式，找到对应平台的压缩包，下载解压即可使用。 验证安装包 V2Ray 提供两种验证方式： 安装包 zip 文件的 SHA1 / SHA256 摘要，在每个安装包对应的.dgst文件中可以找到。 可运行程序（v2ray 或 v2ray.exe）的 gpg 签名，文件位于安装包中的 v2ray.sig 或 v2ray.exe.sig。签名公钥可以在代码库中找到。 Windows 和 Mac OS 安装方式 通过上述方式下载的压缩包，解压之后可看到 v2ray 或 v2ray.exe。直接运行即可。 Linux 发行版仓库 部分发行版可能已收录 V2Ray 到其官方维护和支持的软件仓库/软件源中。 出于兼容性、适配性考虑，您可以考虑选用由您发行版开发团队维护的软件包或下文的安装脚本亦或基于已发布的二进制文件或源代&emsp;码安装。 Linux 安装脚本 V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测有没有安装过 V2Ray，如果没有，则进行完整的安装和配 置；如果之前安装过 V2Ray，则只更新 V2Ray 二进制程序而不更新配置。 以下指令假设已在 su 环境下，如果不是，请先运行 sudo su。 运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。 这两个组件是安 装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon 1bash &lt;(curl -L -s https://install.direct/go.sh) 此脚本会自动安装以下文件： 12345/usr/bin/v2ray/v2ray：V2Ray 程序；/usr/bin/v2ray/v2ctl：V2Ray 工具；/etc/v2ray/config.json：配置文件；/usr/bin/v2ray/geoip.dat：IP 数据文件/usr/bin/v2ray/geosite.dat：域名数据文件 此脚本会配置自动运行脚本。自动运行脚本会在系统重启之后，自动运行 V2Ray。目前自动运行脚本只支持带有 Systemd 的系 统，以及 Debian / Ubuntu 全系列。 运行脚本位于系统的以下位置： 12/etc/systemd/system/v2ray.service: Systemd/etc/init.d/v2ray: SysV 脚本运行完成后，你需要： 输入vi/etc/v2ray/config.json文件来配置你需要的代理方式； 运行 service v2ray start 来启动 V2Ray 进程； 之后可以使用 service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行。 go.sh 参数 go.sh 支持如下参数，可在手动安装时根据实际情况调整： -p 或 –proxy: 使用代理服务器来下载 V2Ray 的文件，格式与 curl 接受的参数一致，比如 “socks5://127.0.0.1:1080” 或 “http://127.0.0.1:3128&quot;。 -f 或 –force: 强制安装。在默认情况下，如果当前系统中已有最新版本的 V2Ray，go.sh 会在检测之后就退出。如果需要强制 重装一遍，则需要指定该参数。 version: 指定需要安装的版本，比如 “v1.13”。默认值为最新版本。 local: 使用一个本地文件进行安装。如果你已经下载了某个版本的 V2Ray，则可通过这个参数指定一个文件路径来进行安装。 示例如下： 使用地址为 127.0.0.1:1080 的 SOCKS 代理下载并安装最新版本：./go.sh -p socks5://127.0.0.1:1080 安装本地的 v1.13 版本：./go.sh –version v1.13 –local /path/to/v2ray.zip V2Ray 提供了两个预编译的 Docker image： v2ray/official: 包含最新发布的版本，每周跟随新版本更新； v2ray/dev: 包含由最新的代码编译而成的程序文件，随代码库更新； 两个 image 的文件结构相同： 12345/etc/v2ray/config.json #配置文件/usr/bin/v2ray/v2ray # V2Ray 主程序/usr/bin/v2ray/v2ctl #V2Ray 辅助工具/usr/bin/v2ray/geoip.dat # IP 数据文件/usr/bin/v2ray/geosite.dat # 域名数据文件","link":"/2020/06/09/v2ray%E5%AE%98%E6%96%B9%E8%84%9A%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"title":"v2ray定时重启服务crontab","text":"1.服务器同步本地时间以下centos7同步时间选择其中一种方法一.校准时间同步本地时间 date -R 查看vps时间 1234sudo -i #root权限yum -y install ntp ntpdate #安装ntpdate工具ntpdate cn.pool.ntp.org #设置系统时间与本地网络时间同步hwclock --systohc #将系统时间写入硬件时间 方法二.校准时间同步 date -R 查看vps时间 123456yum install ntp //安装ntp服务systemctl enable ntpd //开机启动服务systemctl start ntpd //启动服务timedatectl set-timezone Asia/Shanghai //更改时区timedatectl set-ntp yes //启用ntp同步ntpq -p //同步时间 方法三.校准时间同步上海时间时区 date -R 查看vps时间 1234date -R //查看服务器时间timedatectl set-local-rtc 1timedatectl set-timezone Asia/Shanghaidate -R //查看服务器时间 Debian系统同步时间如下： 1234date -R //查看服务器时间rm -rf /etc/localtimecp /usr/share/zoneinfo/Asia/Shanghai /etc/localtimedate -R //查看服务器时间 2.crontab服务1.开启crontab,如果提示错误需要安装crontab,则输入代码无任何提示表示已经开启 1/sbin/service crond start 2.输入提示绿色返回值证明已经安装并且开启 1/sbin/service crond status #输入提示绿色返回值证明已经安装并且开启 3.安装crontab：(有些系统没有安装crontab则需要安装,如果系统本身已经安装了请跳过这一步骤) 1yum install crontabs #安装crontab 服务操作说明：12345/sbin/service crond start #启动服务/sbin/service crond stop #关闭服务/sbin/service crond restart #重启服务/sbin/service crond reload #重新载入配置/sbin/service crond status #查看crond是否正常运行 1vim /etc/v2ray/config.json #进入配置文件信息 123456789101112131415161718192021222324252627{ \"log\": { \"loglevel\": \"warning\", //可用info和debug和error和warning和none等5种模式 \"access\": \"/var/log/v2ray/access.log\", // 这是路径 \"error\": \"/var/log/v2ray/error.log\" // 这是路径 }, \"inbounds\": [ { \"port\": 16823, //端口自定义 \"protocol\": \"vmess\", \"settings\": { \"clients\": [ { \"id\": \"b831381d-6324-4d53-ad4f-8cda48b30811\", //uuid自定义 \"alterId\": 64 //额外ID自定义 } ] } } ], \"outbounds\": [ { \"protocol\": \"freedom\", \"settings\": {} } ]} 5.crontab -e输入i键,复制以下代码ctrl+c,黏贴ctrl+v然后输入shift+:在输入wq保存并且退出加入计划任务,可自定义添加需要的功能 12345*/1 * * * * date &gt;&gt; ~/a.log 2&gt;&amp;1*/1 * * * * sudo journalctl -b -u v2ray &gt;&gt; ~/a.log 2&gt;&amp;1*/1 * * * * cat /var/log/v2ray/access.log &gt;&gt; ~/c.log 2&gt;&amp;1*/1 * * * * cat /var/log/v2ray/error.log &gt;&gt; ~/b.log 2&gt;&amp;1*/1 * * * * /bin/systemctl restart v2ray.service &gt;&gt; ~/a.log 2&gt;&amp;1 以上脚本可自行编写多功能脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140crontab -l #查看已经添加的crontab任务tail或者(cat) ~/a.log或者~/b.log #查看最近10条日志more /root/a.log或者/b.log #查看所有日志tail -f /var/log/cron #查看正常运行的crontab计划任务#验证crontab计划任务v2ray运行状态#可以根据特定字段过滤输出journalctl -b #显示本次启动后的所有日志：journalctl -f #查看正在输出的进程sudo journalctl -b -u v2ray #查看brook状态man 1 journalctl #查看所有 journalctl使用方法rm -rf ~/a.log 或者~/b.log #日志清除方法#实例1：每1分钟执行一次command命令：* * * * * command 实例2：每小时的第3和第15分钟执行命令：3,15 * * * * command #实例3：在上午8点到11点的第3和第15分钟执行命令：3,15 8-11 * * * command #实例4：每隔两天的上午8点到11点的第3和第15分钟执行命令：3,15 8-11 */2 * * command #实例5：每个星期一的上午8点到11点的第3和第15分钟执行命令：3,15 8-11 * * 1 command #实例6：每晚的21:30重启smb 命令：30 21 * * * /etc/init.d/smb restart #实例7：每月1、10、22日的4 : 45重启smb 命令：45 4 1,10,22 * * /etc/init.d/smb restart #实例8：每周六、周日的1 : 10重启smb命令：10 1 * * 6,0 /etc/init.d/smb restart #实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb 命令：0,30 18-23 * * * /etc/init.d/smb restart #实例10：每星期六的晚上11 : 00 pm重启smb 命令：0 23 * * 6 /etc/init.d/smb restart #实例11：每一小时重启smb 命令：* */1 * * * /etc/init.d/smb restart #实例12：晚上11点到早上7点之间，每隔一小时重启smb 命令：* 23-7/1 * * * /etc/init.d/smb restart #实例13：每月的4号与每周一到周三的11点重启smb 命令：0 11 4 * mon-wed /etc/init.d/smb restart 实例14：一月一号的4点重启smb 命令：0 4 1 jan * /etc/init.d/smb restart #实例14：每小时执行/etc/cron.hourly目录内的脚本命令：01 * * * * root run-parts /etc/cron.hourly","link":"/2020/06/16/v2ray%E5%AE%9A%E6%97%B6%E9%87%8D%E5%90%AF%E6%9C%8D%E5%8A%A1crontab/"}],"tags":[{"name":"Brook","slug":"Brook","link":"/tags/Brook/"},{"name":"翻墙","slug":"翻墙","link":"/tags/%E7%BF%BB%E5%A2%99/"},{"name":"定时重启","slug":"定时重启","link":"/tags/%E5%AE%9A%E6%97%B6%E9%87%8D%E5%90%AF/"},{"name":"brook","slug":"brook","link":"/tags/brook/"},{"name":"SSR","slug":"SSR","link":"/tags/SSR/"},{"name":"SS","slug":"SS","link":"/tags/SS/"},{"name":"科学上网","slug":"科学上网","link":"/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"},{"name":"v2ray","slug":"v2ray","link":"/tags/v2ray/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"}],"categories":[{"name":"科学上网","slug":"科学上网","link":"/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"},{"name":"SS","slug":"科学上网/SS","link":"/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/SS/"},{"name":"Brook","slug":"科学上网/Brook","link":"/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/Brook/"},{"name":"v2ray","slug":"科学上网/v2ray","link":"/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray/"},{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"SSR","slug":"科学上网/SSR","link":"/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/SSR/"}]}